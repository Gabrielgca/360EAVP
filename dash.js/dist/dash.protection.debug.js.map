{"version":3,"sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/webpack/bootstrap","webpack://dashjs/./node_modules/path-browserify/index.js","webpack://dashjs/./node_modules/process/browser.js","webpack://dashjs/./src/core/FactoryMaker.js","webpack://dashjs/./src/core/Utils.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/streaming/constants/Constants.js","webpack://dashjs/./src/streaming/constants/ProtectionConstants.js","webpack://dashjs/./src/streaming/protection/CommonEncryption.js","webpack://dashjs/./src/streaming/protection/Protection.js","webpack://dashjs/./src/streaming/protection/ProtectionEvents.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionController.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionKeyController.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemPlayReady.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemW3CClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemWidevine.js","webpack://dashjs/./src/streaming/protection/errors/ProtectionErrors.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_01b.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_21Jan2015.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_3Feb2014.js","webpack://dashjs/./src/streaming/protection/servers/ClearKey.js","webpack://dashjs/./src/streaming/protection/servers/DRMToday.js","webpack://dashjs/./src/streaming/protection/servers/PlayReady.js","webpack://dashjs/./src/streaming/protection/servers/Widevine.js","webpack://dashjs/./src/streaming/protection/vo/ClearKeyKeySet.js","webpack://dashjs/./src/streaming/protection/vo/KeyMessage.js","webpack://dashjs/./src/streaming/protection/vo/KeyPair.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemAccess.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemConfiguration.js","webpack://dashjs/./src/streaming/protection/vo/LicenseRequest.js","webpack://dashjs/./src/streaming/protection/vo/LicenseResponse.js","webpack://dashjs/./src/streaming/protection/vo/MediaCapability.js","webpack://dashjs/./src/streaming/protection/vo/NeedKey.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js"],"names":["FactoryMaker","instance","singletonContexts","singletonFactories","classFactories","extend","name","childInstance","override","context","getSingletonInstance","className","i","obj","setSingletonInstance","push","deleteSingletonInstances","filter","x","getFactoryByName","factoriesArray","updateFactory","factory","updateClassFactory","getClassFactoryByName","getClassFactory","classConstructor","__dashjs_factory_name","undefined","create","merge","arguments","updateSingletonFactory","getSingletonFactoryByName","getSingletonFactory","getInstance","args","classInstance","extensionObject","extension","apply","parent","prop","hasOwnProperty","getClassName","Utils","dest","source","copy","s","empty","mixin","src","r","Array","l","length","clone","url","params","modifiedUrl","URL","forEach","param","key","value","searchParams","set","href","e","headerStr","headers","headerPairs","trim","split","ilen","headerPair","index","indexOf","substring","dt","Date","getTime","uuid","replace","c","Math","random","floor","toString","string","hash","chr","charCodeAt","originalUrl","targetUrl","original","target","protocol","origin","relativePath","path","relative","pathname","substr","lastIndexOf","startIndexOffset","ErrorsBase","errors","config","publicOnly","err","EventsBase","events","evt","Constants","init","STREAM","VIDEO","AUDIO","TEXT","MUXED","IMAGE","STPP","TTML","VTT","WVTT","ABR_STRATEGY_DYNAMIC","ABR_STRATEGY_BOLA","ABR_STRATEGY_L2A","ABR_STRATEGY_LoLP","ABR_STRATEGY_THROUGHPUT","ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA","ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING","ABR_FETCH_THROUGHPUT_CALCULATION_AAST","LIVE_CATCHUP_MODE_DEFAULT","LIVE_CATCHUP_MODE_LOLP","MOVING_AVERAGE_SLIDING_WINDOW","MOVING_AVERAGE_EWMA","BAD_ARGUMENT_ERROR","MISSING_CONFIG_ERROR","TRACK_SWITCH_MODE_ALWAYS_REPLACE","TRACK_SWITCH_MODE_NEVER_REPLACE","TRACK_SELECTION_MODE_FIRST_TRACK","TRACK_SELECTION_MODE_HIGHEST_BITRATE","TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY","TRACK_SELECTION_MODE_WIDEST_RANGE","TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY","CMCD_MODE_QUERY","CMCD_MODE_HEADER","LOCATION","INITIALIZE","TEXT_SHOWING","TEXT_HIDDEN","CC1","CC3","UTF8","SCHEME_ID_URI","START_TIME","SERVICE_DESCRIPTION_LL_SCHEME","SUPPLEMENTAL_PROPERTY_LL_SCHEME","XML","ARRAY_BUFFER","DVB_REPORTING_URL","DVB_PROBABILITY","VIDEO_ELEMENT_READY_STATES","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","constants","ProtectionConstants","CLEARKEY_KEYSTEM_STRING","WIDEVINE_KEYSTEM_STRING","PLAYREADY_KEYSTEM_STRING","PLAYREADY_RECOMMENDATION_KEYSTEM_STRING","INITIALIZATION_DATA_TYPE_CENC","INITIALIZATION_DATA_TYPE_KEYIDS","INITIALIZATION_DATA_TYPE_WEBM","LICENSE_SERVER_MANIFEST_CONFIGURATIONS","attributes","prefixes","CommonEncryption","cpArray","retVal","cp","schemeIdUri","toLowerCase","pssh","offset","view","DataView","version","getUint8","getUint32","slice","keySystem","initData","psshList","parsePSSHList","cpData","BASE64","__text","decodeArray","buffer","data","dv","done","byteCursor","size","nextBox","systemID","boxStart","byteLength","val","mediaInfo","licenseServer","info","contentProtection","targetProtectionData","j","ckData","k","attribute","prefix","__prefix","APIS_ProtectionModel_01b","generateKeyRequest","addKey","cancelKeyRequest","needkey","keyerror","keyadded","keymessage","APIS_ProtectionModel_3Feb2014","setMediaKeys","MediaKeys","release","error","message","ready","close","Protection","createProtectionSystem","controller","protectionKeyController","ProtectionKeyController","setConfig","debug","initialize","protectionModel","_getProtectionModel","ProtectionController","eventBus","cmcdModel","settings","capabilities","setEncryptedMediaSupported","logger","getLogger","errHandler","videoElement","videoModel","getElement","onencrypted","mediaKeys","ProtectionModel_21Jan2015","_getAPI","ProtectionModel_3Feb2014","api","ProtectionModel_01b","warn","apis","Object","keys","dashjs","ProtectionEvents","ProtectionErrors","INTERNAL_KEY_MESSAGE","INTERNAL_KEY_STATUS_CHANGED","KEY_ADDED","KEY_ERROR","KEY_MESSAGE","KEY_SESSION_CLOSED","KEY_SESSION_CREATED","KEY_SESSION_REMOVED","KEY_STATUSES_CHANGED","KEY_SYSTEM_ACCESS_COMPLETE","KEY_SYSTEM_SELECTED","LICENSE_REQUEST_COMPLETE","LICENSE_REQUEST_SENDING","NEED_KEY","PROTECTION_CREATED","PROTECTION_DESTROYED","SERVER_CERTIFICATE_UPDATED","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","KEY_SESSION_UPDATED","protectionEvents","NEEDKEY_BEFORE_INITIALIZE_RETRIES","NEEDKEY_BEFORE_INITIALIZE_TIMEOUT","LICENSE_SERVER_REQUEST_RETRIES","LICENSE_SERVER_REQUEST_RETRY_INTERVAL","LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT","needkeyRetries","pendingKeySystemData","mediaInfoArr","protDataSet","sessionType","robustnessLevel","selectedKeySystem","keySystemSelectionInProgress","licenseRequestFilters","licenseResponseFilters","setup","on","_onKeyMessage","_onKeyStatusChanged","checkConfig","Error","initializeForMedia","supportedKS","getSupportedKeySystemsFromContentProtection","sort","ksA","ksB","indexA","ks","systemString","priority","indexB","_selectKeySystem","fromManifest","_selectInitialKeySystem","_initiateWithExistingKeySystem","requestedKeySystems","keySystemConfiguration","_getKeySystemConfiguration","configs","protData","keySystemAccess","requestKeySystemAccess","then","event","selectedSystemString","mksa","selectKeySystem","trigger","_getProtDataForKeySystem","serverCertificate","setServerCertificate","ksIdx","current","_loadOrCreateKeySession","DashJSError","KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE","KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE","findIndex","entry","keySystemInfo","isClearKey","kids","clearkeys","TextEncoder","encode","JSON","stringify","sessionId","loadKeySession","createKeySession","initDataForKS","getPSSHForKeySystem","_isKeyIdDuplicate","keyId","_isInitDataDuplicate","KEY_SESSION_CREATED_ERROR_CODE","KEY_SESSION_CREATED_ERROR_MESSAGE","keySystemString","clearMediaInfoArray","cps","sessions","getSessions","getKeyId","currentInitData","getAllInitData","initDataEquals","removeKeySession","sessionToken","closeKeySession","setMediaElement","element","_onNeedKey","off","setSessionType","setRobustnessLevel","level","setProtectionData","stop","reset","retryTimeout","clearTimeout","keySystemData","audioCapabilities","videoCapabilities","audioRobustness","videoRobustness","ksSessionType","distinctiveIdentifier","persistentState","media","type","MediaCapability","codec","KeySystemConfiguration","status","keyMessage","messageType","licenseServerModelInstance","getLicenseServerModelInstance","eventData","_sendLicenseRequestCompleteEvent","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE","getSessionId","processClearKeyLicenseRequest","updateKeySession","_issueLicenseRequest","licenseServerData","_getLicenseServerUrl","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE","reqHeaders","withCredentials","_updateHeaders","httpRequestHeaders","headersFromMessage","getRequestHeadersFromMessage","onLoad","xhr","responseHeaders","parseHttpHeaders","getAllResponseHeaders","licenseResponse","LicenseResponse","responseURL","response","_applyFilters","licenseMessage","getLicenseMessage","_reportError","onAbort","MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE","MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE","statusText","readyState","onError","reqPayload","getLicenseRequestFromMessage","reqMethod","getHTTPMethod","responseType","getResponseType","timeout","isNaN","httpTimeout","licenseRequest","LicenseRequest","retryAttempts","get","streaming","HTTPRequest","LICENSE","_doLicenseRequest","request","retriesCount","XMLHttpRequest","cmcd","enabled","cmcdMode","mode","cmcdParams","getQueryParameter","addAditionalQueryParameterToUrl","open","method","setRequestHeader","cmcdHeaders","getHeaderParameters","header","_retryRequest","retryInterval","retryIntervals","setTimeout","onload","ontimeout","onerror","onabort","payload","send","serverURL","laURL","getLicenseServerUrlFromMediaInfo","schemeIdURI","psshData","getPSSHData","getLicenseServerURLFromInitData","getServerURLFromMessage","errorMsg","getErrorResponse","filters","Promise","resolve","reduce","prev","next","retry","protection","ignoreEmeEncryptedEvent","initDataType","abInitData","ArrayBuffer","isView","String","fromCharCode","Uint8Array","getSupportedKeySystemsFromSegmentPssh","getKeySystems","setKeySystems","keySystems","setLicenseRequestFilters","setLicenseResponseFilters","clearkeyKeySystem","clearkeyW3CKeySystem","KeySystemPlayReady","KeySystemWidevine","KeySystemClearKey","KeySystemW3CClearKey","newKeySystems","getKeySystemBySystemString","initData1","initData2","data1","data2","cpIdx","cencContentProtection","findCencContentProtection","getInitData","cdmData","getCDMData","_getSessionId","_getSessionType","DRMToday","Widevine","PlayReady","ClearKey","getClearKeysFromProtectionData","protectionDataSet","getProtectionData","protectionData","clearkeySet","jsonMsg","parse","keyPairs","clearkeyID","clearkey","KeyPair","ClearKeyKeySet","parseInitDataFromContentProtection","cencDefaultKid","cencDefaultKidToBase64Representation","kid","btoa","match","map","a","parseInt","join","PRCDMData","messageFormat","msg","xmlDoc","parser","DOMParser","dataview","Uint16Array","parseFromString","headerNameList","getElementsByTagName","headerValueList","childNodes","nodeValue","Content","Challenge","decode","numRecords","getUint16","recordType","recordLength","recordData","record","laurl","luiurl","PSSHBoxType","playreadySystemID","uint8arraydecodedPROHeader","PROSize","PSSHSize","PSSHBoxBuffer","PSSHBox","PSSHData","pro","prheader","setUint32","setPlayReadyMessageFormat","format","_cdmData","customData","cdmDataBytes","MEDIA_KEYERR_CODE","MEDIA_KEYERR_UNKNOWN_CODE","MEDIA_KEYERR_CLIENT_CODE","MEDIA_KEYERR_SERVICE_CODE","MEDIA_KEYERR_OUTPUT_CODE","MEDIA_KEYERR_HARDWARECHANGE_CODE","MEDIA_KEYERR_DOMAIN_CODE","MEDIA_KEY_MESSAGE_ERROR_CODE","SERVER_CERTIFICATE_UPDATED_ERROR_CODE","KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE","MEDIA_KEYERR_UNKNOWN_MESSAGE","MEDIA_KEYERR_CLIENT_MESSAGE","MEDIA_KEYERR_SERVICE_MESSAGE","MEDIA_KEYERR_OUTPUT_MESSAGE","MEDIA_KEYERR_HARDWARECHANGE_MESSAGE","MEDIA_KEYERR_DOMAIN_MESSAGE","MEDIA_KEY_MESSAGE_ERROR_MESSAGE","SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE","KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE","protectionErrors","pendingSessions","moreSessionsAllowed","eventHandler","createEventHandler","removeEventListeners","concat","ksConfigurations","reject","ve","document","createElement","found","supportedAudio","supportedVideo","configIdx","videos","videoIdx","canPlayType","contentType","ksConfig","KeySystemAccess","errorMessage","mediaElement","addEventListener","ksInfo","newSession","getExpirationTime","NaN","getSessionType","keyID","handleEvent","NeedKey","findSessionByID","code","errorCode","systemCode","shift","KeyMessage","defaultURL","sessionArray","len","removeEventListener","SYSTEM_STRING_PRIORITY","numSessions","session","removeSession","closed","_closeKeySessionInternal","getUsable","_requestKeySystemAccessInternal","idx","navigator","requestMediaKeySystemAccess","protDataSystemStringPriority","systemStringPriority","currentKeySystem","systemStringsToApply","_checkAccessForKeySystem","mediaKeySystemAccess","configuration","getConfiguration","_checkAccessForSystemStrings","createMediaKeys","mkeys","createSession","createSessionToken","dataType","generateRequest","toJWK","update","load","success","remove","token","splice","parseKeyStatus","keyStatuses","keyStatus","expiration","getKeyStatuses","usable","audios","audioIdx","window","isTypeSupported","ksAccess","ksConfiguration","boundDoSetKeys","doSetKeys","bind","keySession","errorStr","destinationURL","serverResponse","keypair","keyid","license","keySystemStr","soap","uintToString","arrayBuffer","encodedString","decodedString","decodeURIComponent","escape","parseServerResponse","stringResponse","envelope","getElementsByTagNameNS","body","fault","parseErrorResponse","faultstring","statusCode","idStart","idEnd","detail","exception","node","firstChild","errorString","call","numKeys","jwk","kty","alg","jwkString","buf","bView","sessionTypes","initDataTypes","robustness","tcpid","actualurl","range","trequest","tresponse","responsecode","interval","trace","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","HTTPRequestTrace","d","b","t","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INIT_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","DVB_REPORTING_TYPE","OTHER_TYPE"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7SA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;ACvLtC;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,IAAMA,YAAY,GAAI,YAAY;AAE9B,MAAIC,QAAJ;AACA,MAAIC,iBAAiB,GAAG,EAAxB;AACA,MAAMC,kBAAkB,GAAG,EAA3B;AACA,MAAMC,cAAc,GAAG,EAAvB;;AAEA,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,aAAtB,EAAqCC,QAArC,EAA+CC,OAA/C,EAAwD;AACpD,QAAI,CAACA,OAAO,CAACH,IAAD,CAAR,IAAkBC,aAAtB,EAAqC;AACjCE,aAAO,CAACH,IAAD,CAAP,GAAgB;AACZL,gBAAQ,EAAEM,aADE;AAEZC,gBAAQ,EAAEA;AAFE,OAAhB;A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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACM9G,O;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,iBAAYsG,KAAZ,EAAmB5lB,GAAnB,EAAwB;AAAA;;AACpB,OAAK4lB,KAAL,GAAaA,KAAb;AACA,OAAK5lB,GAAL,GAAWA,GAAX;AACH,C;;AAGUsf,sEAAf,E;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;IACM6F,e;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,yBAAY9c,SAAZ,EAAuBghB,eAAvB,EAAwC;AAAA;;AACpC,OAAKhhB,SAAL,GAAiBA,SAAjB;AACA,OAAKghB,eAAL,GAAuBA,eAAvB;AACH,C;;AAGUlE,8EAAf,E;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;IACMrP,sB;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,gCAAYX,iBAAZ,EAA+BC,iBAA/B,EAAkDI,qBAAlD,EAAyEC,eAAzE,EAA0FuW,YAA1F,EAAwG;AAAA;;AACpG,OAAKC,aAAL,GAAqB,CAAE,MAAF,CAArB;;AACA,MAAI9W,iBAAiB,IAAIA,iBAAiB,CAAC3V,MAA3C,EAAmD;AAC/C,SAAK2V,iBAAL,GAAyBA,iBAAzB;AACH;;AACD,MAAIC,iBAAiB,IAAIA,iBAAiB,CAAC5V,MAA3C,EAAmD;AAC/C,SAAK4V,iBAAL,GAAyBA,iBAAzB;AACH;;AACD,OAAKI,qBAAL,GAA6BA,qBAA7B;AACA,OAAKC,eAAL,GAAuBA,eAAvB;AACA,OAAKuW,YAAL,GAAoBA,YAApB;AACH,C;;AAGUlW,qFAAf,E;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACMqD,c;AACF;AACJ;AACA;AACA;AACA;AACI,wBAAYzZ,GAAZ,EAAiB2a,MAAjB,EAAyBxB,YAAzB,EAAuCtY,OAAvC,EAAgD0W,eAAhD,EAAiEhB,WAAjE,EAA8EjD,SAA9E,EAAyFlK,IAAzF,EAA+F;AAAA;;AAE3F;AACR;AACA;AACQ,OAAKpJ,GAAL,GAAWA,GAAX;AAEA;AACR;AACA;;AACQ,OAAK2a,MAAL,GAAcA,MAAd;AAEA;AACR;AACA;;AACQ,OAAKxB,YAAL,GAAoBA,YAApB;AAEA;AACR;AACA;;AACQ,OAAKtY,OAAL,GAAeA,OAAf;AAEA;AACR;AACA;;AACQ,OAAK0W,eAAL,GAAuBA,eAAvB;AAEA;AACR;AACA;;AACQ,OAAKhB,WAAL,GAAmBA,WAAnB;AAEA;AACR;AACA;;AACQ,OAAKjD,SAAL,GAAiBA,SAAjB;AAEA;AACR;AACA;;AACQ,OAAKlK,IAAL,GAAYA,IAAZ;AACH,C;;AAGUqQ,6EAAf,E;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;IACMvB,e;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,yBAAYlY,GAAZ,EAAiBa,OAAjB,EAA0BuI,IAA1B,EAAgC;AAAA;;AAE5B;AACR;AACA;AACQ,OAAKpJ,GAAL,GAAWA,GAAX;AAEA;AACR;AACA;;AACQ,OAAKa,OAAL,GAAeA,OAAf;AAEA;AACR;AACA;;AACQ,OAAKuI,IAAL,GAAYA,IAAZ;AACH,C;;AAGU8O,8EAAf,E;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACMhC,e;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,yBAAYqP,WAAZ,EAAyBiH,UAAzB,EAAqC;AAAA;;AACjC,OAAKjH,WAAL,GAAmBA,WAAnB;AACA,OAAKiH,UAAL,GAAkBA,UAAlB;AACH,C;;AAGUtW,8EAAf,E;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACMkQ,O;AACF;AACJ;AACA;AACA;AACA;AACI,iBAAYxd,QAAZ,EAAsBiU,YAAtB,EAAoC;AAAA;;AAChC,OAAKjU,QAAL,GAAgBA,QAAhB;AACA,OAAKiU,YAAL,GAAoBA,YAApB;AACH,C;;AAGUuJ,sEAAf,E;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACM3T,W,GACF,qBAAY6T,IAAZ,EAAkBhb,OAAlB,EAA2BlC,IAA3B,EAAiC;AAAA;;AAC7B,OAAKkd,IAAL,GAAYA,IAAI,IAAI,IAApB;AACA,OAAKhb,OAAL,GAAeA,OAAO,IAAI,IAA1B;AACA,OAAKlC,IAAL,GAAYA,IAAI,IAAI,IAApB;AACH,C;;AAGUqJ,0EAAf,E;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;IACMoH,W;AACF;AACJ;AACA;AACI,uBAAc;AAAA;;AACV;AACR;AACA;AACA;AACQ,OAAK4S,KAAL,GAAa,IAAb;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,OAAKxW,IAAL,GAAY,IAAZ;AACA;AACR;AACA;AACA;;AACQ,OAAKjW,GAAL,GAAW,IAAX;AACA;AACR;AACA;AACA;;AACQ,OAAK0sB,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,KAAL,GAAa,IAAb;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,YAAL,GAAoB,IAApB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,KAAL,GAAa,EAAb;AAEA;AACR;AACA;AACA;;AACQ,OAAKC,OAAL,GAAe,IAAf;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,cAAL,GAAsB,IAAtB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,gBAAL,GAAwB,IAAxB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,gBAAL,GAAwB,IAAxB;AACH,C;AAGL;AACA;AACA;AACA;;;IACMC,gB;AACF;AACJ;AACA;AACI,4BAAc;AAAA;;AACV;AACR;AACA;AACA;AACQ,OAAKhuB,CAAL,GAAS,IAAT;AACA;AACR;AACA;AACA;;AACQ,OAAKiuB,CAAL,GAAS,IAAT;AACA;AACR;AACA;AACA;;AACQ,OAAKC,CAAL,GAAS,EAAT;AACA;AACR;AACA;AACA;;AACS,OAAKC,CAAL,GAAS,IAAT;AACJ,C;;AAGL7T,WAAW,CAAC8T,GAAZ,GAAkB,KAAlB;AACA9T,WAAW,CAAC+T,IAAZ,GAAmB,MAAnB;AACA/T,WAAW,CAACgU,QAAZ,GAAuB,KAAvB;AACAhU,WAAW,CAACiU,oBAAZ,GAAmC,gBAAnC;AACAjU,WAAW,CAACkU,iBAAZ,GAAgC,uBAAhC;AACAlU,WAAW,CAACmU,kBAAZ,GAAiC,cAAjC;AACAnU,WAAW,CAACoU,kBAAZ,GAAiC,cAAjC;AACApU,WAAW,CAACqU,gCAAZ,GAA+C,2BAA/C;AACArU,WAAW,CAACsU,8BAAZ,GAA6C,qBAA7C;AACAtU,WAAW,CAACuU,kBAAZ,GAAiC,cAAjC;AACAvU,WAAW,CAACC,OAAZ,GAAsB,SAAtB;AACAD,WAAW,CAACwU,UAAZ,GAAyB,OAAzB","file":"dash.protection.debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/streaming/protection/Protection.js\");\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @module FactoryMaker\r\n * @ignore\r\n */\r\nconst FactoryMaker = (function () {\r\n\r\n    let instance;\r\n    let singletonContexts = [];\r\n    const singletonFactories = {};\r\n    const classFactories = {};\r\n\r\n    function extend(name, childInstance, override, context) {\r\n        if (!context[name] && childInstance) {\r\n            context[name] = {\r\n                instance: childInstance,\r\n                override: override\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use this method from your extended object.  this.factory is injected into your object.\r\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\r\n     * will return the video model for use in the extended object.\r\n     *\r\n     * @param {Object} context - injected into extended object as this.context\r\n     * @param {string} className - string name found in all dash.js objects\r\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\r\n     * @returns {*} Context aware instance of specified singleton name.\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function getSingletonInstance(context, className) {\r\n        for (const i in singletonContexts) {\r\n            const obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                return obj.instance;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\r\n     *\r\n     * @param {Object} context\r\n     * @param {string} className\r\n     * @param {Object} instance\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function setSingletonInstance(context, className, instance) {\r\n        for (const i in singletonContexts) {\r\n            const obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                singletonContexts[i].instance = instance;\r\n                return;\r\n            }\r\n        }\r\n        singletonContexts.push({\r\n            name: className,\r\n            context: context,\r\n            instance: instance\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Use this method to remove all singleton instances associated with a particular context.\r\n     *\r\n     * @param {Object} context\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function deleteSingletonInstances(context) {\r\n        singletonContexts = singletonContexts.filter(x => x.context !== context);\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Factories storage Management\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function getFactoryByName(name, factoriesArray) {\r\n        return factoriesArray[name];\r\n    }\r\n\r\n    function updateFactory(name, factory, factoriesArray) {\r\n        if (name in factoriesArray) {\r\n            factoriesArray[name] = factory;\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Class Factories Management\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function updateClassFactory(name, factory) {\r\n        updateFactory(name, factory, classFactories);\r\n    }\r\n\r\n    function getClassFactoryByName(name) {\r\n        return getFactoryByName(name, classFactories);\r\n    }\r\n\r\n    function getClassFactory(classConstructor) {\r\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, classFactories);\r\n\r\n        if (!factory) {\r\n            factory = function (context) {\r\n                if (context === undefined) {\r\n                    context = {};\r\n                }\r\n                return {\r\n                    create: function () {\r\n                        return merge(classConstructor, context, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            classFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\r\n        }\r\n        return factory;\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Singleton Factory MAangement\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function updateSingletonFactory(name, factory) {\r\n        updateFactory(name, factory, singletonFactories);\r\n    }\r\n\r\n    function getSingletonFactoryByName(name) {\r\n        return getFactoryByName(name, singletonFactories);\r\n    }\r\n\r\n    function getSingletonFactory(classConstructor) {\r\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, singletonFactories);\r\n        if (!factory) {\r\n            factory = function (context) {\r\n                let instance;\r\n                if (context === undefined) {\r\n                    context = {};\r\n                }\r\n                return {\r\n                    getInstance: function () {\r\n                        // If we don't have an instance yet check for one on the context\r\n                        if (!instance) {\r\n                            instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\r\n                        }\r\n                        // If there's no instance on the context then create one\r\n                        if (!instance) {\r\n                            instance = merge(classConstructor, context, arguments);\r\n                            singletonContexts.push({\r\n                                name: classConstructor.__dashjs_factory_name,\r\n                                context: context,\r\n                                instance: instance\r\n                            });\r\n                        }\r\n                        return instance;\r\n                    }\r\n                };\r\n            };\r\n            singletonFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\r\n        }\r\n\r\n        return factory;\r\n    }\r\n\r\n    function merge(classConstructor, context, args) {\r\n\r\n        let classInstance;\r\n        const className = classConstructor.__dashjs_factory_name;\r\n        const extensionObject = context[className];\r\n\r\n        if (extensionObject) {\r\n\r\n            let extension = extensionObject.instance;\r\n\r\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\r\n\r\n                classInstance = classConstructor.apply({context}, args);\r\n                extension = extension.apply({\r\n                    context,\r\n                    factory: instance,\r\n                    parent: classInstance\r\n                }, args);\r\n\r\n                for (const prop in extension) {\r\n                    if (classInstance.hasOwnProperty(prop)) {\r\n                        classInstance[prop] = extension[prop];\r\n                    }\r\n                }\r\n\r\n            } else { //replace parent object completely with new object. Same as dijon.\r\n\r\n                return extension.apply({\r\n                    context,\r\n                    factory: instance\r\n                }, args);\r\n\r\n            }\r\n        } else {\r\n            // Create new instance of the class\r\n            classInstance = classConstructor.apply({context}, args);\r\n        }\r\n\r\n        // Add getClassName function to class instance prototype (used by Debug)\r\n        classInstance.getClassName = function () {return className;};\r\n\r\n        return classInstance;\r\n    }\r\n\r\n    instance = {\r\n        extend: extend,\r\n        getSingletonInstance: getSingletonInstance,\r\n        setSingletonInstance: setSingletonInstance,\r\n        deleteSingletonInstances: deleteSingletonInstances,\r\n        getSingletonFactory: getSingletonFactory,\r\n        getSingletonFactoryByName: getSingletonFactoryByName,\r\n        updateSingletonFactory: updateSingletonFactory,\r\n        getClassFactory: getClassFactory,\r\n        getClassFactoryByName: getClassFactoryByName,\r\n        updateClassFactory: updateClassFactory\r\n    };\r\n\r\n    return instance;\r\n\r\n}());\r\n\r\nexport default FactoryMaker;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\n\r\nimport path from 'path-browserify'\r\n\r\nclass Utils {\r\n    static mixin(dest, source, copy) {\r\n        let s;\r\n        let empty = {};\r\n        if (dest) {\r\n            for (let name in source) {\r\n                if (source.hasOwnProperty(name)) {\r\n                    s = source[name];\r\n                    if (!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\r\n                        if (typeof dest[name] === 'object' && dest[name] !== null) {\r\n                            dest[name] = Utils.mixin(dest[name], s, copy);\r\n                        } else {\r\n                            dest[name] = copy(s);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dest;\r\n    }\r\n\r\n    static clone(src) {\r\n        if (!src || typeof src !== 'object') {\r\n            return src; // anything\r\n        }\r\n        let r;\r\n        if (src instanceof Array) {\r\n            // array\r\n            r = [];\r\n            for (let i = 0, l = src.length; i < l; ++i) {\r\n                if (i in src) {\r\n                    r.push(Utils.clone(src[i]));\r\n                }\r\n            }\r\n        } else {\r\n            r = {};\r\n        }\r\n        return Utils.mixin(r, src, Utils.clone);\r\n    }\r\n\r\n    static addAditionalQueryParameterToUrl(url, params) {\r\n        try {\r\n            if (!params || params.length === 0) {\r\n                return url;\r\n            }\r\n\r\n            let modifiedUrl = new URL(url);\r\n\r\n            params.forEach((param) => {\r\n                if (param.key && param.value) {\r\n                    modifiedUrl.searchParams.set(param.key, param.value);\r\n                }\r\n            });\r\n\r\n            return modifiedUrl.href;\r\n\r\n\r\n        } catch (e) {\r\n            return url;\r\n        }\r\n    }\r\n\r\n    static parseHttpHeaders(headerStr) {\r\n        let headers = {};\r\n        if (!headerStr) {\r\n            return headers;\r\n        }\r\n\r\n        // Trim headerStr to fix a MS Edge bug with xhr.getAllResponseHeaders method\r\n        // which send a string starting with a \"\\n\" character\r\n        let headerPairs = headerStr.trim().split('\\u000d\\u000a');\r\n        for (let i = 0, ilen = headerPairs.length; i < ilen; i++) {\r\n            let headerPair = headerPairs[i];\r\n            let index = headerPair.indexOf('\\u003a\\u0020');\r\n            if (index > 0) {\r\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    static generateUuid() {\r\n        let dt = new Date().getTime();\r\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            const r = (dt + Math.random() * 16) % 16 | 0;\r\n            dt = Math.floor(dt / 16);\r\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return uuid;\r\n    }\r\n\r\n    static generateHashCode(string) {\r\n        let hash = 0;\r\n\r\n        if (string.length === 0) {\r\n            return hash;\r\n        }\r\n\r\n        for (let i = 0; i < string.length; i++) {\r\n            const chr = string.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    /**\r\n     * Compares both urls and returns a relative url (target relative to original)\r\n     * @param {string} original\r\n     * @param {string} target\r\n     * @return {string|*}\r\n     */\r\n    static getRelativeUrl(originalUrl, targetUrl) {\r\n        try {\r\n            const original = new URL(originalUrl);\r\n            const target = new URL(targetUrl);\r\n\r\n            // Unify the protocol to compare the origins\r\n            original.protocol = target.protocol;\r\n            if (original.origin !== target.origin) {\r\n                return targetUrl;\r\n            }\r\n\r\n            // Use the relative path implementation of the path library. We need to cut off the actual filename in the end to get the relative path\r\n            let relativePath = path.relative(original.pathname.substr(0, original.pathname.lastIndexOf('/')), target.pathname.substr(0, target.pathname.lastIndexOf('/')));\r\n\r\n            // In case the relative path is empty (both path are equal) return the filename only. Otherwise add a slash in front of the filename\r\n            const startIndexOffset = relativePath.length === 0 ? 1 : 0;\r\n            relativePath += target.pathname.substr(target.pathname.lastIndexOf('/') + startIndexOffset, target.pathname.length - 1);\r\n\r\n            // Build the other candidate, e.g. the 'host relative' path that starts with \"/\", and return the shortest of the two candidates.\r\n            if (target.pathname.length < relativePath.length) {\r\n                return target.pathname;\r\n            }\r\n            return relativePath;\r\n        } catch (e) {\r\n            return targetUrl\r\n        }\r\n    }\r\n}\r\n\r\nexport default Utils;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ErrorsBase {\r\n    extend (errors, config) {\r\n        if (!errors) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const err in errors) {\r\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\r\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\r\n            this[err] = errors[err];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventsBase {\r\n    extend (events, config) {\r\n        if (!events) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const evt in events) {\r\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\r\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\r\n            this[evt] = events[evt];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Constants declaration\r\n * @class\r\n * @ignore\r\n * @hideconstructor\r\n */\r\nclass Constants {\r\n\r\n    init() {\r\n        /**\r\n         *  @constant {string} STREAM Stream media type. Mainly used to report metrics relative to the full stream\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.STREAM = 'stream';\r\n\r\n        /**\r\n         *  @constant {string} VIDEO Video media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.VIDEO = 'video';\r\n\r\n        /**\r\n         *  @constant {string} AUDIO Audio media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.AUDIO = 'audio';\r\n\r\n        /**\r\n         *  @constant {string} TEXT Text media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TEXT = 'text';\r\n\r\n        /**\r\n         *  @constant {string} MUXED Muxed (video/audio in the same chunk) media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MUXED = 'muxed';\r\n\r\n        /**\r\n         *  @constant {string} IMAGE Image media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.IMAGE = 'image';\r\n\r\n        /**\r\n         *  @constant {string} STPP STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.STPP = 'stpp';\r\n\r\n        /**\r\n         *  @constant {string} TTML STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TTML = 'ttml';\r\n\r\n        /**\r\n         *  @constant {string} VTT STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.VTT = 'vtt';\r\n\r\n        /**\r\n         *  @constant {string} WVTT STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.WVTT = 'wvtt';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_DYNAMIC Dynamic Adaptive bitrate algorithm\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_DYNAMIC = 'abrDynamic';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_BOLA Adaptive bitrate algorithm based on Bola (buffer level)\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_BOLA = 'abrBola';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_L2A Adaptive bitrate algorithm based on L2A (online learning)\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_L2A = 'abrL2A';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_LoLP Adaptive bitrate algorithm based on LoL+\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_LoLP = 'abrLoLP';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_THROUGHPUT Adaptive bitrate algorithm based on throughput\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_THROUGHPUT = 'abrThroughput';\r\n\r\n        /**\r\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALUCUALTION_DOWNLOADED_DATA Throughput calculation based on downloaded data array\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA = 'abrFetchThroughputCalculationDownloadedData';\r\n\r\n        /**\r\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING = 'abrFetchThroughputCalculationMoofParsing';\r\n\r\n        /**\r\n        *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_AAST Throughput calculation based on adjusted availability start time in low latency mode\r\n        *  @memberof Constants#\r\n        *  @static\r\n        */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_AAST = 'abrFetchThroughputCalculationAAST';\r\n\r\n        /**\r\n         *  @constant {string} LIVE_CATCHUP_MODE_DEFAULT Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.LIVE_CATCHUP_MODE_DEFAULT = 'liveCatchupModeDefault';\r\n\r\n        /**\r\n         *  @constant {string} LIVE_CATCHUP_MODE_LOLP Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.LIVE_CATCHUP_MODE_LOLP = 'liveCatchupModeLoLP';\r\n\r\n        /**\r\n         *  @constant {string} MOVING_AVERAGE_SLIDING_WINDOW Moving average sliding window\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MOVING_AVERAGE_SLIDING_WINDOW = 'slidingWindow';\r\n\r\n        /**\r\n         *  @constant {string} EWMA Exponential moving average\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MOVING_AVERAGE_EWMA = 'ewma';\r\n\r\n        /**\r\n         *  @constant {string} BAD_ARGUMENT_ERROR Invalid Arguments type of error\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.BAD_ARGUMENT_ERROR = 'Invalid Arguments';\r\n\r\n        /**\r\n         *  @constant {string} MISSING_CONFIG_ERROR Missing configuration parameters type of error\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MISSING_CONFIG_ERROR = 'Missing config parameter(s)';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SWITCH_MODE_ALWAYS_REPLACE used to clear the buffered data (prior to current playback position) after track switch. Default for audio\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SWITCH_MODE_ALWAYS_REPLACE = 'alwaysReplace';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SWITCH_MODE_NEVER_REPLACE used to forbid clearing the buffered data (prior to current playback position) after track switch. Defers to fastSwitchEnabled for placement of new data. Default for video\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SWITCH_MODE_NEVER_REPLACE = 'neverReplace';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_FIRST_TRACK makes the player select the first track found in the manifest.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_FIRST_TRACK = 'firstTrack';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_BITRATE makes the player select the track with a highest bitrate. This mode is a default mode.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_HIGHEST_BITRATE = 'highestBitrate';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY makes the player select the track with the lowest bitrate per pixel average.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY = 'highestEfficiency';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with a widest range of bitrates.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_WIDEST_RANGE = 'widestRange';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with the highest selectionPriority as defined in the manifest\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY = 'highestSelectionPriority';\r\n\r\n        /**\r\n         *  @constant {string} CMCD_MODE_QUERY specifies to attach CMCD metrics as query parameters.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_MODE_QUERY = 'query';\r\n\r\n        /**\r\n         *  @constant {string} CMCD_MODE_HEADER specifies to attach CMCD metrics as HTTP headers.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_MODE_HEADER = 'header';\r\n\r\n\r\n        this.LOCATION = 'Location';\r\n        this.INITIALIZE = 'initialize';\r\n        this.TEXT_SHOWING = 'showing';\r\n        this.TEXT_HIDDEN = 'hidden';\r\n        this.CC1 = 'CC1';\r\n        this.CC3 = 'CC3';\r\n        this.UTF8 = 'utf-8';\r\n        this.SCHEME_ID_URI = 'schemeIdUri';\r\n        this.START_TIME = 'starttime';\r\n        this.SERVICE_DESCRIPTION_LL_SCHEME = 'urn:dvb:dash:lowlatency:scope:2019';\r\n        this.SUPPLEMENTAL_PROPERTY_LL_SCHEME = 'urn:dvb:dash:lowlatency:critical:2019';\r\n        this.XML = 'XML';\r\n        this.ARRAY_BUFFER = 'ArrayBuffer';\r\n        this.DVB_REPORTING_URL = 'dvb:reportingUrl';\r\n        this.DVB_PROBABILITY = 'dvb:probability';\r\n        this.VIDEO_ELEMENT_READY_STATES = {\r\n            HAVE_NOTHING: 0,\r\n            HAVE_METADATA: 1,\r\n            HAVE_CURRENT_DATA: 2,\r\n            HAVE_FUTURE_DATA: 3,\r\n            HAVE_ENOUGH_DATA: 4\r\n        };\r\n    }\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n}\r\n\r\nconst constants = new Constants();\r\nexport default constants;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Protection Constants declaration\r\n * @class\r\n * @ignore\r\n */\r\nclass ProtectionConstants {\r\n\r\n    init () {\r\n        this.CLEARKEY_KEYSTEM_STRING = 'org.w3.clearkey';\r\n        this.WIDEVINE_KEYSTEM_STRING = 'com.widevine.alpha';\r\n        this.PLAYREADY_KEYSTEM_STRING = 'com.microsoft.playready';\r\n        this.PLAYREADY_RECOMMENDATION_KEYSTEM_STRING = 'com.microsoft.playready.recommendation';\r\n        this.INITIALIZATION_DATA_TYPE_CENC = 'cenc';\r\n        this.INITIALIZATION_DATA_TYPE_KEYIDS = 'keyids'\r\n        this.INITIALIZATION_DATA_TYPE_WEBM = 'webm'\r\n    }\r\n\r\n    constructor () {\r\n        this.init();\r\n    }\r\n}\r\n\r\nlet constants = new ProtectionConstants();\r\nexport default constants;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nconst LICENSE_SERVER_MANIFEST_CONFIGURATIONS = {\r\n    attributes: ['Laurl','laurl'],\r\n    prefixes: ['clearkey', 'dashif']\r\n};\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass CommonEncryption {\r\n    /**\r\n     * Find and return the ContentProtection element in the given array\r\n     * that indicates support for MPEG Common Encryption\r\n     *\r\n     * @param {Array} cpArray array of content protection elements\r\n     * @returns {Object|null} the Common Encryption content protection element or\r\n     * null if one was not found\r\n     */\r\n    static findCencContentProtection(cpArray) {\r\n        let retVal = null;\r\n        for (let i = 0; i < cpArray.length; ++i) {\r\n            let cp = cpArray[i];\r\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\r\n                (cp.value.toLowerCase() === 'cenc' || cp.value.toLowerCase() === 'cbcs'))\r\n                retVal = cp;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    /**\r\n     * Returns just the data portion of a single PSSH\r\n     *\r\n     * @param {ArrayBuffer} pssh - the PSSH\r\n     * @return {ArrayBuffer} data portion of the PSSH\r\n     */\r\n    static getPSSHData(pssh) {\r\n        let offset = 8; // Box size and type fields\r\n        let view = new DataView(pssh);\r\n\r\n        // Read version\r\n        let version = view.getUint8(offset);\r\n\r\n        offset += 20; // Version (1), flags (3), system ID (16)\r\n\r\n        if (version > 0) {\r\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\r\n        }\r\n\r\n        offset += 4; // Data size\r\n        return pssh.slice(offset);\r\n    }\r\n\r\n    /**\r\n     * Returns the PSSH associated with the given key system from the concatenated\r\n     * list of PSSH boxes in the given initData\r\n     *\r\n     * @param {KeySystem} keySystem the desired\r\n     * key system\r\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\r\n     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found\r\n     * or null if a valid association could not be found.\r\n     */\r\n    static getPSSHForKeySystem(keySystem, initData) {\r\n        let psshList = CommonEncryption.parsePSSHList(initData);\r\n        if (keySystem && psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\r\n            return psshList[keySystem.uuid.toLowerCase()];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parse a standard common encryption PSSH which contains a simple\r\n     * base64-encoding of the init data\r\n     *\r\n     * @param {Object} cpData the ContentProtection element\r\n     * @param {BASE64} BASE64 reference\r\n     * @returns {ArrayBuffer|null} the init data or null if not found\r\n     */\r\n    static parseInitDataFromContentProtection(cpData, BASE64) {\r\n        if ('pssh' in cpData) {\r\n\r\n            // Remove whitespaces and newlines from pssh text\r\n            cpData.pssh.__text = cpData.pssh.__text.replace(/\\r?\\n|\\r/g, '').replace(/\\s+/g, '');\r\n\r\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\r\n     *\r\n     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by\r\n     * CDM as initialization data when CommonEncryption content is detected\r\n     * @returns {Object|Array} an object that has a property named according to each of\r\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\r\n     * and a ArrayBuffer (the entire PSSH box) as the property value\r\n     */\r\n    static parsePSSHList(data) {\r\n\r\n        if (data === null || data === undefined)\r\n            return [];\r\n\r\n        let dv = new DataView(data.buffer || data); // data.buffer first for Uint8Array support\r\n        let done = false;\r\n        let pssh = {};\r\n\r\n        // TODO: Need to check every data read for end of buffer\r\n        let byteCursor = 0;\r\n        while (!done) {\r\n\r\n            let size,\r\n                nextBox,\r\n                version,\r\n                systemID;\r\n            let boxStart = byteCursor;\r\n\r\n            if (byteCursor >= dv.buffer.byteLength)\r\n                break;\r\n\r\n            /* Box size */\r\n            size = dv.getUint32(byteCursor);\r\n            nextBox = byteCursor + size;\r\n            byteCursor += 4;\r\n\r\n            /* Verify PSSH */\r\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor += 4;\r\n\r\n            /* Version must be 0 or 1 */\r\n            version = dv.getUint8(byteCursor);\r\n            if (version !== 0 && version !== 1) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor++;\r\n\r\n            byteCursor += 3; /* skip flags */\r\n\r\n            // 16-byte UUID/SystemID\r\n            systemID = '';\r\n            let i, val;\r\n            for (i = 0; i < 4; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 4;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 6; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 6;\r\n\r\n            systemID = systemID.toLowerCase();\r\n\r\n            /* PSSH Data Size */\r\n            byteCursor += 4;\r\n\r\n            /* PSSH Data */\r\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\r\n            byteCursor = nextBox;\r\n        }\r\n\r\n        return pssh;\r\n    }\r\n\r\n    static getLicenseServerUrlFromMediaInfo(mediaInfo, schemeIdUri) {\r\n        try {\r\n\r\n            if (!mediaInfo || mediaInfo.length === 0) {\r\n                return null;\r\n            }\r\n\r\n            let i = 0;\r\n            let licenseServer = null;\r\n\r\n            while (i < mediaInfo.length && !licenseServer) {\r\n                const info = mediaInfo[i];\r\n\r\n                if (info && info.contentProtection && info.contentProtection.length > 0) {\r\n                    const targetProtectionData = info.contentProtection.filter((cp) => {\r\n                        return cp.schemeIdUri && cp.schemeIdUri === schemeIdUri;\r\n                    });\r\n\r\n                    if (targetProtectionData && targetProtectionData.length > 0) {\r\n                        let j = 0;\r\n                        while (j < targetProtectionData.length && !licenseServer) {\r\n                            const ckData = targetProtectionData[j];\r\n                            let k = 0;\r\n                            while (k < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes.length && !licenseServer) {\r\n                                let l = 0;\r\n                                const attribute = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes[k];\r\n                                while (l < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes.length && !licenseServer) {\r\n                                    const prefix = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes[l];\r\n                                    if (ckData[attribute] && ckData[attribute].__prefix && ckData[attribute].__prefix === prefix && ckData[attribute].__text) {\r\n                                        licenseServer = ckData[attribute].__text;\r\n                                    }\r\n                                    l += 1;\r\n                                }\r\n                                k += 1;\r\n                            }\r\n                            j += 1;\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return licenseServer;\r\n        } catch\r\n            (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default CommonEncryption;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ProtectionController from './controllers/ProtectionController';\r\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\r\nimport ProtectionEvents from './ProtectionEvents';\r\nimport ProtectionErrors from './errors/ProtectionErrors';\r\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\r\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\r\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\r\n\r\nconst APIS_ProtectionModel_01b = [\r\n    // Un-prefixed as per spec\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'generateKeyRequest',\r\n        addKey: 'addKey',\r\n        cancelKeyRequest: 'cancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        keyerror: 'keyerror',\r\n        keyadded: 'keyadded',\r\n        keymessage: 'keymessage'\r\n    },\r\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'webkitGenerateKeyRequest',\r\n        addKey: 'webkitAddKey',\r\n        cancelKeyRequest: 'webkitCancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'webkitneedkey',\r\n        keyerror: 'webkitkeyerror',\r\n        keyadded: 'webkitkeyadded',\r\n        keymessage: 'webkitkeymessage'\r\n    }\r\n];\r\n\r\nconst APIS_ProtectionModel_3Feb2014 = [\r\n    // Un-prefixed as per spec\r\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'setMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        error: 'keyerror',\r\n        message: 'keymessage',\r\n        ready: 'keyadded',\r\n        close: 'keyclose'\r\n    },\r\n    // MS-prefixed (IE11, Windows 8.1)\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'msSetMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MSMediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n        // Events\r\n        needkey: 'msneedkey',\r\n        error: 'mskeyerror',\r\n        message: 'mskeymessage',\r\n        ready: 'mskeyadded',\r\n        close: 'mskeyclose'\r\n    }\r\n];\r\n\r\nfunction Protection() {\r\n    let instance;\r\n    const context = this.context;\r\n\r\n    /**\r\n     * Create a ProtectionController and associated ProtectionModel for use with\r\n     * a single piece of content.\r\n     *\r\n     * @param {Object} config\r\n     * @return {ProtectionController} protection controller\r\n     *\r\n     */\r\n    function createProtectionSystem(config) {\r\n        let controller = null;\r\n\r\n        const protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        protectionKeyController.setConfig({ debug: config.debug, BASE64: config.BASE64 });\r\n        protectionKeyController.initialize();\r\n\r\n        let protectionModel =  _getProtectionModel(config);\r\n\r\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\r\n            controller = ProtectionController(context).create({\r\n                protectionModel: protectionModel,\r\n                protectionKeyController: protectionKeyController,\r\n                eventBus: config.eventBus,\r\n                debug: config.debug,\r\n                events: config.events,\r\n                BASE64: config.BASE64,\r\n                constants: config.constants,\r\n                cmcdModel: config.cmcdModel,\r\n                settings: config.settings\r\n            });\r\n            config.capabilities.setEncryptedMediaSupported(true);\r\n        }\r\n        return controller;\r\n    }\r\n\r\n    function _getProtectionModel(config) {\r\n        const debug = config.debug;\r\n        const logger = debug.getLogger(instance);\r\n        const eventBus = config.eventBus;\r\n        const errHandler = config.errHandler;\r\n        const videoElement = config.videoModel ? config.videoModel.getElement() : null;\r\n\r\n        if ((!videoElement || videoElement.onencrypted !== undefined) &&\r\n            (!videoElement || videoElement.mediaKeys !== undefined)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_21Jan2015)');\r\n            return ProtectionModel_21Jan2015(context).create({ debug: debug, eventBus: eventBus, events: config.events });\r\n        } else if (_getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_3Feb2014)');\r\n            return ProtectionModel_3Feb2014(context).create({ debug: debug, eventBus: eventBus, events: config.events, api: _getAPI(videoElement, APIS_ProtectionModel_3Feb2014) });\r\n        } else if (_getAPI(videoElement, APIS_ProtectionModel_01b)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_01b)');\r\n            return ProtectionModel_01b(context).create({ debug: debug, eventBus: eventBus, errHandler: errHandler, events: config.events, api: _getAPI(videoElement, APIS_ProtectionModel_01b) });\r\n        } else {\r\n            logger.warn('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getAPI(videoElement, apis) {\r\n        for (let i = 0; i < apis.length; i++) {\r\n            const api = apis[i];\r\n            // detect if api is supported by browser\r\n            // check only first function in api -> should be fine\r\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\r\n                continue;\r\n            }\r\n\r\n            return api;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        createProtectionSystem\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtection.__dashjs_factory_name = 'Protection';\r\nconst factory = dashjs.FactoryMaker.getClassFactory(Protection); /* jshint ignore:line */\r\nfactory.events = ProtectionEvents;\r\nfactory.errors = ProtectionErrors;\r\ndashjs.FactoryMaker.updateClassFactory(Protection.__dashjs_factory_name, factory); /* jshint ignore:line */\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../../core/events/EventsBase';\r\n/**\r\n * @class\r\n  */\r\nclass ProtectionEvents extends EventsBase {\r\n    /**\r\n     * @description Public facing external events to be used when including protection package.\r\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\r\n     * via MediaPlayer.events.  public_ is the prefix that we use to move event names to MediaPlayerEvents.\r\n     */\r\n    constructor () {\r\n        super();\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         *\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when the status of one decryption keys has changed\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_STATUS_CHANGED = 'internalkeyStatusChanged';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key has been added\r\n         *\r\n         * @constant\r\n         * @deprecated The latest versions of the EME specification no longer\r\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\r\n         * is preferred.\r\n         * @event ProtectionEvents#KEY_ADDED\r\n         */\r\n        this.KEY_ADDED = 'public_keyAdded';\r\n        /**\r\n         * Event ID for events delivered when an error is encountered by the CDM\r\n         * while processing a license server response message\r\n         * @event ProtectionEvents#KEY_ERROR\r\n         */\r\n        this.KEY_ERROR = 'public_keyError';\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         * @event ProtectionEvents#KEY_MESSAGE\r\n         */\r\n        this.KEY_MESSAGE = 'public_keyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session close\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\r\n         */\r\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key sessions creation\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CREATED\r\n         */\r\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session removal\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\r\n         */\r\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\r\n\r\n        /**\r\n         * Event ID for events delivered when the status of one or more\r\n         * decryption keys has changed\r\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\r\n         */\r\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system access procedure\r\n         * has completed\r\n         * @ignore\r\n         */\r\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'public_keySystemAccessComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system selection procedure\r\n         * completes\r\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\r\n         */\r\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\r\n\r\n        /**\r\n         * Event ID for events delivered when a license request procedure\r\n         * has completed\r\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\r\n         */\r\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\r\n\r\n        /**\r\n         * Sending a license rquest\r\n         * @event ProtectionEvents#LICENSE_REQUEST_SENDING\r\n         */\r\n        this.LICENSE_REQUEST_SENDING = 'public_licenseRequestSending';\r\n\r\n        /**\r\n         * Event ID for needkey/encrypted events\r\n         * @ignore\r\n         */\r\n        this.NEED_KEY = 'needkey';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is detected and created.\r\n         * @event ProtectionEvents#PROTECTION_CREATED\r\n         */\r\n        this.PROTECTION_CREATED = 'public_protectioncreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is destroyed.\r\n         * @event ProtectionEvents#PROTECTION_DESTROYED\r\n         */\r\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new server certificate has\r\n         * been delivered to the CDM\r\n         * @ignore\r\n         */\r\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the process of shutting down\r\n         * a protection set has completed\r\n         * @ignore\r\n         */\r\n        this.TEARDOWN_COMPLETE =  'protectionTeardownComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a HTMLMediaElement has been\r\n         * associated with the protection set\r\n         * @ignore\r\n         */\r\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\r\n\r\n        /**\r\n         * Triggered when the key session has been updated successfully\r\n         * @ignore\r\n         */\r\n        this.KEY_SESSION_UPDATED = 'public_keySessionUpdated';\r\n    }\r\n}\r\n\r\nlet protectionEvents = new ProtectionEvents();\r\nexport default protectionEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport MediaCapability from '../vo/MediaCapability';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport LicenseRequest from '../vo/LicenseRequest';\r\nimport LicenseResponse from '../vo/LicenseResponse';\r\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\r\nimport Utils from '../../../core/Utils';\r\nimport Constants from '../../constants/Constants';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\nconst NEEDKEY_BEFORE_INITIALIZE_RETRIES = 5;\r\nconst NEEDKEY_BEFORE_INITIALIZE_TIMEOUT = 500;\r\n\r\nconst LICENSE_SERVER_REQUEST_RETRIES = 3;\r\nconst LICENSE_SERVER_REQUEST_RETRY_INTERVAL = 1000;\r\nconst LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT = 8000;\r\n\r\n/**\r\n * @module ProtectionController\r\n * @description Provides access to media protection information and functionality.  Each\r\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\r\n * which encapsulates a set of protection information (EME APIs, selected key system,\r\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\r\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\r\n * functionality provided in {@link ProtectionKeyController}.\r\n * @todo ProtectionController does almost all of its tasks automatically after init() is\r\n * called.  Applications might want more control over this process and want to go through\r\n * each step manually (key system selection, session creation, session maintenance).\r\n * This module can be accessed using the MediaPlayer API getProtectionController()\r\n * @param {Object} config\r\n */\r\n\r\nfunction ProtectionController(config) {\r\n\r\n    config = config || {};\r\n    const protectionKeyController = config.protectionKeyController;\r\n    let protectionModel = config.protectionModel;\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const BASE64 = config.BASE64;\r\n    const constants = config.constants;\r\n    let needkeyRetries = [];\r\n    const cmcdModel = config.cmcdModel;\r\n    const settings = config.settings;\r\n\r\n    let instance,\r\n        logger,\r\n        pendingKeySystemData,\r\n        mediaInfoArr,\r\n        protDataSet,\r\n        sessionType,\r\n        robustnessLevel,\r\n        selectedKeySystem,\r\n        keySystemSelectionInProgress,\r\n        licenseRequestFilters,\r\n        licenseResponseFilters;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        pendingKeySystemData = [];\r\n        mediaInfoArr = [];\r\n        sessionType = 'temporary';\r\n        robustnessLevel = '';\r\n        licenseRequestFilters = [];\r\n        licenseResponseFilters = [];\r\n        eventBus.on(events.INTERNAL_KEY_MESSAGE, _onKeyMessage, instance);\r\n        eventBus.on(events.INTERNAL_KEY_STATUS_CHANGED, _onKeyStatusChanged, instance);\r\n    }\r\n\r\n    function checkConfig() {\r\n        if (!eventBus || !eventBus.hasOwnProperty('on') || !protectionKeyController || !protectionKeyController.hasOwnProperty('getSupportedKeySystemsFromContentProtection')) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize this protection system for a given media type.\r\n     *\r\n     * @param {StreamInfo} [mediaInfo] Media information\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function initializeForMedia(mediaInfo) {\r\n        // Not checking here if a session for similar KS/KID combination is already created\r\n        // because still don't know which keysystem will be selected.\r\n        // Once Keysystem is selected and before creating the session, we will do that check\r\n        // so we create the strictly necessary DRM sessions\r\n        if (!mediaInfo) {\r\n            throw new Error('mediaInfo can not be null or undefined');\r\n        }\r\n\r\n        checkConfig();\r\n\r\n        mediaInfoArr.push(mediaInfo);\r\n\r\n        // ContentProtection elements are specified at the AdaptationSet level, so the CP for audio\r\n        // and video will be the same. Just use one valid MediaInfo object\r\n        let supportedKS = protectionKeyController.getSupportedKeySystemsFromContentProtection(mediaInfo.contentProtection, protDataSet, sessionType);\r\n\r\n        // Reorder key systems according to priority order provided in protectionData\r\n        supportedKS = supportedKS.sort((ksA, ksB) => {\r\n            let indexA = (protDataSet && protDataSet[ksA.ks.systemString] && protDataSet[ksA.ks.systemString].priority >= 0) ? protDataSet[ksA.ks.systemString].priority : supportedKS.length;\r\n            let indexB = (protDataSet && protDataSet[ksB.ks.systemString] && protDataSet[ksB.ks.systemString].priority >= 0) ? protDataSet[ksB.ks.systemString].priority : supportedKS.length;\r\n            return indexA - indexB;\r\n        });\r\n\r\n        if (supportedKS && supportedKS.length > 0) {\r\n            _selectKeySystem(supportedKS, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Selects a key system if we dont have any one yet. Otherwise we use the existing key system and trigger a new license request if the initdata has changed\r\n     * @param {array} supportedKS\r\n     * @param {boolean} fromManifest\r\n     * @private\r\n     */\r\n    function _selectKeySystem(supportedKS, fromManifest) {\r\n\r\n        // We are in the process of selecting a key system, so just save the data which might be coming from additional AdaptationSets.\r\n        if (keySystemSelectionInProgress) {\r\n            pendingKeySystemData.push(supportedKS);\r\n        }\r\n\r\n        // First time, so we need to select a key system\r\n        else if (!selectedKeySystem) {\r\n            _selectInitialKeySystem(supportedKS, fromManifest);\r\n        }\r\n\r\n        // We already selected a key system. We only need to trigger a new license exchange if the init data has changed\r\n        else if (selectedKeySystem) {\r\n            _initiateWithExistingKeySystem(supportedKS);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * We do not have a key system yet. Select one\r\n     * @param {array} supportedKS\r\n     * @param {boolean} fromManifest\r\n     * @private\r\n     */\r\n    function _selectInitialKeySystem(supportedKS, fromManifest) {\r\n        keySystemSelectionInProgress = true;\r\n        const requestedKeySystems = [];\r\n\r\n        pendingKeySystemData.push(supportedKS);\r\n\r\n        // Add all key systems to our request list since we have yet to select a key system\r\n        for (let i = 0; i < supportedKS.length; i++) {\r\n            const keySystemConfiguration = _getKeySystemConfiguration(supportedKS[i]);\r\n            requestedKeySystems.push({\r\n                ks: supportedKS[i].ks,\r\n                configs: [keySystemConfiguration],\r\n                protData: supportedKS[i].protData\r\n            });\r\n        }\r\n\r\n        let keySystemAccess;\r\n\r\n        protectionModel.requestKeySystemAccess(requestedKeySystems)\r\n            .then((event) => {\r\n                keySystemAccess = event.data;\r\n                let selectedSystemString = keySystemAccess.mksa && keySystemAccess.mksa.selectedSystemString ? keySystemAccess.mksa.selectedSystemString : keySystemAccess.keySystem.systemString;\r\n                logger.info('DRM: KeySystem Access Granted for system string (' + selectedSystemString + ')!  Selecting key system...');\r\n                return protectionModel.selectKeySystem(keySystemAccess);\r\n            })\r\n            .then((keySystem) => {\r\n                selectedKeySystem = keySystem;\r\n                keySystemSelectionInProgress = false;\r\n\r\n                if (!protectionModel) {\r\n                    return;\r\n                }\r\n\r\n                eventBus.trigger(events.KEY_SYSTEM_SELECTED, { data: keySystemAccess });\r\n\r\n                // Set server certificate from protData\r\n                const protData = _getProtDataForKeySystem(selectedKeySystem);\r\n                if (protData && protData.serverCertificate && protData.serverCertificate.length > 0) {\r\n                    protectionModel.setServerCertificate(BASE64.decodeArray(protData.serverCertificate).buffer);\r\n                }\r\n\r\n                // Create key sessions for the different AdaptationSets\r\n                let ksIdx;\r\n                for (let i = 0; i < pendingKeySystemData.length; i++) {\r\n                    for (ksIdx = 0; ksIdx < pendingKeySystemData[i].length; ksIdx++) {\r\n                        if (selectedKeySystem === pendingKeySystemData[i][ksIdx].ks) {\r\n                            const current = pendingKeySystemData[i][ksIdx]\r\n                            _loadOrCreateKeySession(current)\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch((event) => {\r\n                selectedKeySystem = null;\r\n                keySystemSelectionInProgress = false;\r\n                if (!fromManifest) {\r\n                    eventBus.trigger(events.KEY_SYSTEM_SELECTED, {\r\n                        data: null,\r\n                        error: new DashJSError(ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + 'Error selecting key system! -- ' + event.error)\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n    /**\r\n     * If we have already selected a keysytem we only need to create a new key session and issue a new license request if the init data has changed.\r\n     * @param {array} supportedKS\r\n     * @private\r\n     */\r\n    function _initiateWithExistingKeySystem(supportedKS) {\r\n        const ksIdx = supportedKS.findIndex((entry) => {\r\n            return entry.ks === selectedKeySystem;\r\n        });\r\n\r\n        const current = supportedKS[ksIdx];\r\n        if (ksIdx === -1 || !current.initData) {\r\n            return;\r\n        }\r\n\r\n        _loadOrCreateKeySession(current);\r\n    }\r\n\r\n    /**\r\n     * Loads an existing key session if we already have a session id. Otherwise we create a new key session\r\n     * @param {object} keySystemInfo\r\n     * @private\r\n     */\r\n    function _loadOrCreateKeySession(keySystemInfo) {\r\n        // Clearkey\r\n        if (protectionKeyController.isClearKey(selectedKeySystem)) {\r\n            // For Clearkey: if parameters for generating init data was provided by the user, use them for generating\r\n            // initData and overwrite possible initData indicated in encrypted event (EME)\r\n            if (keySystemInfo.protData && keySystemInfo.protData.hasOwnProperty('clearkeys')) {\r\n                const initData = { kids: Object.keys(keySystemInfo.protData.clearkeys) };\r\n                keySystemInfo.initData = new TextEncoder().encode(JSON.stringify(initData));\r\n            }\r\n        }\r\n\r\n        // Reuse existing KeySession\r\n        if (keySystemInfo.sessionId) {\r\n            // Load MediaKeySession with sessionId\r\n            loadKeySession(keySystemInfo);\r\n        }\r\n\r\n        // Create a new KeySession\r\n        else if (keySystemInfo.initData !== null) {\r\n            // Create new MediaKeySession with initData\r\n            createKeySession(keySystemInfo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads a key session with the given session ID from persistent storage.  This essentially creates a new key session\r\n     *\r\n     * @param {object} ksInfo\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     * @ignore\r\n     */\r\n    function loadKeySession(keySystemInfo) {\r\n        checkConfig();\r\n        protectionModel.loadKeySession(keySystemInfo);\r\n    }\r\n\r\n    /**\r\n     * Create a new key session associated with the given initialization data from the MPD or from the PSSH box in the media\r\n     * For the latest version of the EME a request is generated. Once this request is ready we get notified via the INTERNAL_KEY_MESSAGE event\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @param {Uint8Array} cdmData the custom data to provide to licenser\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     * @ignore\r\n     */\r\n    function createKeySession(keySystemInfo) {\r\n        const initDataForKS = CommonEncryption.getPSSHForKeySystem(selectedKeySystem, keySystemInfo ? keySystemInfo.initData : null);\r\n\r\n        if (initDataForKS) {\r\n\r\n            // Check for duplicate key id\r\n            if (_isKeyIdDuplicate(keySystemInfo.keyId)) {\r\n                return;\r\n            }\r\n\r\n            // Check for duplicate initData\r\n            if (_isInitDataDuplicate(initDataForKS)) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                keySystemInfo.initData = initDataForKS;\r\n                protectionModel.createKeySession(keySystemInfo);\r\n            } catch (error) {\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                    data: null,\r\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + error.message)\r\n                });\r\n            }\r\n        } else if (keySystemInfo && keySystemInfo.initData) {\r\n            protectionModel.createKeySession(keySystemInfo);\r\n        } else {\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Selected key system is ' + (selectedKeySystem ? selectedKeySystem.systemString : null) + '.  needkey/encrypted event contains no initData corresponding to that key system!')\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the protectionData for a specific keysystem as specified by the application.\r\n     * @param {object} keySystem\r\n     * @return {object | null}\r\n     * @private\r\n     */\r\n    function _getProtDataForKeySystem(keySystem) {\r\n        if (keySystem) {\r\n            const keySystemString = keySystem.systemString;\r\n\r\n            if (protDataSet) {\r\n                return (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Removes all entries from the mediaInfoArr\r\n     */\r\n    function clearMediaInfoArray() {\r\n        mediaInfoArr = [];\r\n    }\r\n\r\n    /**\r\n     * Returns a set of supported key systems and CENC initialization data\r\n     * from the given array of ContentProtection elements.  Only\r\n     * key systems that are supported by this player will be returned.\r\n     * Key systems are returned in priority order (highest first).\r\n     *\r\n     * @param {Array.<Object>} cps - array of content protection elements parsed\r\n     * from the manifest\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function getSupportedKeySystemsFromContentProtection(cps) {\r\n        checkConfig();\r\n        return protectionKeyController.getSupportedKeySystemsFromContentProtection(cps, protDataSet, sessionType);\r\n    }\r\n\r\n    /**\r\n     * Checks if a session has already created for the provided key id\r\n     * @param {string} keyId\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n     function _isKeyIdDuplicate(keyId) {\r\n\r\n        if (!keyId) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const sessions = protectionModel.getSessions();\r\n            for (let i = 0; i < sessions.length; i++) {\r\n                if (sessions[i].getKeyId() === keyId) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the provided init data is equal to one of the existing init data values\r\n     * @param {any} initDataForKS\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    function _isInitDataDuplicate(initDataForKS) {\r\n\r\n        if (!initDataForKS) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const currentInitData = protectionModel.getAllInitData();\r\n            for (let i = 0; i < currentInitData.length; i++) {\r\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\r\n                    logger.debug('DRM: Ignoring initData because we have already seen it!');\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes the given key session from persistent storage and closes the session\r\n     * as if {@link ProtectionController#closeKeySession}\r\n     * was called\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionRemoved\r\n     * @fires ProtectionController#KeySessionClosed\r\n     * @ignore\r\n     */\r\n    function removeKeySession(sessionToken) {\r\n        checkConfig();\r\n        protectionModel.removeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Closes the key session and releases all associated decryption keys.  These\r\n     * keys will no longer be available for decrypting media\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionClosed\r\n     * @ignore\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n        checkConfig();\r\n        protectionModel.closeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Sets a server certificate for use by the CDM when signing key messages\r\n     * intended for a particular license server.  This will fire\r\n     * an error event if a key system has not yet been selected.\r\n     *\r\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\r\n     * certificate\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#ServerCertificateUpdated\r\n     */\r\n    function setServerCertificate(serverCertificate) {\r\n        checkConfig();\r\n        protectionModel.setServerCertificate(serverCertificate);\r\n    }\r\n\r\n    /**\r\n     * Associate this protection system with the given HTMLMediaElement.  This\r\n     * causes the system to register for needkey/encrypted events from the given\r\n     * element and provides a destination for setting of MediaKeys\r\n     *\r\n     * @param {HTMLMediaElement} element the media element to which the protection\r\n     * system should be associated\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setMediaElement(element) {\r\n        checkConfig();\r\n        if (element) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.on(events.NEED_KEY, _onNeedKey, instance);\r\n        } else if (element === null) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.off(events.NEED_KEY, _onNeedKey, instance);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\r\n     * \"persistent-license\".  Default is \"temporary\".\r\n     *\r\n     * @param {string} value the session type\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setSessionType(value) {\r\n        sessionType = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.\r\n     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.\r\n     *\r\n     * @param {string} level the robustness level\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setRobustnessLevel(level) {\r\n        robustnessLevel = level;\r\n    }\r\n\r\n    /**\r\n     * Attach KeySystem-specific data to use for license acquisition with EME\r\n     *\r\n     * @param {Object} data an object containing property names corresponding to\r\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\r\n     * being instances of {@link ProtectionData}\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function setProtectionData(data) {\r\n        protDataSet = data;\r\n        protectionKeyController.setProtectionData(data);\r\n    }\r\n\r\n    /**\r\n     * Stop method is called when current playback is stopped/resetted.\r\n     *\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function stop() {\r\n        if (protectionModel) {\r\n            protectionModel.stop();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Destroys all protection data associated with this protection set.  This includes\r\n     * deleting all key sessions. In the case of persistent key sessions, the sessions\r\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\r\n     * associated with a HTMLMediaElement, it will be detached from that element.\r\n     *\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function reset() {\r\n        eventBus.off(events.INTERNAL_KEY_MESSAGE, _onKeyMessage, instance);\r\n        eventBus.off(events.INTERNAL_KEY_STATUS_CHANGED, _onKeyStatusChanged, instance);\r\n\r\n        checkConfig();\r\n\r\n        licenseRequestFilters = [];\r\n        licenseResponseFilters = [];\r\n\r\n        setMediaElement(null);\r\n\r\n        selectedKeySystem = null;\r\n        keySystemSelectionInProgress = false;\r\n\r\n        if (protectionModel) {\r\n            protectionModel.reset();\r\n            protectionModel = null;\r\n        }\r\n\r\n        needkeyRetries.forEach(retryTimeout => clearTimeout(retryTimeout));\r\n        needkeyRetries = [];\r\n\r\n        mediaInfoArr = [];\r\n        pendingKeySystemData = [];\r\n    }\r\n\r\n    /**\r\n     * Returns an object corresponding to the EME MediaKeySystemConfiguration dictionary\r\n     * @param {object} keySystem\r\n     * @return {KeySystemConfiguration}\r\n     * @private\r\n     */\r\n    function _getKeySystemConfiguration(keySystemData) {\r\n        const protData = keySystemData.protData;\r\n        const audioCapabilities = [];\r\n        const videoCapabilities = [];\r\n        const audioRobustness = (protData && protData.audioRobustness && protData.audioRobustness.length > 0) ? protData.audioRobustness : robustnessLevel;\r\n        const videoRobustness = (protData && protData.videoRobustness && protData.videoRobustness.length > 0) ? protData.videoRobustness : robustnessLevel;\r\n        const ksSessionType = keySystemData.sessionType;\r\n        const distinctiveIdentifier = (protData && protData.distinctiveIdentifier) ? protData.distinctiveIdentifier : 'optional';\r\n        const persistentState = (protData && protData.persistentState) ? protData.persistentState : (ksSessionType === 'temporary') ? 'optional' : 'required';\r\n\r\n        mediaInfoArr.forEach((media) => {\r\n            if (media.type === constants.AUDIO) {\r\n                audioCapabilities.push(new MediaCapability(media.codec, audioRobustness));\r\n            } else if (media.type === constants.VIDEO) {\r\n                videoCapabilities.push(new MediaCapability(media.codec, videoRobustness));\r\n            }\r\n        });\r\n\r\n        return new KeySystemConfiguration(\r\n            audioCapabilities, videoCapabilities, distinctiveIdentifier,\r\n            persistentState,\r\n            [ksSessionType]);\r\n    }\r\n\r\n    /**\r\n     * Event handler for when the status of the key has changed\r\n     * @param {object} e\r\n     * @private\r\n     */\r\n    function _onKeyStatusChanged(e) {\r\n        if (e.error) {\r\n            eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: null, error: e.error });\r\n        } else {\r\n            logger.debug('DRM: key status = ' + e.status);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for the key message event. Once we have a key message we can issue a license request\r\n     * @param {object} e\r\n     * @private\r\n     */\r\n    function _onKeyMessage(e) {\r\n        logger.debug('DRM: onKeyMessage');\r\n\r\n        // Dispatch event to applications indicating we received a key message\r\n        const keyMessage = e.data;\r\n        eventBus.trigger(events.KEY_MESSAGE, { data: keyMessage });\r\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\r\n        const message = keyMessage.message;\r\n        const sessionToken = keyMessage.sessionToken;\r\n        const protData = _getProtDataForKeySystem(selectedKeySystem);\r\n        const licenseServerModelInstance = protectionKeyController.getLicenseServerModelInstance(selectedKeySystem, protData, messageType);\r\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\r\n\r\n        // Ensure message from CDM is not empty\r\n        if (!message || message.byteLength === 0) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE));\r\n            return;\r\n        }\r\n\r\n        // Message not destined for license server\r\n        if (!licenseServerModelInstance) {\r\n            logger.debug('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionId());\r\n            _sendLicenseRequestCompleteEvent(eventData);\r\n            return;\r\n        }\r\n\r\n        // Perform any special handling for ClearKey\r\n        if (protectionKeyController.isClearKey(selectedKeySystem)) {\r\n            const clearkeys = protectionKeyController.processClearKeyLicenseRequest(selectedKeySystem, protData, message);\r\n            if (clearkeys) {\r\n                logger.debug('DRM: ClearKey license request handled by application!');\r\n                _sendLicenseRequestCompleteEvent(eventData);\r\n                protectionModel.updateKeySession(sessionToken, clearkeys);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // In all other cases we have to make a license request\r\n        _issueLicenseRequest(keyMessage, licenseServerModelInstance, protData);\r\n    }\r\n\r\n    /**\r\n     * Notify other classes that the license request was completed\r\n     * @param {object} data\r\n     * @param {object} error\r\n     * @private\r\n     */\r\n    function _sendLicenseRequestCompleteEvent(data, error) {\r\n        eventBus.trigger(events.LICENSE_REQUEST_COMPLETE, { data: data, error: error });\r\n    }\r\n\r\n    /**\r\n     * Start issuing a license request\r\n     * @param {object} keyMessage\r\n     * @param {object} licenseServerData\r\n     * @param {object} protData\r\n     * @private\r\n     */\r\n    function _issueLicenseRequest(keyMessage, licenseServerData, protData) {\r\n        const sessionToken = keyMessage.sessionToken;\r\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\r\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\r\n        const keySystemString = selectedKeySystem ? selectedKeySystem.systemString : null;\r\n\r\n        // Determine license server URL\r\n        let url = _getLicenseServerUrl(protData, messageType, sessionToken, keyMessage, licenseServerData);\r\n\r\n        // Ensure valid license server URL\r\n        if (!url) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE));\r\n            return;\r\n        }\r\n\r\n        // Set optional XMLHttpRequest headers from protection data and message\r\n        const reqHeaders = {};\r\n        let withCredentials = false;\r\n        if (protData) {\r\n            _updateHeaders(reqHeaders, protData.httpRequestHeaders);\r\n        }\r\n        const message = keyMessage.message;\r\n        const headersFromMessage = selectedKeySystem.getRequestHeadersFromMessage(message);\r\n        _updateHeaders(reqHeaders, headersFromMessage);\r\n\r\n        Object.keys(reqHeaders).forEach((key) => {\r\n            if ('authorization' === key.toLowerCase()) {\r\n                withCredentials = true;\r\n            }\r\n        });\r\n\r\n        // Overwrite withCredentials property from protData if present\r\n        if (protData && typeof protData.withCredentials == 'boolean') {\r\n            withCredentials = protData.withCredentials;\r\n        }\r\n\r\n        const onLoad = function (xhr) {\r\n            if (!protectionModel) {\r\n                return;\r\n            }\r\n\r\n            if (xhr.status >= 200 && xhr.status <= 299) {\r\n                const responseHeaders = Utils.parseHttpHeaders(xhr.getAllResponseHeaders ? xhr.getAllResponseHeaders() : null);\r\n                let licenseResponse = new LicenseResponse(xhr.responseURL, responseHeaders, xhr.response);\r\n                _applyFilters(licenseResponseFilters, licenseResponse)\r\n                    .then(() => {\r\n                        const licenseMessage = licenseServerData.getLicenseMessage(licenseResponse.data, keySystemString, messageType);\r\n                        if (licenseMessage !== null) {\r\n                            _sendLicenseRequestCompleteEvent(eventData);\r\n                            protectionModel.updateKeySession(sessionToken, licenseMessage);\r\n                        } else {\r\n                            _reportError(xhr, eventData, keySystemString, messageType, licenseServerData);\r\n                        }\r\n                    });\r\n            } else {\r\n                _reportError(xhr, eventData, keySystemString, messageType, licenseServerData);\r\n            }\r\n        };\r\n\r\n        const onAbort = function (xhr) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR aborted. status is \"' +\r\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\r\n        };\r\n\r\n        const onError = function (xhr) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR error. status is \"' +\r\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\r\n        };\r\n\r\n        const reqPayload = selectedKeySystem.getLicenseRequestFromMessage(message);\r\n        const reqMethod = licenseServerData.getHTTPMethod(messageType);\r\n        const responseType = licenseServerData.getResponseType(keySystemString, messageType);\r\n        const timeout = protData && !isNaN(protData.httpTimeout) ? protData.httpTimeout : LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT;\r\n        const sessionId = sessionToken.getSessionId() || null;\r\n\r\n        let licenseRequest = new LicenseRequest(url, reqMethod, responseType, reqHeaders, withCredentials, messageType, sessionId, reqPayload);\r\n        const retryAttempts = !isNaN(settings.get().streaming.retryAttempts[HTTPRequest.LICENSE]) ? settings.get().streaming.retryAttempts[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRIES;\r\n        _applyFilters(licenseRequestFilters, licenseRequest)\r\n            .then(() => {\r\n                _doLicenseRequest(licenseRequest, retryAttempts, timeout, onLoad, onAbort, onError);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Implement license requests with a retry mechanism to avoid temporary network issues to affect playback experience\r\n     * @param {object} request\r\n     * @param {number} retriesCount\r\n     * @param {number} timeout\r\n     * @param {function} onLoad\r\n     * @param {function} onAbort\r\n     * @param {function} onError\r\n     * @private\r\n     */\r\n    function _doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError) {\r\n        const xhr = new XMLHttpRequest();\r\n\r\n        if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\r\n            const cmcdMode = settings.get().streaming.cmcd.mode;\r\n            if (cmcdMode === Constants.CMCD_MODE_QUERY) {\r\n                const cmcdParams = cmcdModel.getQueryParameter({\r\n                    url: request.url,\r\n                    type: HTTPRequest.LICENSE\r\n                });\r\n\r\n                if (cmcdParams) {\r\n                    request.url = Utils.addAditionalQueryParameterToUrl(request.url, [cmcdParams]);\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.open(request.method, request.url, true);\r\n        xhr.responseType = request.responseType;\r\n        xhr.withCredentials = request.withCredentials;\r\n        if (timeout > 0) {\r\n            xhr.timeout = timeout;\r\n        }\r\n        for (const key in request.headers) {\r\n            xhr.setRequestHeader(key, request.headers[key]);\r\n        }\r\n\r\n        if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\r\n            const cmcdMode = settings.get().streaming.cmcd.mode;\r\n            if (cmcdMode === Constants.CMCD_MODE_HEADER) {\r\n                const cmcdHeaders = cmcdModel.getHeaderParameters({\r\n                    url: request.url,\r\n                    type: HTTPRequest.LICENSE\r\n                });\r\n\r\n                if (cmcdHeaders) {\r\n                    for (const header in cmcdHeaders) {\r\n                        let value = cmcdHeaders[header];\r\n                        if (value) {\r\n                            xhr.setRequestHeader(header, value);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const _retryRequest = function () {\r\n            // fail silently and retry\r\n            retriesCount--;\r\n            const retryInterval = !isNaN(settings.get().streaming.retryIntervals[HTTPRequest.LICENSE]) ? settings.get().streaming.retryIntervals[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRY_INTERVAL;\r\n            setTimeout(function () {\r\n                _doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError);\r\n            }, retryInterval);\r\n        };\r\n\r\n        xhr.onload = function () {\r\n            if (this.status >= 200 && this.status <= 299 || retriesCount <= 0) {\r\n                onLoad(this);\r\n            } else {\r\n                logger.warn('License request failed (' + this.status + '). Retrying it... Pending retries: ' + retriesCount);\r\n                _retryRequest();\r\n            }\r\n        };\r\n\r\n        xhr.ontimeout = xhr.onerror = function () {\r\n            if (retriesCount <= 0) {\r\n                onError(this);\r\n            } else {\r\n                logger.warn('License request network request failed . Retrying it... Pending retries: ' + retriesCount);\r\n                _retryRequest();\r\n            }\r\n        };\r\n\r\n        xhr.onabort = function () {\r\n            onAbort(this);\r\n        };\r\n\r\n        // deprecated, to be removed\r\n        eventBus.trigger(events.LICENSE_REQUEST_SENDING, {\r\n            url: request.url,\r\n            headers: request.headers,\r\n            payload: request.data,\r\n            sessionId: request.sessionId\r\n        });\r\n\r\n        xhr.send(request.data);\r\n    }\r\n\r\n    /**\r\n     * Returns the url of the license server\r\n     * @param {object} protData\r\n     * @param {string} messageType\r\n     * @param {object} sessionToken\r\n     * @param {object} keyMessage\r\n     * @param {object} licenseServerData\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    function _getLicenseServerUrl(protData, messageType, sessionToken, keyMessage, licenseServerData) {\r\n        let url = null;\r\n        const message = keyMessage.message;\r\n\r\n        // Check if the url is defined by the application\r\n        if (protData && protData.serverURL) {\r\n            const serverURL = protData.serverURL;\r\n            if (typeof serverURL === 'string' && serverURL !== '') {\r\n                url = serverURL;\r\n            } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\r\n                url = serverURL[messageType];\r\n            }\r\n        }\r\n\r\n        // This is the old way of providing the url\r\n        else if (protData && protData.laURL && protData.laURL !== '') {\r\n            url = protData.laURL;\r\n        }\r\n\r\n        // No url provided by the app. Check the manifest and the pssh\r\n        else {\r\n            // Check for url defined in the manifest\r\n            url = CommonEncryption.getLicenseServerUrlFromMediaInfo(mediaInfoArr, selectedKeySystem.schemeIdURI);\r\n\r\n            // In case we are not using Clearky we can still get a url from the pssh.\r\n            if (!url && !protectionKeyController.isClearKey(selectedKeySystem)) {\r\n                const psshData = CommonEncryption.getPSSHData(sessionToken.initData);\r\n                url = selectedKeySystem.getLicenseServerURLFromInitData(psshData);\r\n\r\n                // Still no url, check the keymessage\r\n                if (!url) {\r\n                    url = keyMessage.laURL;\r\n                }\r\n            }\r\n        }\r\n        // Possibly update or override the URL based on the message\r\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * Add new headers to the existing ones\r\n     * @param {array} reqHeaders\r\n     * @param {object} headers\r\n     * @private\r\n     */\r\n    function _updateHeaders(reqHeaders, headers) {\r\n        if (headers) {\r\n            for (const key in headers) {\r\n                reqHeaders[key] = headers[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reports an error that might have occured during the license request\r\n     * @param {object} xhr\r\n     * @param {object} eventData\r\n     * @param {string} keySystemString\r\n     * @param {string} messageType\r\n     * @param {object} licenseServerData\r\n     * @private\r\n     */\r\n    function _reportError(xhr, eventData, keySystemString, messageType, licenseServerData) {\r\n        const errorMsg = ((xhr.response) ? licenseServerData.getErrorResponse(xhr.response, keySystemString, messageType) : 'NONE');\r\n        _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n            ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR complete. status is \"' +\r\n            xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState + '.  Response is ' + errorMsg));\r\n    }\r\n\r\n    /**\r\n     * Applies custom filters defined by the application\r\n     * @param {array} filters\r\n     * @param {object} param\r\n     * @return {Promise<void>|*}\r\n     * @private\r\n     */\r\n    function _applyFilters(filters, param) {\r\n        if (!filters) return Promise.resolve();\r\n        return filters.reduce((prev, next) => {\r\n            return prev.then(() => {\r\n                return next(param);\r\n            });\r\n        }, Promise.resolve());\r\n    }\r\n\r\n    /**\r\n     * Event handler for \"needkey\" and \"encrypted\" events\r\n     * @param {object} event\r\n     * @param {number} retry\r\n     */\r\n    function _onNeedKey(event, retry) {\r\n        if (!settings.get().streaming.protection.ignoreEmeEncryptedEvent) {\r\n            logger.debug('DRM: onNeedKey');\r\n\r\n            // Ignore non-cenc initData\r\n            if (event.key.initDataType !== 'cenc') {\r\n                logger.warn('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\r\n                return;\r\n            }\r\n\r\n            if (mediaInfoArr.length === 0) {\r\n                logger.warn('DRM: onNeedKey called before initializeForMedia, wait until initialized');\r\n                retry = typeof retry === 'undefined' ? 1 : retry + 1;\r\n                if (retry < NEEDKEY_BEFORE_INITIALIZE_RETRIES) {\r\n                    needkeyRetries.push(setTimeout(() => {\r\n                        _onNeedKey(event, retry);\r\n                    }, NEEDKEY_BEFORE_INITIALIZE_TIMEOUT));\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\r\n            // Convert to ArrayBuffer\r\n            let abInitData = event.key.initData;\r\n            if (ArrayBuffer.isView(abInitData)) {\r\n                abInitData = abInitData.buffer;\r\n            }\r\n\r\n            // If key system has already been selected and initData already seen, then do nothing\r\n            if (selectedKeySystem) {\r\n                const initDataForKS = CommonEncryption.getPSSHForKeySystem(selectedKeySystem, abInitData);\r\n                if (initDataForKS) {\r\n                    // Check for duplicate initData\r\n                    if (_isInitDataDuplicate(initDataForKS)) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            logger.debug('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\r\n\r\n            const supportedKS = protectionKeyController.getSupportedKeySystemsFromSegmentPssh(abInitData, protDataSet, sessionType);\r\n            if (supportedKS.length === 0) {\r\n                logger.debug('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\r\n                return;\r\n            }\r\n\r\n            _selectKeySystem(supportedKS, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns all available key systems\r\n     * @return {array}\r\n     */\r\n    function getKeySystems() {\r\n        return protectionKeyController ? protectionKeyController.getKeySystems() : [];\r\n    }\r\n\r\n    /**\r\n     * Sets all available key systems\r\n     * @param {array} keySystems\r\n     */\r\n    function setKeySystems(keySystems) {\r\n        if (protectionKeyController) {\r\n            protectionKeyController.setKeySystems(keySystems);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the request filters to be applied before the license request is made\r\n     * @param {array} filters\r\n     */\r\n    function setLicenseRequestFilters(filters) {\r\n        licenseRequestFilters = filters;\r\n    }\r\n\r\n    /**\r\n     * Sets the response filters to be applied after the license response has been received.\r\n     * @param {array} filters\r\n     */\r\n    function setLicenseResponseFilters(filters) {\r\n        licenseResponseFilters = filters;\r\n    }\r\n\r\n    instance = {\r\n        initializeForMedia,\r\n        clearMediaInfoArray,\r\n        createKeySession,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        closeKeySession,\r\n        setServerCertificate,\r\n        setMediaElement,\r\n        setSessionType,\r\n        setRobustnessLevel,\r\n        setProtectionData,\r\n        getSupportedKeySystemsFromContentProtection,\r\n        getKeySystems,\r\n        setKeySystems,\r\n        setLicenseRequestFilters,\r\n        setLicenseResponseFilters,\r\n        stop,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nProtectionController.__dashjs_factory_name = 'ProtectionController';\r\nexport default FactoryMaker.getClassFactory(ProtectionController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport CommonEncryption from './../CommonEncryption';\r\nimport KeySystemClearKey from './../drm/KeySystemClearKey';\r\nimport KeySystemW3CClearKey from './../drm/KeySystemW3CClearKey';\r\nimport KeySystemWidevine from './../drm/KeySystemWidevine';\r\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady';\r\nimport DRMToday from './../servers/DRMToday';\r\nimport PlayReady from './../servers/PlayReady';\r\nimport Widevine from './../servers/Widevine';\r\nimport ClearKey from './../servers/ClearKey';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\n/**\r\n * @module ProtectionKeyController\r\n * @ignore\r\n * @description Media protection key system functionality that can be modified/overridden by applications\r\n */\r\nfunction ProtectionKeyController() {\r\n\r\n    let context = this.context;\r\n\r\n    let instance,\r\n        debug,\r\n        logger,\r\n        keySystems,\r\n        BASE64,\r\n        clearkeyKeySystem,\r\n        clearkeyW3CKeySystem;\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.debug) {\r\n            debug = config.debug;\r\n            logger = debug.getLogger(instance);\r\n        }\r\n\r\n        if (config.BASE64) {\r\n            BASE64 = config.BASE64;\r\n        }\r\n    }\r\n\r\n    function initialize() {\r\n        keySystems = [];\r\n\r\n        let keySystem;\r\n\r\n        // PlayReady\r\n        keySystem = KeySystemPlayReady(context).getInstance({BASE64: BASE64});\r\n        keySystems.push(keySystem);\r\n\r\n        // Widevine\r\n        keySystem = KeySystemWidevine(context).getInstance({BASE64: BASE64});\r\n        keySystems.push(keySystem);\r\n\r\n        // ClearKey\r\n        keySystem = KeySystemClearKey(context).getInstance({BASE64: BASE64});\r\n        keySystems.push(keySystem);\r\n        clearkeyKeySystem = keySystem;\r\n\r\n        // W3C ClearKey\r\n        keySystem = KeySystemW3CClearKey(context).getInstance({BASE64: BASE64, debug: debug});\r\n        keySystems.push(keySystem);\r\n        clearkeyW3CKeySystem = keySystem;\r\n    }\r\n\r\n    /**\r\n     * Returns a prioritized list of key systems supported\r\n     * by this player (not necessarily those supported by the\r\n     * user agent)\r\n     *\r\n     * @returns {Array.<KeySystem>} a prioritized\r\n     * list of key systems\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystems() {\r\n        return keySystems;\r\n    }\r\n\r\n    /**\r\n     * Sets the prioritized list of key systems to be supported\r\n     * by this player.\r\n     *\r\n     * @param {Array.<KeySystem>} newKeySystems the new prioritized\r\n     * list of key systems\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function setKeySystems(newKeySystems) {\r\n        keySystems = newKeySystems;\r\n    }\r\n\r\n    /**\r\n     * Returns the key system associated with the given key system string\r\n     * name (i.e. 'org.w3.clearkey')\r\n     *\r\n     * @param {string} systemString the system string\r\n     * @returns {KeySystem|null} the key system\r\n     * or null if no supported key system is associated with the given key\r\n     * system string\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystemBySystemString(systemString) {\r\n        for (let i = 0; i < keySystems.length; i++) {\r\n            if (keySystems[i].systemString === systemString) {\r\n                return keySystems[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines whether the given key system is ClearKey.  This is\r\n     * necessary because the EME spec defines ClearKey and its method\r\n     * for providing keys to the key session; and this method has changed\r\n     * between the various API versions.  Our EME-specific ProtectionModels\r\n     * must know if the system is ClearKey so that it can format the keys\r\n     * according to the particular spec version.\r\n     *\r\n     * @param {Object} keySystem the key\r\n     * @returns {boolean} true if this is the ClearKey key system, false\r\n     * otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function isClearKey(keySystem) {\r\n        return (keySystem === clearkeyKeySystem || keySystem === clearkeyW3CKeySystem);\r\n    }\r\n\r\n    /**\r\n     * Check equality of initData array buffers.\r\n     *\r\n     * @param {ArrayBuffer} initData1 - first initData\r\n     * @param {ArrayBuffer} initData2 - second initData\r\n     * @returns {boolean} true if the initData arrays are equal in size and\r\n     * contents, false otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function initDataEquals(initData1, initData2) {\r\n        if (initData1.byteLength === initData2.byteLength) {\r\n            let data1 = new Uint8Array(initData1);\r\n            let data2 = new Uint8Array(initData2);\r\n\r\n            for (let j = 0; j < data1.length; j++) {\r\n                if (data1[j] !== data2[j]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns a set of supported key systems and CENC initialization data\r\n     * from the given array of ContentProtection elements.  Only\r\n     * key systems that are supported by this player will be returned.\r\n     * Key systems are returned in priority order (highest first).\r\n     *\r\n     * @param {Array.<Object>} cps - array of content protection elements parsed\r\n     * from the manifest\r\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\r\n     * supported by the content\r\n     * @param {string} default session type\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystemsFromContentProtection(cps, protDataSet, sessionType) {\r\n        let cp, ks, ksIdx, cpIdx;\r\n        let supportedKS = [];\r\n\r\n        if (cps) {\r\n            const cencContentProtection = CommonEncryption.findCencContentProtection(cps);\r\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n                ks = keySystems[ksIdx];\r\n\r\n                // Get protection data that applies for current key system\r\n                const protData = _getProtDataForKeySystem(ks.systemString, protDataSet);\r\n\r\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\r\n                    cp = cps[cpIdx];\r\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\r\n                        // Look for DRM-specific ContentProtection\r\n                        let initData = ks.getInitData(cp, cencContentProtection);\r\n\r\n                        supportedKS.push({\r\n                            ks: keySystems[ksIdx],\r\n                            keyId: cp.keyId,\r\n                            initData: initData,\r\n                            protData: protData,\r\n                            cdmData: ks.getCDMData(protData ? protData.cdmData : null),\r\n                            sessionId: _getSessionId(protData, cp),\r\n                            sessionType: _getSessionType(protData, sessionType)\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns key systems supported by this player for the given PSSH\r\n     * initializationData. Key systems are returned in priority order\r\n     * (highest priority first)\r\n     *\r\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\r\n     * supported by the content\r\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\r\n     * supported by the content\r\n     * @param {string} default session type\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystemsFromSegmentPssh(initData, protDataSet, sessionType) {\r\n        let supportedKS = [];\r\n        let pssh = CommonEncryption.parsePSSHList(initData);\r\n        let ks, keySystemString;\r\n\r\n        for (let ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n            ks = keySystems[ksIdx];\r\n            keySystemString = ks.systemString;\r\n\r\n            // Get protection data that applies for current key system\r\n            const protData = _getProtDataForKeySystem(keySystemString, protDataSet);\r\n\r\n            if (ks.uuid in pssh) {\r\n                supportedKS.push({\r\n                    ks: ks,\r\n                    initData: pssh[ks.uuid],\r\n                    protData: protData,\r\n                    cdmData: ks.getCDMData(protData ? protData.cdmData : null),\r\n                    sessionId: _getSessionId(protData),\r\n                    sessionType: _getSessionType(protData, sessionType)\r\n                });\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns the license server implementation data that should be used for this request.\r\n     *\r\n     * @param {KeySystem} keySystem the key system\r\n     * associated with this license request\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {string} [messageType=\"license-request\"] the message type associated with this\r\n     * request.  Supported message types can be found\r\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n     * @returns {LicenseServer|null} the license server\r\n     * implementation that should be used for this request or null if the player should not\r\n     * pass messages of the given type to a license server\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     *\r\n     */\r\n    function getLicenseServerModelInstance(keySystem, protData, messageType) {\r\n\r\n        // Our default server implementations do not do anything with \"license-release\" or\r\n        // \"individualization-request\" messages, so we just send a success event\r\n        if (messageType === 'license-release' || messageType === 'individualization-request') {\r\n            return null;\r\n        }\r\n\r\n        let licenseServerData = null;\r\n        if (protData && protData.hasOwnProperty('drmtoday')) {\r\n            licenseServerData = DRMToday(context).getInstance({BASE64: BASE64});\r\n        } else if (keySystem.systemString === ProtectionConstants.WIDEVINE_KEYSTEM_STRING) {\r\n            licenseServerData = Widevine(context).getInstance();\r\n        } else if (keySystem.systemString === ProtectionConstants.PLAYREADY_KEYSTEM_STRING) {\r\n            licenseServerData = PlayReady(context).getInstance();\r\n        } else if (keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING) {\r\n            licenseServerData = ClearKey(context).getInstance();\r\n        }\r\n\r\n        return licenseServerData;\r\n    }\r\n\r\n    /**\r\n     * Allows application-specific retrieval of ClearKey keys.\r\n     *\r\n     * @param {KeySystem} clearkeyKeySystem They exact ClearKey System to be used\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {ArrayBuffer} message the key message from the CDM\r\n     * @return {ClearKeyKeySet|null} the clear keys associated with\r\n     * the request or null if no keys can be returned by this function\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function processClearKeyLicenseRequest(clearkeyKeySystem, protData, message) {\r\n        try {\r\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\r\n        } catch (error) {\r\n            logger.error('Failed to retrieve clearkeys from ProtectionData');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function setProtectionData(protectionDataSet) {\r\n        var getProtectionData = function (keySystemString) {\r\n            var protData = null;\r\n            if (protectionDataSet) {\r\n                protData = (keySystemString in protectionDataSet) ? protectionDataSet[keySystemString] : null;\r\n            }\r\n            return protData;\r\n        };\r\n\r\n        for (var i = 0; i < keySystems.length; i++) {\r\n            var keySystem = keySystems[i];\r\n            if (keySystem.hasOwnProperty('init')) {\r\n                keySystem.init(getProtectionData(keySystem.systemString));\r\n            }\r\n        }\r\n    }\r\n\r\n    function _getProtDataForKeySystem(systemString, protDataSet) {\r\n        if (!protDataSet) return null;\r\n        return (systemString in protDataSet) ? protDataSet[systemString] : null;\r\n    }\r\n\r\n    function _getSessionId(protData, cp) {\r\n        // Get sessionId from protectionData or from manifest (ContentProtection)\r\n        if (protData && protData.sessionId) {\r\n            return protData.sessionId;\r\n        } else if (cp && cp.sessionId) {\r\n            return cp.sessionId;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function _getSessionType(protData, sessionType) {\r\n        return (protData && protData.sessionType) ? protData.sessionType : sessionType;\r\n    }\r\n\r\n    instance = {\r\n        initialize,\r\n        setProtectionData,\r\n        isClearKey,\r\n        initDataEquals,\r\n        getKeySystems,\r\n        setKeySystems,\r\n        getKeySystemBySystemString,\r\n        getSupportedKeySystemsFromContentProtection,\r\n        getSupportedKeySystemsFromSegmentPssh,\r\n        getLicenseServerModelInstance,\r\n        processClearKeyLicenseRequest,\r\n        setConfig\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(ProtectionKeyController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport KeyPair from '../vo/KeyPair';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = 'e2719d58-a985-b3c9-781a-b030af78d30e';\r\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemClearKey(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    const BASE64 = config.BASE64;\r\n\r\n    /**\r\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\r\n     *\r\n     * @param {ProtectionData} protectionData the protection data\r\n     * @param {ArrayBuffer} message the ClearKey CDM message\r\n     * @returns {ClearKeyKeySet} the key set or null if none found\r\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\r\n     * protection data\r\n     * @memberof KeySystemClearKey\r\n     */\r\n    function getClearKeysFromProtectionData(protectionData, message) {\r\n        let clearkeySet = null;\r\n        if (protectionData) {\r\n            // ClearKey is the only system that does not require a license server URL, so we\r\n            // handle it here when keys are specified in protection data\r\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n            const keyPairs = [];\r\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\r\n                const clearkeyID = jsonMsg.kids[i];\r\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\r\n                if (!clearkey) {\r\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\r\n                }\r\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\r\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\r\n            }\r\n            clearkeySet = new ClearKeyKeySet(keyPairs);\r\n        }\r\n        return clearkeySet;\r\n    }\r\n\r\n    function getInitData(cp, cencContentProtection) {\r\n        try {\r\n            let initData = CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n\r\n            if (!initData && cencContentProtection) {\r\n                const cencDefaultKid = cencDefaultKidToBase64Representation(cencContentProtection['cenc:default_KID']);\r\n                const data = {kids: [cencDefaultKid]};\r\n                initData = new TextEncoder().encode(JSON.stringify(data));\r\n            }\r\n\r\n            return initData;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function cencDefaultKidToBase64Representation(cencDefaultKid) {\r\n        try {\r\n            let kid = cencDefaultKid.replace(/-/g, '');\r\n            kid = btoa(kid.match(/\\w{2}/g).map((a) => {\r\n                return String.fromCharCode(parseInt(a, 16));\r\n            }).join(''));\r\n            return kid.replace(/=/g, '');\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        // Set content type to application/json by default\r\n        return {\r\n            'Content-Type': 'application/json'\r\n        };\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return JSON.stringify(JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message))));\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData(/*cdmData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid,\r\n        schemeIdURI,\r\n        systemString,\r\n        getInitData,\r\n        getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData,\r\n        getCDMData,\r\n        getClearKeysFromProtectionData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemClearKey); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Microsoft PlayReady DRM\r\n *\r\n * @class\r\n * @implements KeySystem\r\n */\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\r\nconst systemString = ProtectionConstants.PLAYREADY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\nconst PRCDMData = '<PlayReadyCDMData type=\"LicenseAcquisition\"><LicenseAcquisition version=\"1.0\" Proactive=\"false\"><CustomData encoding=\"base64encoded\">%CUSTOMDATA%</CustomData></LicenseAcquisition></PlayReadyCDMData>';\r\n\r\nfunction KeySystemPlayReady(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    let messageFormat = 'utf-16';\r\n    const BASE64 = config.BASE64;\r\n\r\n    function checkConfig() {\r\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray') || !BASE64.hasOwnProperty('decodeArray') ) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(message) {\r\n        let msg,\r\n            xmlDoc;\r\n        const headers = {};\r\n        const parser = new DOMParser();\r\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        msg = String.fromCharCode.apply(null, dataview);\r\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        const headerNameList = xmlDoc.getElementsByTagName('name');\r\n        const headerValueList = xmlDoc.getElementsByTagName('value');\r\n        for (let i = 0; i < headerNameList.length; i++) {\r\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\r\n        }\r\n        // Some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\r\n        // this is NOT w3c conform and license servers may reject the request!\r\n        // -> rename it to proper w3c definition!\r\n        if (headers.hasOwnProperty('Content')) {\r\n            headers['Content-Type'] = headers.Content;\r\n            delete headers.Content;\r\n        }\r\n        // Set Content-Type header by default if not provided in the the CDM message (<PlayReadyKeyMessage/>)\r\n        // or if the message contains directly the challenge itself (Ex: LG SmartTVs)\r\n        if (!headers.hasOwnProperty('Content-Type')) {\r\n            headers['Content-Type'] = 'text/xml; charset=utf-8';\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        let licenseRequest = null;\r\n        const parser = new DOMParser();\r\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        checkConfig();\r\n        const msg = String.fromCharCode.apply(null, dataview);\r\n        const xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        if (xmlDoc.getElementsByTagName('PlayReadyKeyMessage')[0]) {\r\n            const Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\r\n            if (Challenge) {\r\n                licenseRequest = BASE64.decode(Challenge);\r\n            }\r\n        } else {\r\n            // The message from CDM is not a wrapped message as on IE11 and Edge,\r\n            // thus it contains direclty the challenge itself\r\n            // (note that the xmlDoc at this point may be unreadable since it may have been interpreted as UTF-16)\r\n            return message;\r\n        }\r\n\r\n        return licenseRequest;\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(initData) {\r\n        if (initData) {\r\n            const data = new DataView(initData);\r\n            const numRecords = data.getUint16(4, true);\r\n            let offset = 6;\r\n            const parser = new DOMParser();\r\n\r\n            for (let i = 0; i < numRecords; i++) {\r\n                // Parse the PlayReady Record header\r\n                const recordType = data.getUint16(offset, true);\r\n                offset += 2;\r\n                const recordLength = data.getUint16(offset, true);\r\n                offset += 2;\r\n                if (recordType !== 0x0001) {\r\n                    offset += recordLength;\r\n                    continue;\r\n                }\r\n\r\n                const recordData = initData.slice(offset, offset + recordLength);\r\n                const record = String.fromCharCode.apply(null, new Uint16Array(recordData));\r\n                const xmlDoc = parser.parseFromString(record, 'application/xml');\r\n\r\n                // First try <LA_URL>\r\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\r\n                    const laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\r\n                    if (laurl) {\r\n                        return laurl;\r\n                    }\r\n                }\r\n\r\n                // Optionally, try <LUI_URL>\r\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\r\n                    const luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\r\n                    if (luiurl) {\r\n                        return luiurl;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getInitData(cpData) {\r\n        // * desc@ getInitData\r\n        // *   generate PSSH data from PROHeader defined in MPD file\r\n        // *   PSSH format:\r\n        // *   size (4)\r\n        // *   box type(PSSH) (8)\r\n        // *   Protection SystemID (16)\r\n        // *   protection system data size (4) - length of decoded PROHeader\r\n        // *   decoded PROHeader data from MPD file\r\n        const PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\r\n        const playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\r\n\r\n        let byteCursor = 0;\r\n        let uint8arraydecodedPROHeader = null;\r\n\r\n        let PROSize,\r\n            PSSHSize,\r\n            PSSHBoxBuffer,\r\n            PSSHBox,\r\n            PSSHData;\r\n\r\n        checkConfig();\r\n        if (!cpData) {\r\n            return null;\r\n        }\r\n        // Handle common encryption PSSH\r\n        if ('pssh' in cpData) {\r\n            return CommonEncryption.parseInitDataFromContentProtection(cpData, BASE64);\r\n        }\r\n        // Handle native MS PlayReady ContentProtection elements\r\n        if ('pro' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\r\n        }\r\n        else if ('prheader' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n\r\n        PROSize = uint8arraydecodedPROHeader.length;\r\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\r\n\r\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\r\n\r\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\r\n        PSSHData = new DataView(PSSHBoxBuffer);\r\n\r\n        PSSHData.setUint32(byteCursor, PSSHSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(PSSHBoxType, byteCursor);\r\n        byteCursor += PSSHBoxType.length;\r\n\r\n        PSSHBox.set(playreadySystemID, byteCursor);\r\n        byteCursor += playreadySystemID.length;\r\n\r\n        PSSHData.setUint32(byteCursor, PROSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\r\n        byteCursor += PROSize;\r\n\r\n        return PSSHBox.buffer;\r\n    }\r\n\r\n    /**\r\n     * It seems that some PlayReady implementations return their XML-based CDM\r\n     * messages using UTF16, while others return them as UTF8.  Use this function\r\n     * to modify the message format to expect when parsing CDM messages.\r\n     *\r\n     * @param {string} format the expected message format.  Either \"utf-8\" or \"utf-16\".\r\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\r\n     */\r\n    function setPlayReadyMessageFormat(format) {\r\n        if (format !== 'utf-8' && format !== 'utf-16') {\r\n            throw new Error('Specified message format is not one of \"utf-8\" or \"utf-16\"');\r\n        }\r\n        messageFormat = format;\r\n    }\r\n\r\n    /**\r\n     * Get Playready Custom data\r\n     */\r\n    function getCDMData(_cdmData) {\r\n        let customData,\r\n            cdmData,\r\n            cdmDataBytes,\r\n            i;\r\n\r\n        checkConfig();\r\n        if (!_cdmData) return null;\r\n\r\n        // Convert custom data into multibyte string\r\n        customData = [];\r\n        for (i = 0; i < _cdmData.length; ++i) {\r\n            customData.push(_cdmData.charCodeAt(i));\r\n            customData.push(0);\r\n        }\r\n        customData = String.fromCharCode.apply(null, customData);\r\n\r\n        // Encode in Base 64 the custom data string\r\n        customData = BASE64.encode(customData);\r\n\r\n        // Initialize CDM data with Base 64 encoded custom data\r\n        // (see https://msdn.microsoft.com/en-us/library/dn457361.aspx)\r\n        cdmData = PRCDMData.replace('%CUSTOMDATA%', customData);\r\n\r\n        // Convert CDM data into multibyte characters\r\n        cdmDataBytes = [];\r\n        for (i = 0; i < cdmData.length; ++i) {\r\n            cdmDataBytes.push(cdmData.charCodeAt(i));\r\n            cdmDataBytes.push(0);\r\n        }\r\n\r\n        return new Uint8Array(cdmDataBytes).buffer;\r\n    }\r\n\r\n    instance = {\r\n        uuid,\r\n        schemeIdURI,\r\n        systemString,\r\n        getInitData,\r\n        getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData,\r\n        getCDMData,\r\n        setPlayReadyMessageFormat\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemPlayReady); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport KeyPair from '../vo/KeyPair';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\r\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemW3CClearKey(config) {\r\n    let instance;\r\n    const BASE64 = config.BASE64;\r\n    const logger = config.debug.getLogger(instance);\r\n    /**\r\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\r\n     *\r\n     * @param {ProtectionDataSet} protectionData the protection data\r\n     * @param {ArrayBuffer} message the ClearKey CDM message\r\n     * @returns {ClearKeyKeySet} the key set or null if none found\r\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\r\n     * protection data\r\n     * @memberof KeySystemClearKey\r\n     */\r\n    function getClearKeysFromProtectionData(protectionData, message) {\r\n        let clearkeySet = null;\r\n        if (protectionData) {\r\n            // ClearKey is the only system that does not require a license server URL, so we\r\n            // handle it here when keys are specified in protection data\r\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n            const keyPairs = [];\r\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\r\n                const clearkeyID = jsonMsg.kids[i];\r\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\r\n                if (!clearkey) {\r\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\r\n                }\r\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\r\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\r\n            }\r\n            clearkeySet = new ClearKeyKeySet(keyPairs);\r\n\r\n            logger.warn('ClearKey schemeIdURI is using W3C Common PSSH systemID (1077efec-c0b2-4d02-ace3-3c1e52e2fb4b) in Content Protection. See DASH-IF IOP v4.1 section 7.6.2.4');\r\n        }\r\n        return clearkeySet;\r\n    }\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData(/*cdmData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        getCDMData: getCDMData,\r\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemW3CClearKey.__dashjs_factory_name = 'KeySystemW3CClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemW3CClearKey); /* jshint ignore:line */\r\n\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Google Widevine DRM\r\n *\r\n * @class\r\n * @implements MediaPlayer.dependencies.protection.KeySystem\r\n */\r\n\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\r\nconst systemString = ProtectionConstants.WIDEVINE_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemWidevine(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    const BASE64 = config.BASE64;\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage( /*message*/ ) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData( /*initData*/ ) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData(/*cdmData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid,\r\n        schemeIdURI,\r\n        systemString,\r\n        getInitData,\r\n        getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData,\r\n        getCDMData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ErrorsBase from '../../../core/errors/ErrorsBase';\r\n/**\r\n * @class\r\n */\r\nclass ProtectionErrors extends ErrorsBase {\r\n\tconstructor () {\r\n        super();\r\n\r\n        /**\r\n         *  Generid key Error code\r\n         */\r\n        this.MEDIA_KEYERR_CODE = 100;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_UNKNOWN_CODE = 101;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_CLIENT_CODE = 102;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_SERVICE_CODE = 103;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_OUTPUT_CODE = 104;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_DOMAIN_CODE = 106;\r\n\r\n        /**\r\n         *  Error code returned when an error occured in keymessage event for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107;\r\n        /**\r\n         *  Error code returned when challenge is invalid in keymessage event (event triggered by CDM)\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108;\r\n        /**\r\n         *  Error code returned when License server certificate has not been successfully updated\r\n         */\r\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109;\r\n        /**\r\n         *  Error code returned when license validity has expired\r\n         */\r\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110;\r\n        /**\r\n         *  Error code returned when no licenser url is defined\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111;\r\n        /**\r\n         *  Error code returned when key system access is denied\r\n         */\r\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112;\r\n        /**\r\n         *  Error code returned when key session has not been successfully created\r\n         */\r\n        this.KEY_SESSION_CREATED_ERROR_CODE = 113;\r\n        /**\r\n         *  Error code returned when license request failed after a keymessage event has been triggered\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114;\r\n\r\n        this.MEDIA_KEYERR_UNKNOWN_MESSAGE = 'An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\r\n        this.MEDIA_KEYERR_CLIENT_MESSAGE = 'The Key System could not be installed or updated.';\r\n        this.MEDIA_KEYERR_SERVICE_MESSAGE = 'The message passed into update indicated an error from the license service.';\r\n        this.MEDIA_KEYERR_OUTPUT_MESSAGE = 'There is no available output device with the required characteristics for the content protection system.';\r\n        this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE = 'A hardware configuration change caused a content protection error.';\r\n        this.MEDIA_KEYERR_DOMAIN_MESSAGE = 'An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\r\n        this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE = 'Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!';\r\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = 'DRM: Empty key message from CDM';\r\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = 'Error updating server certificate -- ';\r\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE = 'DRM: KeyStatusChange error! -- License has expired';\r\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE = 'DRM: No license server URL specified!';\r\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = 'DRM: KeySystem Access Denied! -- ';\r\n        this.KEY_SESSION_CREATED_ERROR_MESSAGE = 'DRM: unable to create session! --';\r\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = 'DRM: licenser error! --';\r\n    }\r\n}\r\n\r\nlet protectionErrors = new ProtectionErrors();\r\nexport default protectionErrors;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Initial implementation of EME\r\n *\r\n * Implemented by Google Chrome prior to v36\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\n\r\nfunction ProtectionModel_01b(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const api = config.api;\r\n    const errHandler = config.errHandler;\r\n\r\n    let instance,\r\n        logger,\r\n        videoElement,\r\n        keySystem,\r\n        protectionKeyController,\r\n\r\n        // With this version of the EME APIs, sessionIds are not assigned to\r\n        // sessions until the first key message is received.  We are assuming\r\n        // that in the case of multiple sessions, key messages will be received\r\n        // in the order that generateKeyRequest() is called.\r\n        // Holding spot for newly-created sessions until we determine whether or\r\n        // not the CDM supports sessionIds\r\n        pendingSessions,\r\n\r\n        // List of sessions that have been initialized.  Only the first position will\r\n        // be used in the case that the CDM does not support sessionIds\r\n        sessions,\r\n\r\n        // Not all CDMs support the notion of sessionIds.  Without sessionIds\r\n        // there is no way for us to differentiate between sessions, therefore\r\n        // we must only allow a single session.  Once we receive the first key\r\n        // message we can set this flag to determine if more sessions are allowed\r\n        moreSessionsAllowed,\r\n\r\n        // This is our main event handler for all desired HTMLMediaElement events\r\n        // related to EME.  These events are translated into our API-independent\r\n        // versions of the same events\r\n        eventHandler;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        videoElement = null;\r\n        keySystem = null;\r\n        pendingSessions = [];\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n        }\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            closeKeySession(sessions[i]);\r\n        }\r\n        eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < pendingSessions.length; i++) {\r\n            retVal.push(pendingSessions[i].initData);\r\n        }\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function getSessions() {\r\n        return sessions.concat(pendingSessions);\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        return new Promise((resolve, reject) => {\r\n            let ve = videoElement;\r\n            if (!ve) { // Must have a video element to do this capability tests\r\n                ve = document.createElement('video');\r\n            }\r\n\r\n            // Try key systems in order, first one with supported key system configuration\r\n            // is used\r\n            let found = false;\r\n            for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n                const systemString = ksConfigurations[ksIdx].ks.systemString;\r\n                const configs = ksConfigurations[ksIdx].configs;\r\n                let supportedAudio = null;\r\n                let supportedVideo = null;\r\n\r\n                // Try key system configs in order, first one with supported audio/video\r\n                // is used\r\n                for (let configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                    //let audios = configs[configIdx].audioCapabilities;\r\n                    const videos = configs[configIdx].videoCapabilities;\r\n                    // Look for supported video container/codecs\r\n                    if (videos && videos.length !== 0) {\r\n                        supportedVideo = []; // Indicates that we have a requested video config\r\n                        for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                            if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\r\n                                supportedVideo.push(videos[videoIdx]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // No supported audio or video in this configuration OR we have\r\n                    // requested audio or video configuration that is not supported\r\n                    if ((!supportedAudio && !supportedVideo) ||\r\n                        (supportedAudio && supportedAudio.length === 0) ||\r\n                        (supportedVideo && supportedVideo.length === 0)) {\r\n                        continue;\r\n                    }\r\n\r\n                    // This configuration is supported\r\n                    found = true;\r\n                    const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                    const ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                    const keySystemAccess = new KeySystemAccess(ks, ksConfig)\r\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\r\n                    resolve({ data: keySystemAccess });\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                const errorMessage = 'Key system access denied! -- No valid audio/video content configurations detected!';\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage });\r\n                reject({ error: errorMessage });\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    function selectKeySystem(keySystemAccess) {\r\n        keySystem = keySystemAccess.keySystem;\r\n        return Promise.resolve(keySystem);\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement) {\r\n            return;\r\n        }\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n\r\n            // Close any open sessions - avoids memory leak on LG webOS 2016/2017 TVs\r\n            for (var i = 0; i < sessions.length; i++) {\r\n                closeKeySession(sessions[i]);\r\n            }\r\n            sessions = [];\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.keyerror, eventHandler);\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            videoElement.addEventListener(api.keymessage, eventHandler);\r\n            videoElement.addEventListener(api.keyadded, eventHandler);\r\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\r\n        }\r\n    }\r\n\r\n    function createKeySession(ksInfo) {\r\n        if (!keySystem) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Determine if creating a new session is allowed\r\n        if (moreSessionsAllowed || sessions.length === 0) {\r\n            const newSession = { // Implements SessionToken\r\n                sessionId: null,\r\n                keyId: ksInfo.keyId,\r\n                initData: ksInfo.initData,\r\n\r\n                getKeyId: function () {\r\n                    return this.keyId;\r\n                },\r\n\r\n                getSessionId: function () {\r\n                    return this.sessionId;\r\n                },\r\n\r\n                getExpirationTime: function () {\r\n                    return NaN;\r\n                },\r\n\r\n                getSessionType: function () {\r\n                    return 'temporary';\r\n                }\r\n            };\r\n            pendingSessions.push(newSession);\r\n\r\n            // Send our request to the CDM\r\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(ksInfo.initData));\r\n\r\n            return newSession;\r\n\r\n        } else {\r\n            throw new Error('Multiple sessions not allowed!');\r\n        }\r\n\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const sessionId = sessionToken.sessionId;\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the CDM\r\n            videoElement[api.addKey](keySystem.systemString,\r\n                new Uint8Array(message), new Uint8Array(sessionToken.initData), sessionId);\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            for (let i = 0; i < message.keyPairs.length; i++) {\r\n                videoElement[api.addKey](keySystem.systemString,\r\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionId);\r\n            }\r\n        }\r\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the CDM\r\n        try {\r\n            videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionId);\r\n        } catch (error) {\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\r\n                data: null,\r\n                error: 'Error closing session (' + sessionToken.sessionId + ') ' + error.message\r\n            });\r\n        }\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */\r\n    }\r\n\r\n    function loadKeySession(/*ksInfo*/) { /* Not supported */\r\n    }\r\n\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */\r\n    }\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                let sessionToken = null;\r\n                switch (event.type) {\r\n                    case api.needkey:\r\n                        let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                        eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\r\n                        break;\r\n\r\n                    case api.keyerror:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            let code = ProtectionErrors.MEDIA_KEYERR_CODE;\r\n                            let msg = '';\r\n                            switch (event.errorCode.code) {\r\n                                case 1:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_UNKNOWN_CODE;\r\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - ' + ProtectionErrors.MEDIA_KEYERR_UNKNOWN_MESSAGE;\r\n                                    break;\r\n                                case 2:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_CLIENT_CODE;\r\n                                    msg += 'MEDIA_KEYERR_CLIENT - ' + ProtectionErrors.MEDIA_KEYERR_CLIENT_MESSAGE;\r\n                                    break;\r\n                                case 3:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_SERVICE_CODE;\r\n                                    msg += 'MEDIA_KEYERR_SERVICE - ' + ProtectionErrors.MEDIA_KEYERR_SERVICE_MESSAGE;\r\n                                    break;\r\n                                case 4:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_OUTPUT_CODE;\r\n                                    msg += 'MEDIA_KEYERR_OUTPUT - ' + ProtectionErrors.MEDIA_KEYERR_OUTPUT_MESSAGE;\r\n                                    break;\r\n                                case 5:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_CODE;\r\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - ' + ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE;\r\n                                    break;\r\n                                case 6:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_DOMAIN_CODE;\r\n                                    msg += 'MEDIA_KEYERR_DOMAIN - ' + ProtectionErrors.MEDIA_KEYERR_DOMAIN_MESSAGE;\r\n                                    break;\r\n                            }\r\n                            msg += '  System Code = ' + event.systemCode;\r\n                            // TODO: Build error string based on key error\r\n                            eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(code, msg, sessionToken) });\r\n                        } else {\r\n                            logger.error('No session token found for key error');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keyadded:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            logger.debug('DRM: Key added.');\r\n                            eventBus.trigger(events.KEY_ADDED, { data: sessionToken });//TODO not sure anything is using sessionToken? why there?\r\n                        } else {\r\n                            logger.debug('No session token found for key added');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keymessage:\r\n                        // If this CDM does not support session IDs, we will be limited\r\n                        // to a single session\r\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\r\n\r\n                        // SessionIDs supported\r\n                        if (moreSessionsAllowed) {\r\n                            // Attempt to find an uninitialized token with this sessionId\r\n                            sessionToken = findSessionByID(sessions, event.sessionId);\r\n                            if (!sessionToken && pendingSessions.length > 0) {\r\n\r\n                                // This is the first message for our latest session, so set the\r\n                                // sessionId and add it to our list\r\n                                sessionToken = pendingSessions.shift();\r\n                                sessions.push(sessionToken);\r\n                                sessionToken.sessionId = event.sessionId;\r\n\r\n                                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n                            }\r\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\r\n                            sessionToken = pendingSessions.shift();\r\n                            sessions.push(sessionToken);\r\n\r\n                            if (pendingSessions.length !== 0) {\r\n                                errHandler.error(new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_MESSAGE));\r\n                            }\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n\r\n                            // For ClearKey, the spec mandates that you pass this message to the\r\n                            // addKey method, so we always save it to the token since there is no\r\n                            // way to tell which key system is in use\r\n                            sessionToken.keyMessage = message;\r\n                            eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(sessionToken, message, event.defaultURL) });\r\n\r\n                        } else {\r\n                            logger.warn('No session token found for key message');\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Helper function to retrieve the stored session token based on a given\r\n     * sessionId value\r\n     *\r\n     * @param {Array} sessionArray - the array of sessions to search\r\n     * @param {*} sessionId - the sessionId to search for\r\n     * @returns {*} the session token with the given sessionId\r\n     */\r\n    function findSessionByID(sessionArray, sessionId) {\r\n        if (!sessionId || !sessionArray) {\r\n            return null;\r\n        } else {\r\n            const len = sessionArray.length;\r\n            for (let i = 0; i < len; i++) {\r\n                if (sessionArray[i].sessionId == sessionId) {\r\n                    return sessionArray[i];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function removeEventListeners() {\r\n        videoElement.removeEventListener(api.keyerror, eventHandler);\r\n        videoElement.removeEventListener(api.needkey, eventHandler);\r\n        videoElement.removeEventListener(api.keymessage, eventHandler);\r\n        videoElement.removeEventListener(api.keyadded, eventHandler);\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData,\r\n        getSessions,\r\n        requestKeySystemAccess,\r\n        selectKeySystem,\r\n        setMediaElement,\r\n        createKeySession,\r\n        updateKeySession,\r\n        closeKeySession,\r\n        setServerCertificate,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        stop: reset,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_01b); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Most recent EME implementation\r\n *\r\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst SYSTEM_STRING_PRIORITY = {};\r\nSYSTEM_STRING_PRIORITY[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = [ProtectionConstants.PLAYREADY_KEYSTEM_STRING, ProtectionConstants.PLAYREADY_RECOMMENDATION_KEYSTEM_STRING];\r\nSYSTEM_STRING_PRIORITY[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = [ProtectionConstants.WIDEVINE_KEYSTEM_STRING];\r\nSYSTEM_STRING_PRIORITY[ProtectionConstants.CLEARKEY_KEYSTEM_STRING] = [ProtectionConstants.CLEARKEY_KEYSTEM_STRING];\r\n\r\nfunction ProtectionModel_21Jan2015(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n\r\n    let instance,\r\n        logger,\r\n        keySystem,\r\n        videoElement,\r\n        mediaKeys,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        keySystem = null;\r\n        videoElement = null;\r\n        mediaKeys = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        const numSessions = sessions.length;\r\n        let session;\r\n\r\n        if (numSessions !== 0) {\r\n            // Called when we are done closing a session.  Success or fail\r\n            const done = function (session) {\r\n                removeSession(session);\r\n                if (sessions.length === 0) {\r\n                    if (videoElement) {\r\n                        videoElement.removeEventListener('encrypted', eventHandler);\r\n                        videoElement.setMediaKeys(null).then(function () {\r\n                            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n                        });\r\n                    } else {\r\n                        eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n                    }\r\n                }\r\n            };\r\n            for (let i = 0; i < numSessions; i++) {\r\n                session = sessions[i];\r\n                (function (s) {\r\n                    // Override closed promise resolver\r\n                    session.session.closed.then(function () {\r\n                        done(s);\r\n                    });\r\n                    // Close the session and handle errors, otherwise promise\r\n                    // resolver above will be called\r\n                    _closeKeySessionInternal(session).catch(function () {\r\n                        done(s);\r\n                    });\r\n\r\n                })(session);\r\n            }\r\n        } else {\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n        }\r\n    }\r\n\r\n    function stop() {\r\n        // Close and remove not usable sessions\r\n        let session;\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            session = sessions[i];\r\n            if (!session.getUsable()) {\r\n                _closeKeySessionInternal(session).catch(function () {\r\n                    removeSession(session);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i].initData) {\r\n                retVal.push(sessions[i].initData);\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function getSessions() {\r\n        return sessions;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        return new Promise((resolve, reject) => {\r\n            _requestKeySystemAccessInternal(ksConfigurations, 0, resolve, reject);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Initializes access to a key system. Once we found a valid configuration we get a mediaKeySystemAccess object\r\n     * @param ksConfigurations\r\n     * @param idx\r\n     * @param resolve\r\n     * @param reject\r\n     * @private\r\n     */\r\n    function _requestKeySystemAccessInternal(ksConfigurations, idx, resolve, reject) {\r\n\r\n        // In case requestMediaKeySystemAccess is not available we can not proceed and dispatch an error\r\n        if (navigator.requestMediaKeySystemAccess === undefined ||\r\n            typeof navigator.requestMediaKeySystemAccess !== 'function') {\r\n            const msg = 'Insecure origins are not allowed';\r\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {error: msg});\r\n            reject({error: msg});\r\n            return;\r\n        }\r\n\r\n        // If a systemStringPriority is defined by the application we use these values. Otherwise we use the default system string\r\n        // This is useful for DRM systems such as Playready for which multiple system strings are possible for instance com.microsoft.playready and com.microsoft.playready.recommendation\r\n        const protDataSystemStringPriority = ksConfigurations[idx].protData && ksConfigurations[idx].protData.systemStringPriority ? ksConfigurations[idx].protData.systemStringPriority : null;\r\n        const configs = ksConfigurations[idx].configs;\r\n        const currentKeySystem = ksConfigurations[idx].ks;\r\n        let systemString = currentKeySystem.systemString;\r\n\r\n        // Use the default values in case no values are provided by the application\r\n        const systemStringsToApply = protDataSystemStringPriority ? protDataSystemStringPriority : SYSTEM_STRING_PRIORITY[systemString] ? SYSTEM_STRING_PRIORITY[systemString] : [systemString];\r\n\r\n        // Check all the available system strings and the available configurations for support\r\n        _checkAccessForKeySystem(systemStringsToApply, configs)\r\n            .then((mediaKeySystemAccess) => {\r\n                const configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\r\n                    mediaKeySystemAccess.getConfiguration() : null;\r\n                const keySystemAccess = new KeySystemAccess(currentKeySystem, configuration);\r\n\r\n                keySystemAccess.mksa = mediaKeySystemAccess;\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {data: keySystemAccess});\r\n                resolve({data: keySystemAccess});\r\n            })\r\n            .catch((e) => {\r\n                if (idx + 1 < ksConfigurations.length) {\r\n                    _requestKeySystemAccessInternal(ksConfigurations, idx + 1, resolve, reject);\r\n                } else {\r\n                    const errorMessage = 'Key system access denied! ';\r\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {error: errorMessage + e.message});\r\n                    reject({error: errorMessage + e.message});\r\n                }\r\n            })\r\n    }\r\n\r\n    /**\r\n     * For a specific key system: Iterate over the possible system strings and resolve once a valid configuration was found\r\n     * @param {array} systemStringsToApply\r\n     * @param {object} configs\r\n     * @return {Promise}\r\n     * @private\r\n     */\r\n    function _checkAccessForKeySystem(systemStringsToApply, configs) {\r\n        return new Promise((resolve, reject) => {\r\n            _checkAccessForSystemStrings(systemStringsToApply, configs, 0, resolve, reject);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Recursively iterate over the possible system strings until a supported configuration is found or we ran out of options\r\n     * @param {array} systemStringsToApply\r\n     * @param {object} configs\r\n     * @param {number} idx\r\n     * @param {function} resolve\r\n     * @param {function} reject\r\n     * @private\r\n     */\r\n    function _checkAccessForSystemStrings(systemStringsToApply, configs, idx, resolve, reject) {\r\n        const systemString = systemStringsToApply[idx];\r\n\r\n        logger.debug(`Requesting key system access for system string ${systemString}`);\r\n\r\n        navigator.requestMediaKeySystemAccess(systemString, configs)\r\n            .then((mediaKeySystemAccess) => {\r\n                mediaKeySystemAccess.selectedSystemString = systemString;\r\n                resolve(mediaKeySystemAccess);\r\n            })\r\n            .catch((e) => {\r\n                if (idx + 1 < systemStringsToApply.length) {\r\n                    _checkAccessForSystemStrings(systemStringsToApply, configs, idx + 1, resolve, reject);\r\n                } else {\r\n                    reject(e);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Selects a key system by creating the mediaKeys and adding them to the video element\r\n     * @param keySystemAccess\r\n     * @return {Promise<unknown>}\r\n     */\r\n    function selectKeySystem(keySystemAccess) {\r\n        return new Promise((resolve, reject) => {\r\n            keySystemAccess.mksa.createMediaKeys()\r\n                .then((mkeys) => {\r\n                    keySystem = keySystemAccess.keySystem;\r\n                    mediaKeys = mkeys;\r\n                    if (videoElement) {\r\n                        return videoElement.setMediaKeys(mediaKeys)\r\n                    } else {\r\n                        return Promise.resolve();\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    resolve(keySystem);\r\n                })\r\n                .catch(function () {\r\n                    reject({error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\r\n                });\r\n        })\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener('encrypted', eventHandler);\r\n            if (videoElement.setMediaKeys) {\r\n                videoElement.setMediaKeys(null);\r\n            }\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener('encrypted', eventHandler);\r\n            if (videoElement.setMediaKeys && mediaKeys) {\r\n                videoElement.setMediaKeys(mediaKeys);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setServerCertificate(serverCertificate) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not set server certificate until you have selected a key system');\r\n        }\r\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\r\n            logger.info('DRM: License server certificate successfully updated.');\r\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED);\r\n        }).catch(function (error) {\r\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED, {error: new DashJSError(ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_CODE, ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE + error.name)});\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a key session, a session token and initialize a request by calling generateRequest\r\n     * @param ksInfo\r\n     */\r\n    function createKeySession(ksInfo) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        const session = mediaKeys.createSession(ksInfo.sessionType);\r\n        const sessionToken = createSessionToken(session, ksInfo);\r\n\r\n\r\n        // The \"keyids\" type is used for Clearkey when keys are provided directly in the protection data and a request to a license server is not needed\r\n        const dataType = keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING && (ksInfo.initData || (ksInfo.protData && ksInfo.protData.clearkeys)) ? ProtectionConstants.INITIALIZATION_DATA_TYPE_KEYIDS : ProtectionConstants.INITIALIZATION_DATA_TYPE_CENC;\r\n\r\n        session.generateRequest(dataType, ksInfo.initData).then(function () {\r\n            logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionId());\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {data: sessionToken});\r\n        }).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Error generating key request -- ' + error.name)\r\n            });\r\n        });\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const session = sessionToken.session;\r\n\r\n        // Send our request to the key session\r\n        if (protectionKeyController.isClearKey(keySystem)) {\r\n            message = message.toJWK();\r\n        }\r\n        session.update(message)\r\n            .then(() => {\r\n                eventBus.trigger(events.KEY_SESSION_UPDATED);\r\n            })\r\n            .catch(function (error) {\r\n                eventBus.trigger(events.KEY_ERROR, {error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, 'Error sending update() message! ' + error.name, sessionToken)});\r\n            });\r\n    }\r\n\r\n    function loadKeySession(ksInfo) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not load sessions until you have selected a key system');\r\n        }\r\n\r\n        const sessionId = ksInfo.sessionId;\r\n\r\n        // Check if session Id is not already loaded or loading\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessionId === sessions[i].sessionId) {\r\n                logger.warn('DRM: Ignoring session ID because we have already seen it!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const session = mediaKeys.createSession(ksInfo.sessionType);\r\n        const sessionToken = createSessionToken(session, ksInfo);\r\n\r\n        // Load persisted session data into our newly created session object\r\n        session.load(sessionId).then(function (success) {\r\n            if (success) {\r\n                logger.debug('DRM: Session loaded.  SessionID = ' + sessionToken.getSessionId());\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, {data: sessionToken});\r\n            } else {\r\n                removeSession(sessionToken);\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                    data: null,\r\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session! Invalid Session ID (' + sessionId + ')')\r\n                });\r\n            }\r\n        }).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session (' + sessionId + ')! ' + error.name)\r\n            });\r\n        });\r\n    }\r\n\r\n    function removeKeySession(sessionToken) {\r\n        const session = sessionToken.session;\r\n\r\n        session.remove().then(function () {\r\n            logger.debug('DRM: Session removed.  SessionID = ' + sessionToken.getSessionId());\r\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {data: sessionToken.getSessionId()});\r\n        }, function (error) {\r\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {\r\n                data: null,\r\n                error: 'Error removing session (' + sessionToken.getSessionId() + '). ' + error.name\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the key session\r\n        _closeKeySessionInternal(sessionToken).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\r\n                data: null,\r\n                error: 'Error closing session (' + sessionToken.getSessionId() + ') ' + error.name\r\n            });\r\n        });\r\n    }\r\n\r\n    function _closeKeySessionInternal(sessionToken) {\r\n        const session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener('keystatuseschange', sessionToken);\r\n        session.removeEventListener('message', sessionToken);\r\n\r\n        // Send our request to the key session\r\n        return session.close();\r\n    }\r\n\r\n    // This is our main event handler for all desired HTMLMediaElement events\r\n    // related to EME.  These events are translated into our API-independent\r\n    // versions of the same events\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case 'encrypted':\r\n                        if (event.initData) {\r\n                            let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(events.NEED_KEY, {key: new NeedKey(initData, event.initDataType)});\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    function removeSession(token) {\r\n        // Remove from our session list\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === token) {\r\n                sessions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function parseKeyStatus(args) {\r\n        // Edge and Chrome implement different version of keystatues, param are not on same order\r\n        let status, keyId;\r\n        if (args && args.length > 0) {\r\n            if (args[0]) {\r\n                if (typeof args[0] === 'string') {\r\n                    status = args[0];\r\n                } else {\r\n                    keyId = args[0];\r\n                }\r\n            }\r\n\r\n            if (args[1]) {\r\n                if (typeof args[1] === 'string') {\r\n                    status = args[1];\r\n                } else {\r\n                    keyId = args[1];\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            status: status,\r\n            keyId: keyId\r\n        };\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(session, ksInfo) {\r\n        const token = { // Implements SessionToken\r\n            session: session,\r\n            keyId: ksInfo.keyId,\r\n            initData: ksInfo.initData,\r\n            sessionId: ksInfo.sessionId,\r\n            sessionType: ksInfo.sessionType,\r\n\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case 'keystatuseschange':\r\n                        eventBus.trigger(events.KEY_STATUSES_CHANGED, {data: this});\r\n                        event.target.keyStatuses.forEach(function () {\r\n                            let keyStatus = parseKeyStatus(arguments);\r\n                            switch (keyStatus.status) {\r\n                                case 'expired':\r\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, {error: new DashJSError(ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE, ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE)});\r\n                                    break;\r\n                                default:\r\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, keyStatus);\r\n                                    break;\r\n                            }\r\n                        });\r\n                        break;\r\n\r\n                    case 'message':\r\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(this, message, undefined, event.messageType)});\r\n                        break;\r\n                }\r\n            },\r\n\r\n            getKeyId: function () {\r\n                return this.keyId;\r\n            },\r\n\r\n            getSessionId: function () {\r\n                return session.sessionId;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return this.sessionType;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return session.expiration;\r\n            },\r\n\r\n            getKeyStatuses: function () {\r\n                return session.keyStatuses;\r\n            },\r\n\r\n            getUsable: function () {\r\n                let usable = false;\r\n                session.keyStatuses.forEach(function () {\r\n                    let keyStatus = parseKeyStatus(arguments);\r\n                    if (keyStatus.status === 'usable') {\r\n                        usable = true;\r\n                    }\r\n                });\r\n                return usable;\r\n            }\r\n        };\r\n\r\n        // Add all event listeners\r\n        session.addEventListener('keystatuseschange', token);\r\n        session.addEventListener('message', token);\r\n\r\n        // Register callback for session closed Promise\r\n        session.closed.then(() => {\r\n            removeSession(token);\r\n            logger.debug('DRM: Session closed.  SessionID = ' + token.getSessionId());\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {data: token.getSessionId()});\r\n        });\r\n\r\n        // Add to our session list\r\n        sessions.push(token);\r\n\r\n        return token;\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData,\r\n        getSessions,\r\n        requestKeySystemAccess,\r\n        selectKeySystem,\r\n        setMediaElement,\r\n        setServerCertificate,\r\n        createKeySession,\r\n        updateKeySession,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        closeKeySession,\r\n        stop,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_21Jan2015); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\r\n *\r\n * Implemented by Internet Explorer 11 (Windows 8.1)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\n\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\n\r\nfunction ProtectionModel_3Feb2014(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const api = config.api;\r\n\r\n    let instance,\r\n        logger,\r\n        videoElement,\r\n        keySystem,\r\n        mediaKeys,\r\n        keySystemAccess,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        videoElement = null;\r\n        keySystem = null;\r\n        mediaKeys = null;\r\n        keySystemAccess = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        try {\r\n            for (let i = 0; i < sessions.length; i++) {\r\n                closeKeySession(sessions[i]);\r\n            }\r\n            if (videoElement) {\r\n                videoElement.removeEventListener(api.needkey, eventHandler);\r\n            }\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n        } catch (error) {\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE, { error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message });\r\n        }\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function getSessions() {\r\n        return sessions;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        return new Promise((resolve, reject) => {\r\n            // Try key systems in order, first one with supported key system configuration\r\n            // is used\r\n            let found = false;\r\n            for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n                const systemString = ksConfigurations[ksIdx].ks.systemString;\r\n                const configs = ksConfigurations[ksIdx].configs;\r\n                let supportedAudio = null;\r\n                let supportedVideo = null;\r\n\r\n                // Try key system configs in order, first one with supported audio/video\r\n                // is used\r\n                for (let configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                    const audios = configs[configIdx].audioCapabilities;\r\n                    const videos = configs[configIdx].videoCapabilities;\r\n\r\n                    // Look for supported audio container/codecs\r\n                    if (audios && audios.length !== 0) {\r\n                        supportedAudio = []; // Indicates that we have a requested audio config\r\n                        for (let audioIdx = 0; audioIdx < audios.length; audioIdx++) {\r\n                            if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\r\n                                supportedAudio.push(audios[audioIdx]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Look for supported video container/codecs\r\n                    if (videos && videos.length !== 0) {\r\n                        supportedVideo = []; // Indicates that we have a requested video config\r\n                        for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                            if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\r\n                                supportedVideo.push(videos[videoIdx]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // No supported audio or video in this configuration OR we have\r\n                    // requested audio or video configuration that is not supported\r\n                    if ((!supportedAudio && !supportedVideo) ||\r\n                        (supportedAudio && supportedAudio.length === 0) ||\r\n                        (supportedVideo && supportedVideo.length === 0)) {\r\n                        continue;\r\n                    }\r\n\r\n                    // This configuration is supported\r\n                    found = true;\r\n                    const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                    const ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                    const keySystemAccess = new KeySystemAccess(ks, ksConfig);\r\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\r\n                    resolve({ data: keySystemAccess });\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                const errorMessage = 'Key system access denied! -- No valid audio/video content configurations detected!';\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage });\r\n                reject({ error: errorMessage });\r\n            }\r\n        })\r\n    }\r\n\r\n    function selectKeySystem(ksAccess) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\r\n                keySystem = ksAccess.keySystem;\r\n                keySystemAccess = ksAccess;\r\n                if (videoElement) {\r\n                    setMediaKeys();\r\n                }\r\n                resolve(keySystem);\r\n            } catch (error) {\r\n                reject({ error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\r\n            }\r\n        })\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener(api.needkey, eventHandler);\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            if (mediaKeys) {\r\n                setMediaKeys();\r\n            }\r\n        }\r\n    }\r\n\r\n    function createKeySession(ksInfo) {\r\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Use the first video capability for the contentType.\r\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\r\n\r\n        // If player is trying to playback Audio only stream - don't error out.\r\n        let capabilities = null;\r\n\r\n        if (keySystemAccess.ksConfiguration.videoCapabilities && keySystemAccess.ksConfiguration.videoCapabilities.length > 0) {\r\n            capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\r\n        }\r\n\r\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities && keySystemAccess.ksConfiguration.audioCapabilities.length > 0) {\r\n            capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\r\n        }\r\n\r\n        if (capabilities === null) {\r\n            throw new Error('Can not create sessions for unknown content types.');\r\n        }\r\n\r\n        const contentType = capabilities.contentType;\r\n        const session = mediaKeys.createSession(contentType, new Uint8Array(ksInfo.initData), ksInfo.cdmData ? new Uint8Array(ksInfo.cdmData) : null);\r\n        const sessionToken = createSessionToken(session, ksInfo);\r\n\r\n        // Add all event listeners\r\n        session.addEventListener(api.error, sessionToken);\r\n        session.addEventListener(api.message, sessionToken);\r\n        session.addEventListener(api.ready, sessionToken);\r\n        session.addEventListener(api.close, sessionToken);\r\n\r\n        // Add to our session list\r\n        sessions.push(sessionToken);\r\n        logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionId());\r\n        eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const session = sessionToken.session;\r\n\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the key session\r\n            session.update(new Uint8Array(message));\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            session.update(new Uint8Array(message.toJWK()));\r\n        }\r\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\r\n    }\r\n\r\n    /**\r\n     * Close the given session and release all associated keys.  Following\r\n     * this call, the sessionToken becomes invalid\r\n     *\r\n     * @param {Object} sessionToken - the session token\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n        const session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener(api.error, sessionToken);\r\n        session.removeEventListener(api.message, sessionToken);\r\n        session.removeEventListener(api.ready, sessionToken);\r\n        session.removeEventListener(api.close, sessionToken);\r\n\r\n        // Remove from our session list\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === sessionToken) {\r\n                sessions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Send our request to the key session\r\n        session[api.release]();\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */\r\n    }\r\n\r\n    function loadKeySession(/*ksInfo*/) { /* Not supported */\r\n    }\r\n\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */\r\n    }\r\n\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n\r\n                    case api.needkey:\r\n                        if (event.initData) {\r\n                            const initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    // IE11 does not let you set MediaKeys until it has entered a certain\r\n    // readyState, so we need this logic to ensure we don't set the keys\r\n    // too early\r\n    function setMediaKeys() {\r\n        let boundDoSetKeys = null;\r\n        const doSetKeys = function () {\r\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\r\n            videoElement[api.setMediaKeys](mediaKeys);\r\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\r\n        };\r\n        if (videoElement.readyState >= 1) {\r\n            doSetKeys();\r\n        } else {\r\n            boundDoSetKeys = doSetKeys.bind(this);\r\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\r\n        }\r\n\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(keySession, ksInfo) {\r\n        return {\r\n            // Implements SessionToken\r\n            session: keySession,\r\n            keyId: ksInfo.keyId,\r\n            initData: ksInfo.initData,\r\n\r\n            getKeyId: function () {\r\n                return this.keyId;\r\n            },\r\n\r\n            getSessionId: function () {\r\n                return this.session.sessionId;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return NaN;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return 'temporary';\r\n            },\r\n\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case api.error:\r\n                        let errorStr = 'KeyError'; // TODO: Make better string from event\r\n                        eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, errorStr, this) });\r\n                        break;\r\n                    case api.message:\r\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\r\n                        break;\r\n                    case api.ready:\r\n                        logger.debug('DRM: Key added.');\r\n                        eventBus.trigger(events.KEY_ADDED);\r\n                        break;\r\n\r\n                    case api.close:\r\n                        logger.debug('DRM: Session closed.  SessionID = ' + this.getSessionId());\r\n                        eventBus.trigger(events.KEY_SESSION_CLOSED, { data: this.getSessionId() });\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData,\r\n        getSessions,\r\n        requestKeySystemAccess,\r\n        selectKeySystem,\r\n        setMediaElement,\r\n        createKeySession,\r\n        updateKeySession,\r\n        closeKeySession,\r\n        setServerCertificate,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        stop: reset,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_3Feb2014); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CableLabs ClearKey license server implementation\r\n *\r\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\r\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\nimport KeyPair from '../vo/KeyPair';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\r\n\r\nfunction ClearKey() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /* message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr*/) {\r\n        return 'json';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        if (!serverResponse.hasOwnProperty('keys')) {\r\n            return null;\r\n        }\r\n        let keyPairs = [];\r\n        for (let i = 0; i < serverResponse.keys.length; i++) {\r\n            let keypair = serverResponse.keys[i];\r\n            let keyid = keypair.kid.replace(/=/g, '');\r\n            let key = keypair.k.replace(/=/g, '');\r\n\r\n            keyPairs.push(new KeyPair(keyid, key));\r\n        }\r\n        return new ClearKeyKeySet(keyPairs);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nClearKey.__dashjs_factory_name = 'ClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(ClearKey); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CastLabs DRMToday License Server implementation\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\n\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nfunction DRMToday(config) {\r\n\r\n    config = config || {};\r\n    const BASE64 = config.BASE64;\r\n\r\n    const keySystems = {};\r\n    keySystems[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = {\r\n        responseType: 'json',\r\n        getLicenseMessage: function (response) {\r\n            return BASE64.decodeArray(response.license);\r\n        },\r\n        getErrorResponse: function (response) {\r\n            return response;\r\n        }\r\n    };\r\n    keySystems[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = {\r\n        responseType: 'arraybuffer',\r\n        getLicenseMessage: function (response) {\r\n            return response;\r\n        },\r\n        getErrorResponse: function (response) {\r\n            return String.fromCharCode.apply(null, new Uint8Array(response));\r\n        }\r\n    };\r\n\r\n    let instance;\r\n\r\n    function checkConfig() {\r\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray')) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].responseType;\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\r\n        checkConfig();\r\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDRMToday.__dashjs_factory_name = 'DRMToday';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(DRMToday); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/* global escape: true */\r\n\r\n/**\r\n * Microsoft PlayReady Test License Server\r\n *\r\n * For testing content that uses the PlayReady test server at\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n * @ignore\r\n */\r\n\r\nfunction PlayReady() {\r\n\r\n    let instance;\r\n\r\n    const soap = 'http://schemas.xmlsoap.org/soap/envelope/';\r\n\r\n    function uintToString(arrayBuffer) {\r\n        const encodedString = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\r\n        const decodedString = decodeURIComponent(escape(encodedString));\r\n        return decodedString;\r\n    }\r\n\r\n    function parseServerResponse(serverResponse) {\r\n        if (window.DOMParser) {\r\n            const stringResponse = uintToString(serverResponse);\r\n            const parser = new window.DOMParser();\r\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\r\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\r\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\r\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\r\n\r\n            if (fault) {\r\n                return null;\r\n            }\r\n        }\r\n        return serverResponse;\r\n    }\r\n\r\n    function parseErrorResponse(serverResponse) {\r\n        let faultstring = '';\r\n        let statusCode = '';\r\n        let message = '';\r\n        let idStart = -1;\r\n        let idEnd = -1;\r\n\r\n        if (window.DOMParser) {\r\n            const stringResponse = uintToString(serverResponse);\r\n            const parser = new window.DOMParser();\r\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\r\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\r\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\r\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\r\n            const detail = fault ? fault.getElementsByTagName('detail')[0] : null;\r\n            const exception = detail ? detail.getElementsByTagName('Exception')[0] : null;\r\n            let node = null;\r\n\r\n            if (fault === null) {\r\n                return stringResponse;\r\n            }\r\n\r\n            node = fault.getElementsByTagName('faultstring')[0].firstChild;\r\n            faultstring = node ? node.nodeValue : null;\r\n\r\n            if (exception !== null) {\r\n                node = exception.getElementsByTagName('StatusCode')[0];\r\n                statusCode = node ? node.firstChild.nodeValue : null;\r\n                node = exception.getElementsByTagName('Message')[0];\r\n                message = node ? node.firstChild.nodeValue : null;\r\n                idStart = message ? message.lastIndexOf('[') + 1 : -1;\r\n                idEnd = message ? message.indexOf(']') : -1;\r\n                message = message ? message.substring(idStart, idEnd) : '';\r\n            }\r\n        }\r\n\r\n        let errorString = `code: ${statusCode}, name: ${faultstring}`;\r\n        if (message) {\r\n            errorString += `, message: ${message}`;\r\n        }\r\n\r\n        return errorString;\r\n    }\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return parseServerResponse.call(this, serverResponse);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return parseErrorResponse.call(this, serverResponse);\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nPlayReady.__dashjs_factory_name = 'PlayReady';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(PlayReady); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction Widevine() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return serverResponse;\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nWidevine.__dashjs_factory_name = 'Widevine';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(Widevine); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\r\n *  type\r\n * @ignore\r\n */\r\nclass ClearKeyKeySet {\r\n    /**\r\n     * @param {Array.<KeyPair>} keyPairs\r\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\r\n     * or 'temporary'.  Can also be null or undefined.\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keyPairs, type) {\r\n        if (type && type !== 'persistent' && type !== 'temporary')\r\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\r\n        this.keyPairs = keyPairs;\r\n        this.type = type;\r\n    }\r\n\r\n    /**\r\n     * Convert this key set to its JSON Web Key (JWK) representation\r\n     *\r\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\r\n     */\r\n    toJWK() {\r\n        let i;\r\n        let numKeys = this.keyPairs.length;\r\n        let jwk = {keys: []};\r\n\r\n        for (i = 0; i < numKeys; i++) {\r\n            let key = {\r\n                kty: 'oct',\r\n                alg: 'A128KW',\r\n                kid: this.keyPairs[i].keyID,\r\n                k: this.keyPairs[i].key\r\n            };\r\n            jwk.keys.push(key);\r\n        }\r\n        if (this.type) {\r\n            jwk.type = this.type;\r\n        }\r\n        let jwkString = JSON.stringify(jwk);\r\n        const len = jwkString.length;\r\n\r\n        // Convert JSON string to ArrayBuffer\r\n        let buf = new ArrayBuffer(len);\r\n        let bView = new Uint8Array(buf);\r\n        for (i = 0; i < len; i++)\r\n            bView[i] = jwkString.charCodeAt(i);\r\n        return buf;\r\n    }\r\n}\r\n\r\nexport default ClearKeyKeySet;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc EME-independent KeyMessage\r\n * @ignore\r\n */\r\nclass KeyMessage {\r\n    /**\r\n     * @param {SessionToken} sessionToken the session\r\n     * to which the key message is associated\r\n     * @param {ArrayBuffer} message the key message\r\n     * @param {string} defaultURL license acquisition URL provided by the CDM\r\n     * @param {string} messageType Supported message types can be found\r\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n     * @class\r\n     */\r\n    constructor(sessionToken, message, defaultURL, messageType) {\r\n        this.sessionToken = sessionToken;\r\n        this.message = message;\r\n        this.defaultURL = defaultURL;\r\n        this.messageType = messageType ? messageType : 'license-request';\r\n    }\r\n}\r\n\r\nexport default KeyMessage;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Represents a 128-bit keyID and 128-bit encryption key\r\n * @ignore\r\n */\r\nclass KeyPair {\r\n    /**\r\n     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding\r\n     * @param {string} key 128-bit encryption key, base64 encoded, with no padding\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keyID, key) {\r\n        this.keyID = keyID;\r\n        this.key = key;\r\n    }\r\n}\r\n\r\nexport default KeyPair;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Creates a new key system access token.  Represents a valid key system for\r\n * given piece of content and key system requirements.  Used to initialize license\r\n * acquisition operations.\r\n * @ignore\r\n */\r\nclass KeySystemAccess {\r\n    /**\r\n     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\r\n     * @param {KeySystemConfiguration} ksConfiguration the\r\n     * subset of configurations passed to the key system access request that are supported\r\n     * by this user agent\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keySystem, ksConfiguration) {\r\n        this.keySystem = keySystem;\r\n        this.ksConfiguration = ksConfiguration;\r\n    }\r\n}\r\n\r\nexport default KeySystemAccess;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc Represents a set of configurations that describe the capabilities desired for\r\n *  support by a given CDM\r\n * @ignore\r\n */\r\nclass KeySystemConfiguration {\r\n    /**\r\n     * @param {Array.<MediaCapability>} audioCapabilities array of\r\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\r\n     * in the array.\r\n     * @param {Array.<MediaCapability>} videoCapabilities array of\r\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\r\n     * in the array.\r\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\r\n     * One of \"required\", \"optional\", or \"not-allowed\"\r\n     * @param {string} persistentState desired support for persistent storage of\r\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\r\n     * @param {Array.<string>} sessionTypes List of session types that must\r\n     * be supported by the key system\r\n     * @class\r\n     */\r\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\r\n        this.initDataTypes = [ 'cenc' ];\r\n        if (audioCapabilities && audioCapabilities.length) {\r\n            this.audioCapabilities = audioCapabilities;\r\n        }\r\n        if (videoCapabilities && videoCapabilities.length) {\r\n            this.videoCapabilities = videoCapabilities;\r\n        }\r\n        this.distinctiveIdentifier = distinctiveIdentifier;\r\n        this.persistentState = persistentState;\r\n        this.sessionTypes = sessionTypes;\r\n    }\r\n}\r\n\r\nexport default KeySystemConfiguration;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Defines a license request\r\n * @ignore\r\n */\r\nclass LicenseRequest {\r\n    /**\r\n     * Defines a license request\r\n     *\r\n     * @class\r\n     */\r\n    constructor(url, method, responseType, headers, withCredentials, messageType, sessionId, data) {\r\n\r\n        /**\r\n         * The license request url\r\n         */\r\n        this.url = url;\r\n\r\n        /**\r\n         * The HTTP method\r\n         */\r\n        this.method = method;\r\n\r\n        /**\r\n         * The HTTP response type\r\n         */\r\n        this.responseType = responseType;\r\n\r\n        /**\r\n         * The HTP request headers\r\n         */\r\n        this.headers = headers;\r\n\r\n        /**\r\n         * Wether request is done using credentials (cross-site cookies)\r\n         */\r\n        this.withCredentials = withCredentials;\r\n\r\n        /**\r\n         * The license request message type (see https://www.w3.org/TR/encrypted-media/#dom-mediakeymessagetype)\r\n         */\r\n        this.messageType = messageType;\r\n\r\n        /**\r\n         * The corresponding EME session ID\r\n         */\r\n        this.sessionId = sessionId;\r\n\r\n        /**\r\n         * The license request data\r\n         */\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport default LicenseRequest;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Defines a license response\r\n */\r\nclass LicenseResponse {\r\n    /**\r\n     * Defines a license request\r\n     *\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(url, headers, data) {\r\n\r\n        /**\r\n         * The url that was loaded, that can be redirected from original request url\r\n         */\r\n        this.url = url;\r\n\r\n        /**\r\n         * The HTP response headers\r\n         */\r\n        this.headers = headers;\r\n\r\n        /**\r\n         * The license response data\r\n         */\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport default LicenseResponse;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc A media capability\r\n * @ignore\r\n */\r\nclass MediaCapability {\r\n    /**\r\n     * @param {string} contentType MIME type and codecs (RFC6386)\r\n     * @param {string} robustness\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(contentType, robustness) {\r\n        this.contentType = contentType;\r\n        this.robustness = robustness;\r\n    }\r\n}\r\n\r\nexport default MediaCapability;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc NeedKey\r\n * @ignore\r\n */\r\nclass NeedKey {\r\n    /**\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @param {string} initDataType initialization data type\r\n     * @class\r\n     */\r\n    constructor(initData, initDataType) {\r\n        this.initData = initData;\r\n        this.initDataType = initDataType;\r\n    }\r\n}\r\n\r\nexport default NeedKey;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DashJSError {\r\n    constructor(code, message, data) {\r\n        this.code = code || null;\r\n        this.message = message || null;\r\n        this.data = data || null;\r\n    }\r\n}\r\n\r\nexport default DashJSError;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\r\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\r\n * by Metrics Reporting code.\r\n * @ignore\r\n */\r\nclass HTTPRequest {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Identifier of the TCP connection on which the HTTP request was sent.\r\n         * @public\r\n         */\r\n        this.tcpid = null;\r\n        /**\r\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\r\n         * The type of the request:\r\n         * - MPD\r\n         * - XLink expansion\r\n         * - Initialization Fragment\r\n         * - Index Fragment\r\n         * - Media Fragment\r\n         * - Bitstream Switching Fragment\r\n         * - other\r\n         * @public\r\n         */\r\n        this.type = null;\r\n        /**\r\n         * The original URL (before any redirects or failures)\r\n         * @public\r\n         */\r\n        this.url = null;\r\n        /**\r\n         * The actual URL requested, if different from above\r\n         * @public\r\n         */\r\n        this.actualurl = null;\r\n        /**\r\n         * The contents of the byte-range-spec part of the HTTP Range header.\r\n         * @public\r\n         */\r\n        this.range = null;\r\n        /**\r\n         * Real-Time | The real time at which the request was sent.\r\n         * @public\r\n         */\r\n        this.trequest = null;\r\n        /**\r\n         * Real-Time | The real time at which the first byte of the response was received.\r\n         * @public\r\n         */\r\n        this.tresponse = null;\r\n        /**\r\n         * The HTTP response code.\r\n         * @public\r\n         */\r\n        this.responsecode = null;\r\n        /**\r\n         * The duration of the throughput trace intervals (ms), for successful requests only.\r\n         * @public\r\n         */\r\n        this.interval = null;\r\n        /**\r\n         * Throughput traces, for successful requests only.\r\n         * @public\r\n         */\r\n        this.trace = [];\r\n\r\n        /**\r\n         * Type of stream (\"audio\" | \"video\" etc..)\r\n         * @public\r\n         */\r\n        this._stream = null;\r\n        /**\r\n         * Real-Time | The real time at which the request finished.\r\n         * @public\r\n         */\r\n        this._tfinish = null;\r\n        /**\r\n         * The duration of the media requests, if available, in seconds.\r\n         * @public\r\n         */\r\n        this._mediaduration = null;\r\n        /**\r\n         * The media segment quality\r\n         * @public\r\n         */\r\n        this._quality = null;\r\n        /**\r\n         * all the response headers from request.\r\n         * @public\r\n         */\r\n        this._responseHeaders = null;\r\n        /**\r\n         * The selected service location for the request. string.\r\n         * @public\r\n         */\r\n        this._serviceLocation = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\r\n * @ignore\r\n */\r\nclass HTTPRequestTrace {\r\n    /**\r\n    * @class\r\n    */\r\n    constructor() {\r\n        /**\r\n         * Real-Time | Measurement stream start.\r\n         * @public\r\n         */\r\n        this.s = null;\r\n        /**\r\n         * Measurement stream duration (ms).\r\n         * @public\r\n         */\r\n        this.d = null;\r\n        /**\r\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\r\n         * @public\r\n         */\r\n        this.b = [];\r\n        /**\r\n         * Measurement throughput in kbits/s\r\n         * @public\r\n         */\r\n         this.t = null;\r\n    }\r\n}\r\n\r\nHTTPRequest.GET = 'GET';\r\nHTTPRequest.HEAD = 'HEAD';\r\nHTTPRequest.MPD_TYPE = 'MPD';\r\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\r\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\r\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\r\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\r\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\r\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\r\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\r\nHTTPRequest.LICENSE = 'license';\r\nHTTPRequest.OTHER_TYPE = 'other';\r\n\r\nexport { HTTPRequest, HTTPRequestTrace };\r\n"],"sourceRoot":""}