{"version":3,"sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/webpack/bootstrap","webpack://dashjs/./src/streaming/vo/FragmentRequest.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/(webpack)/buildin/global.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/streaming/MediaPlayerEvents.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/./externals/BigInteger.js","webpack://dashjs/./src/streaming/vo/DataChunk.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/mss/MssFragmentInfoController.js","webpack://dashjs/./src/mss/errors/MssErrors.js","webpack://dashjs/./src/mss/MssFragmentMoofProcessor.js","webpack://dashjs/./src/mss/MssFragmentMoovProcessor.js","webpack://dashjs/./src/mss/MssFragmentProcessor.js","webpack://dashjs/./src/mss/parser/MssParser.js","webpack://dashjs/./src/mss/MssHandler.js","webpack://dashjs/./src/mss/index.js","webpack://dashjs/(webpack)/buildin/module.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FragmentRequest","url","this","action","ACTION_DOWNLOAD","startTime","NaN","mediaStartTime","mediaType","mediaInfo","type","duration","timescale","range","serviceLocation","requestStartDate","firstByteDate","requestEndDate","quality","index","availabilityStartTime","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","representationId","HTTPRequest","INIT_SEGMENT_TYPE","info","init","MEDIA_SEGMENT_TYPE","start","end","ACTION_COMPLETE","EventsBase","events","config","override","publicOnly","evt","indexOf","g","Function","e","ErrorsBase","errors","err","mediaPlayerEvents","AST_IN_FUTURE","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","BUFFER_LEVEL_UPDATED","DYNAMIC_TO_STATIC","ERROR","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_PROGRESS","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","LOG","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_STARTED","PERIOD_SWITCH_COMPLETED","QUALITY_CHANGE_REQUESTED","QUALITY_CHANGE_RENDERED","TRACK_CHANGE_RENDERED","STREAM_INITIALIZING","STREAM_UPDATED","STREAM_ACTIVATED","STREAM_DEACTIVATED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","TTML_PARSED","TTML_TO_PARSE","CAPTION_RENDERED","CAPTION_CONTAINER_RESIZE","CAN_PLAY","CAN_PLAY_THROUGH","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_LOADED_DATA","PLAYBACK_PAUSED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_SEEK_ASKED","PLAYBACK_STALLED","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","PLAYBACK_WAITING","MANIFEST_VALIDITY_CHANGED","EVENT_MODE_ON_START","EVENT_MODE_ON_RECEIVE","CONFORMANCE_VIOLATION","REPRESENTATION_SWITCH","tcpid","actualurl","trequest","tresponse","responsecode","interval","trace","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","HTTPRequestTrace","b","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INDEX_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","DVB_REPORTING_TYPE","LICENSE","OTHER_TYPE","bigInt","undefined","BASE","MAX_INT","MAX_INT_ARR","smallToArray","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseBase","parseValue","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","Math","floor","arrayToSmall","arr","trim","length","compareAbs","createArray","x","Array","truncate","ceil","add","a","sum","l_a","l_b","carry","base","push","addAny","addSmall","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","Error","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","modPow","plus","subtractAny","minus","small","multiply","l1","l2","multiplyKaratsuba","y","max","slice","ac","bd","abcd","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","bits","bitLength","logN","log","toJSNumber","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","roughLOB","min","gcd","integerLogarithm","tmp","text","toLowerCase","absBase","alphabetValues","digits","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","out","left","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","test","parseNumberValue","toArray","str","toJSON","parseInt","minusOne","lcm","isInstance","low","random","restricted","top","fromArray","DataChunk","streamId","segmentType","bytes","endFragment","DashJSError","code","message","data","MssFragmentInfoController","instance","logger","fragmentModel","started","loadFragmentTimeout","startFragmentTime","streamProcessor","baseURLController","debug","stop","clearTimeout","loadNextFragmentInfo","representation","getRepresentationController","getCurrentRepresentation","adaptation","period","mpd","manifest","Period_asArray","AdaptationSet_asArray","segments","SegmentTemplate","SegmentTimeline","S_asArray","request","segment","getMediaInfo","adaptationIndex","id","resolve","path","media","replace","bandwidth","tManifest","getRequestForSegment","requestFragment","getFragmentModel","isFragmentLoadedOrPending","executeRequest","initialize","getType","controllerType","fragmentInfoLoaded","deltaFragmentTime","deltaTime","delay","response","Date","getTime","setTimeout","error","reset","getLogger","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory","mssErrors","MSS_NO_TFRF_CODE","MSS_UNSUPPORTED_CODEC_CODE","MSS_NO_TFRF_MESSAGE","MSS_UNSUPPORTED_CODEC_MESSAGE","MssFragmentMoofProcessor","dashMetrics","playbackController","errorHandler","errHandler","eventBus","ISOBoxer","processTfrf","tfrf","tfdt","timeShiftBufferDepth","entry","segmentTime","endTime","S","entries","parseFloat","fragment_absolute_time","baseMediaDecodeTime","updateDVR","getStreamInfo","manifestInfo","fragment_duration","lastSegment","isPaused","splice","trigger","Events","sender","newDuration","MssErrors","dvrInfos","getCurrentDVRInfo","addDVRInfo","updateCurrentTime","getBoxOffset","parent","offset","boxes","size","convertFragment","isoFile","parseBuffer","tfhd","fetch","track_ID","traf","createFullBox","version","flags","trun","tfxd","_parent","sepiff","usertype","saio","entry_count","saiz","sample_count","default_sample_info_size","sample_info_size","NumberOfEntries","moof","getLength","data_offset","trafPosInMoof","sencPosInTraf","write","updateSegmentList","MssFragmentMoovProcessor","adaptationSet","contentProtection","trackId","constants","protectionController","createMoovBox","moov","createBox","mvhd","creation_time","modification_time","round","rate","volume","reserved1","reserved2","matrix","pre_defined","next_track_ID","createMvhdBox","trak","tkhd","layer","alternate_group","reserved3","width","height","createTkhdBox","mdia","mdhd","language","lang","createMdhdBox","hdlr","VIDEO","handler_type","AUDIO","reserved","createHdlrBox","minf","vmhd","graphicsmode","opcolor","createVmhdBox","smhd","balance","createSmhdBox","dinf","dref","location","createDrefBox","stbl","_data","stsd","codec","codecs","substring","avc1","data_reference_index","pre_defined1","pre_defined2","horizresolution","vertresolution","frame_count","compressorname","depth","pre_defined3","naluBytes","avcC","avcCLength","sps","pps","AVCProfileIndication","AVCLevelIndication","profile_compatibility","nalus","codecPrivateData","hexStringtoBuffer","Uint8Array","set","createAVC1ConfigurationRecord","sinf","createOriginalFormatBox","createSchemeTypeBox","createSchemeInformationBox","createAVCVisualSampleEntry","mp4a","channelcount","audioChannels","samplesize","reserved_3","samplerate","audioSamplingRate","esds","audioSpecificConfig","esdsLength","createMPEG4AACESDescriptor","createMP4AudioSampleEntry","createSampleEntry","createStsdBox","trex","default_sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","createTrexBox","keySystems","pssh_bytes","pssh","parsedBuffer","initData","Utils","appendBox","createProtectionSystemSpecificHeaderBox","getSupportedKeySystemsFromContentProtection","data_format","charCodeAt","stringToCharCode","schm","scheme_type","scheme_version","schi","tenc","default_IsEncrypted","default_IV_size","default_KID","createTrackEncryptionBox","buf","generateMoov","rep","ContentProtection","ftyp","major_brand","minor_version","compatible_brands","createFtypBox","createFile","arrayEqual","arr1","arr2","every","element","saioProcessor","_procFullBox","_procField","_procFieldArray","saizProcessor","sencProcessor","_procEntries","_procEntryField","_procSubEntries","clearAndCryptedData","uuidProcessor","_parsing","fragment_count","MssFragmentProcessor","mssFragmentMoovProcessor","mssFragmentMoofProcessor","context","processFragment","addBoxProcessor","MssParser","initialBufferSettings","BASE64","manifestModel","mediaPlayerModel","settings","SUPPORTED_CODECS","ROLE","ACCESSIBILITY","samplingFrequencyIndex","96000","88200","64000","48000","44100","32000","24000","22050","16000","12000","11025","8000","7350","mimeTypeMap","getAttributeAsBoolean","node","attrName","getAttribute","mapAdaptationSet","streamIndex","segmentTemplate","qualityLevels","representations","fallBackId","contentType","mimeType","subType","maxWidth","maxHeight","role","schemeIdUri","Role","Role_asArray","accessibility","Accessibility","Accessibility_asArray","mediaUrl","streamIndexTimeScale","prevSegment","segmentTimeline","chunks","getElementsByTagName","MAX_SAFE_INTEGER","mapSegmentTimeline","availabilityTimeOffset","mapSegmentTemplate","BaseURL","Id","mapRepresentation","Representation","Representation_asArray","qualityLevel","fourCCValue","isNaN","toUpperCase","warn","nalHeader","exec","substr","getH264Codec","codecPrivateDataHex","arr16","indexFreq","extensionSamplingFrequencyIndex","samplingRate","objectType","Channels","Uint16Array","setAttribute","getAACCodec","STPP","getKIDFromProtectionHeader","protectionHeader","wrmHeader","KID","uuid","prHeader","recordType","recordLength","recordValue","subarray","getWRMHeaderFromPRHeader","decodeArray","firstChild","buffer","fromCharCode","DOMParser","parseFromString","querySelector","textContent","swapBytes","pos1","pos2","temp","processManifest","xmlDoc","adaptations","timestampOffset","segmentDuration","contentProtections","smoothStreamingMedia","protection","protocol","profiles","dvrWindowLength","mediaPresentationDuration","minBufferTime","ttmlTimeIsRelative","refreshManifestOnSwitchTrack","doNotUpdateDVRWindowOnBufferUpdated","ignorePostponeTimePeriod","Period","streams","AdaptationSet","mapPeriod","pro","__text","__prefix","pro_asArray","createPRContentProtection","widevineCP","wvCencHeader","encodeASCII","createWidevineContentProtection","ContentProtection_asArray","initialization","targetLiveDelay","getLiveDelay","streaming","liveDelayFragmentCount","targetDelayCapping","liveDelay","bufferTime","stableBufferTime","bufferTimeAtTopQuality","bufferTimeAtTopQualityLongForm","calcFromSegmentTimeline","timeShiftBuffer","update","prevManifest","getValue","presentationTimeOffset","parse","performance","now","parseDOM","xmlParseTime","mss2dashTime","toPrecision","getMatchers","getIron","MssHandler","mssParser","fragmentInfoControllers","initSegmentType","streamController","mssFragmentProcessor","getStreamProcessor","getActiveStreamProcessors","filter","processor","getFragmentInfoController","controller","startFragmentInfoControllers","forEach","TEXT","fragmentInfoController","onInitFragmentNeeded","chunk","createDataChunk","streamInfo","INIT_FRAGMENT_LOADED","onSegmentMediaLoaded","isDynamic","dvrWindowSize","onPlaybackPaused","getIsDynamic","onPlaybackSeekAsked","onTTMLPreProcess","ttmlSubtitles","off","INIT_FRAGMENT_NEEDED","createMssParser","registerEvents","on","priority","getSingletonFactoryByName","getClassName","EVENT_PRIORITY_HIGH","updateClassFactory","global","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"dash.mss.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 98);\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass FragmentRequest {\r\n    constructor(url) {\r\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\r\n        this.startTime = NaN;\r\n        this.mediaStartTime = NaN;\r\n        this.mediaType = null;\r\n        this.mediaInfo = null;\r\n        this.type = null;\r\n        this.duration = NaN;\r\n        this.timescale = NaN;\r\n        this.range = null;\r\n        this.url = url || null;\r\n        this.serviceLocation = null;\r\n        this.requestStartDate = null;\r\n        this.firstByteDate = null;\r\n        this.requestEndDate = null;\r\n        this.quality = NaN;\r\n        this.index = NaN;\r\n        this.availabilityStartTime = null;\r\n        this.availabilityEndTime = null;\r\n        this.wallStartTime = null;\r\n        this.bytesLoaded = NaN;\r\n        this.bytesTotal = NaN;\r\n        this.delayLoadingTime = NaN;\r\n        this.responseType = 'arraybuffer';\r\n        this.representationId = null;\r\n    }\r\n\r\n    isInitializationRequest() {\r\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\r\n    }\r\n\r\n    setInfo(info) {\r\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\r\n        this.url = info && info.url ? info.url : null;\r\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\r\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\r\n    }\r\n}\r\n\r\nFragmentRequest.ACTION_DOWNLOAD = 'download';\r\nFragmentRequest.ACTION_COMPLETE = 'complete';\r\n\r\nexport default FragmentRequest;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventsBase {\r\n    extend (events, config) {\r\n        if (!events) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const evt in events) {\r\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\r\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\r\n            this[evt] = events[evt];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsBase;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ErrorsBase {\r\n    extend (errors, config) {\r\n        if (!errors) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const err in errors) {\r\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\r\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\r\n            this[err] = errors[err];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../core/events/EventsBase';\r\n\r\n/**\r\n * @class\r\n * @implements EventsBase\r\n */\r\nclass MediaPlayerEvents extends EventsBase {\r\n\r\n    /**\r\n     * @description Public facing external events to be used when developing a player that implements dash.js.\r\n     */\r\n    constructor() {\r\n        super();\r\n        /**\r\n         * Triggered when playback will not start yet\r\n         * as the MPD's availabilityStartTime is in the future.\r\n         * Check delay property in payload to determine time before playback will start.\r\n         * @event MediaPlayerEvents#AST_IN_FUTURE\r\n         */\r\n        this.AST_IN_FUTURE = 'astInFuture';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes to stalled.\r\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\r\n         * @event MediaPlayerEvents#BUFFER_EMPTY\r\n         */\r\n        this.BUFFER_EMPTY = 'bufferStalled';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes to loaded.\r\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\r\n         * @event MediaPlayerEvents#BUFFER_LOADED\r\n         */\r\n        this.BUFFER_LOADED = 'bufferLoaded';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\r\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\r\n         */\r\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\r\n\r\n        /**\r\n         * Triggered when the buffer level of a media type has been updated\r\n         * @event MediaPlayerEvents#BUFFER_LEVEL_UPDATED\r\n         */\r\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\r\n\r\n        /**\r\n         * Triggered when a dynamic stream changed to static (transition phase between Live and On-Demand).\r\n         * @event MediaPlayerEvents#DYNAMIC_TO_STATIC\r\n         */\r\n        this.DYNAMIC_TO_STATIC = 'dynamicToStatic';\r\n\r\n        /**\r\n         * Triggered when there is an error from the element or MSE source buffer.\r\n         * @event MediaPlayerEvents#ERROR\r\n         */\r\n        this.ERROR = 'error';\r\n        /**\r\n         * Triggered when a fragment download has completed.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\r\n         */\r\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\r\n\r\n        /**\r\n         * Triggered when a partial fragment download has completed.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\r\n         */\r\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\r\n        /**\r\n         * Triggered when a fragment download has started.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\r\n         */\r\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\r\n\r\n        /**\r\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\r\n         */\r\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\r\n\r\n        /**\r\n         * Triggered when {@link module:Debug} logger methods are called.\r\n         * @event MediaPlayerEvents#LOG\r\n         */\r\n        this.LOG = 'log';\r\n\r\n        /**\r\n         * Triggered when the manifest load is complete\r\n         * @event MediaPlayerEvents#MANIFEST_LOADED\r\n         */\r\n        this.MANIFEST_LOADED = 'manifestLoaded';\r\n\r\n        /**\r\n         * Triggered anytime there is a change to the overall metrics.\r\n         * @event MediaPlayerEvents#METRICS_CHANGED\r\n         */\r\n        this.METRICS_CHANGED = 'metricsChanged';\r\n\r\n        /**\r\n         * Triggered when an individual metric is added, updated or cleared.\r\n         * @event MediaPlayerEvents#METRIC_CHANGED\r\n         */\r\n        this.METRIC_CHANGED = 'metricChanged';\r\n\r\n        /**\r\n         * Triggered every time a new metric is added.\r\n         * @event MediaPlayerEvents#METRIC_ADDED\r\n         */\r\n        this.METRIC_ADDED = 'metricAdded';\r\n\r\n        /**\r\n         * Triggered every time a metric is updated.\r\n         * @event MediaPlayerEvents#METRIC_UPDATED\r\n         */\r\n        this.METRIC_UPDATED = 'metricUpdated';\r\n\r\n        /**\r\n         * Triggered when a new stream (period) starts.\r\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\r\n         */\r\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\r\n\r\n        /**\r\n         * Triggered at the stream end of a period.\r\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\r\n         */\r\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\r\n\r\n        /**\r\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\r\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\r\n         */\r\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\r\n\r\n        /**\r\n         * Triggered when the new ABR quality is being rendered on-screen.\r\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\r\n         */\r\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\r\n\r\n        /**\r\n         * Triggered when the new track is being rendered.\r\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\r\n         */\r\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is being loaded\r\n         * @event MediaPlayerEvents#STREAM_INITIALIZING\r\n         */\r\n        this.STREAM_INITIALIZING = 'streamInitializing';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is loaded\r\n         * @event MediaPlayerEvents#STREAM_UPDATED\r\n         */\r\n        this.STREAM_UPDATED = 'streamUpdated';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is activated\r\n         * @event MediaPlayerEvents#STREAM_ACTIVATED\r\n         */\r\n        this.STREAM_ACTIVATED = 'streamActivated';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is deactivated\r\n         * @event MediaPlayerEvents#STREAM_DEACTIVATED\r\n         */\r\n        this.STREAM_DEACTIVATED = 'streamDeactivated';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is activated\r\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\r\n         */\r\n        this.STREAM_INITIALIZED = 'streamInitialized';\r\n\r\n        /**\r\n         * Triggered when the player has been reset.\r\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\r\n         */\r\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\r\n\r\n        /**\r\n         * Triggered once all text tracks detected in the MPD are added to the video element.\r\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\r\n         */\r\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\r\n\r\n        /**\r\n         * Triggered when a text track is added to the video element's TextTrackList\r\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\r\n         */\r\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\r\n\r\n        /**\r\n         * Triggered when a ttml chunk is parsed.\r\n         * @event MediaPlayerEvents#TTML_PARSED\r\n         */\r\n        this.TTML_PARSED = 'ttmlParsed';\r\n\r\n        /**\r\n         * Triggered when a ttml chunk has to be parsed.\r\n         * @event MediaPlayerEvents#TTML_TO_PARSE\r\n         */\r\n        this.TTML_TO_PARSE = 'ttmlToParse';\r\n\r\n        /**\r\n         * Triggered when a caption is rendered.\r\n         * @event MediaPlayerEvents#CAPTION_RENDERED\r\n         */\r\n        this.CAPTION_RENDERED = 'captionRendered';\r\n\r\n        /**\r\n         * Triggered when the caption container is resized.\r\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\r\n         */\r\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\r\n\r\n        /**\r\n         * Sent when enough data is available that the media can be played,\r\n         * at least for a couple of frames.  This corresponds to the\r\n         * HAVE_ENOUGH_DATA readyState.\r\n         * @event MediaPlayerEvents#CAN_PLAY\r\n         */\r\n        this.CAN_PLAY = 'canPlay';\r\n\r\n        /**\r\n         * This corresponds to the CAN_PLAY_THROUGH readyState.\r\n         * @event MediaPlayerEvents#CAN_PLAY_THROUGH\r\n         */\r\n        this.CAN_PLAY_THROUGH = 'canPlayThrough';\r\n\r\n        /**\r\n         * Sent when playback completes.\r\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\r\n         */\r\n        this.PLAYBACK_ENDED = 'playbackEnded';\r\n\r\n        /**\r\n         * Sent when an error occurs.  The element's error\r\n         * attribute contains more information.\r\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\r\n         */\r\n        this.PLAYBACK_ERROR = 'playbackError';\r\n\r\n        /**\r\n         * Sent when playback is not allowed (for example if user gesture is needed).\r\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\r\n         */\r\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\r\n\r\n        /**\r\n         * The media's metadata has finished loading; all attributes now\r\n         * contain as much useful information as they're going to.\r\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\r\n         */\r\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\r\n\r\n        /**\r\n         * The media's metadata has finished loading; all attributes now\r\n         * contain as much useful information as they're going to.\r\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\r\n         */\r\n        this.PLAYBACK_LOADED_DATA = 'playbackLoadedData';\r\n\r\n        /**\r\n         * Sent when playback is paused.\r\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\r\n         */\r\n        this.PLAYBACK_PAUSED = 'playbackPaused';\r\n\r\n        /**\r\n         * Sent when the media begins to play (either for the first time, after having been paused,\r\n         * or after ending and then restarting).\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\r\n         */\r\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\r\n\r\n        /**\r\n         * Sent periodically to inform interested parties of progress downloading\r\n         * the media. Information about the current amount of the media that has\r\n         * been downloaded is available in the media element's buffered attribute.\r\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\r\n         */\r\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\r\n\r\n        /**\r\n         * Sent when the playback speed changes.\r\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\r\n         */\r\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\r\n\r\n        /**\r\n         * Sent when a seek operation completes.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\r\n         */\r\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\r\n\r\n        /**\r\n         * Sent when a seek operation begins.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\r\n         */\r\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\r\n\r\n        /**\r\n         * Sent when a seek operation has been asked.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEK_ASKED\r\n         */\r\n        this.PLAYBACK_SEEK_ASKED = 'playbackSeekAsked';\r\n\r\n        /**\r\n         * Sent when the video element reports stalled\r\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\r\n         */\r\n        this.PLAYBACK_STALLED = 'playbackStalled';\r\n\r\n        /**\r\n         * Sent when playback of the media starts after having been paused;\r\n         * that is, when playback is resumed after a prior pause event.\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\r\n         */\r\n        this.PLAYBACK_STARTED = 'playbackStarted';\r\n\r\n        /**\r\n         * The time indicated by the element's currentTime attribute has changed.\r\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\r\n         */\r\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\r\n\r\n        /**\r\n         * Sent when the media playback has stopped because of a temporary lack of data.\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\r\n         */\r\n        this.PLAYBACK_WAITING = 'playbackWaiting';\r\n\r\n        /**\r\n         * Manifest validity changed - As a result of an MPD validity expiration event.\r\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\r\n         */\r\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\r\n\r\n        /**\r\n         * Dash events are triggered at their respective start points on the timeline.\r\n         * @event MediaPlayerEvents#EVENT_MODE_ON_START\r\n         */\r\n        this.EVENT_MODE_ON_START = 'eventModeOnStart';\r\n\r\n        /**\r\n         * Dash events are triggered as soon as they were parsed.\r\n         * @event MediaPlayerEvents#EVENT_MODE_ON_RECEIVE\r\n         */\r\n        this.EVENT_MODE_ON_RECEIVE = 'eventModeOnReceive';\r\n\r\n        /**\r\n         * Event that is dispatched whenever the player encounters a potential conformance validation that might lead to unexpected/not optimal behavior\r\n         * @event MediaPlayerEvents#CONFORMANCE_VIOLATION\r\n         */\r\n        this.CONFORMANCE_VIOLATION = 'conformanceViolation';\r\n\r\n        /**\r\n         * Event that is dispatched whenever the player switches to a different representation\r\n         * @event MediaPlayerEvents#REPRESENTATION_SWITCH\r\n         */\r\n        this.REPRESENTATION_SWITCH = 'representationSwitch';\r\n    }\r\n}\r\n\r\nlet mediaPlayerEvents = new MediaPlayerEvents();\r\nexport default mediaPlayerEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\r\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\r\n * by Metrics Reporting code.\r\n * @ignore\r\n */\r\nclass HTTPRequest {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Identifier of the TCP connection on which the HTTP request was sent.\r\n         * @public\r\n         */\r\n        this.tcpid = null;\r\n        /**\r\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\r\n         * The type of the request:\r\n         * - MPD\r\n         * - XLink expansion\r\n         * - Initialization Fragment\r\n         * - Index Fragment\r\n         * - Media Fragment\r\n         * - Bitstream Switching Fragment\r\n         * - other\r\n         * @public\r\n         */\r\n        this.type = null;\r\n        /**\r\n         * The original URL (before any redirects or failures)\r\n         * @public\r\n         */\r\n        this.url = null;\r\n        /**\r\n         * The actual URL requested, if different from above\r\n         * @public\r\n         */\r\n        this.actualurl = null;\r\n        /**\r\n         * The contents of the byte-range-spec part of the HTTP Range header.\r\n         * @public\r\n         */\r\n        this.range = null;\r\n        /**\r\n         * Real-Time | The real time at which the request was sent.\r\n         * @public\r\n         */\r\n        this.trequest = null;\r\n        /**\r\n         * Real-Time | The real time at which the first byte of the response was received.\r\n         * @public\r\n         */\r\n        this.tresponse = null;\r\n        /**\r\n         * The HTTP response code.\r\n         * @public\r\n         */\r\n        this.responsecode = null;\r\n        /**\r\n         * The duration of the throughput trace intervals (ms), for successful requests only.\r\n         * @public\r\n         */\r\n        this.interval = null;\r\n        /**\r\n         * Throughput traces, for successful requests only.\r\n         * @public\r\n         */\r\n        this.trace = [];\r\n\r\n        /**\r\n         * Type of stream (\"audio\" | \"video\" etc..)\r\n         * @public\r\n         */\r\n        this._stream = null;\r\n        /**\r\n         * Real-Time | The real time at which the request finished.\r\n         * @public\r\n         */\r\n        this._tfinish = null;\r\n        /**\r\n         * The duration of the media requests, if available, in seconds.\r\n         * @public\r\n         */\r\n        this._mediaduration = null;\r\n        /**\r\n         * The media segment quality\r\n         * @public\r\n         */\r\n        this._quality = null;\r\n        /**\r\n         * all the response headers from request.\r\n         * @public\r\n         */\r\n        this._responseHeaders = null;\r\n        /**\r\n         * The selected service location for the request. string.\r\n         * @public\r\n         */\r\n        this._serviceLocation = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\r\n * @ignore\r\n */\r\nclass HTTPRequestTrace {\r\n    /**\r\n    * @class\r\n    */\r\n    constructor() {\r\n        /**\r\n         * Real-Time | Measurement stream start.\r\n         * @public\r\n         */\r\n        this.s = null;\r\n        /**\r\n         * Measurement stream duration (ms).\r\n         * @public\r\n         */\r\n        this.d = null;\r\n        /**\r\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\r\n         * @public\r\n         */\r\n        this.b = [];\r\n        /**\r\n         * Measurement throughput in kbits/s\r\n         * @public\r\n         */\r\n         this.t = null;\r\n    }\r\n}\r\n\r\nHTTPRequest.GET = 'GET';\r\nHTTPRequest.HEAD = 'HEAD';\r\nHTTPRequest.MPD_TYPE = 'MPD';\r\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\r\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\r\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\r\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\r\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\r\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\r\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\r\nHTTPRequest.LICENSE = 'license';\r\nHTTPRequest.OTHER_TYPE = 'other';\r\n\r\nexport { HTTPRequest, HTTPRequestTrace };\r\n","var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET=\"0123456789abcdefghijklmnopqrstuvwxyz\";var supportsNativeBigInt=typeof BigInt===\"function\";function Integer(v,radix,alphabet,caseSensitive){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10&&!alphabet?parseValue(v):parseBase(v,radix,alphabet,caseSensitive);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(value){this.value=value}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value)};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value)};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value)};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt){return[new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)]}var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value)};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value)};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(v){var n=parseValue(v);var a=this.value,b=n.value;var _0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);var x=this;var y=Integer[1];while(true){if((b&_1)===_1){y=y.times(x);--b}if(b===_0)break;b/=_2;x=x.square()}return y};BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};NativeBigInt.prototype.compareAbs=function(v){var a=this.value;var b=parseValue(v).value;a=a>=0?a:-a;b=b>=0?b:-b;return a===b?0:a>b?1:-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var a=this.value;var b=parseValue(v).value;return a===b?0:a>b?1:-1};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);if(n.isZero())return false;if(n.isUnit())return true;if(n.compareAbs(2)===0)return this.isEven();return this.mod(n).isZero()};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.isUnit()||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var logN=Math.log(2)*bits.toJSNumber();var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.isZero()){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.isUnit())throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(v){var remQuo;var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:typeof v===\"bigint\"?v|BigInt(LOBMASK_I):v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var digits=toBase(range,BASE).value;var result=[],restricted=true;for(var i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE;var digit=truncate(Math.random()*top);result.push(digit);if(digit<top)restricted=false}return low.add(Integer.fromArray(result,BASE,false))}var parseBase=function(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET;text=String(text);if(!caseSensitive){text=text.toLowerCase();alphabet=alphabet.toLowerCase()}var length=text.length;var i;var absBase=Math.abs(base);var alphabetValues={};for(i=0;i<alphabet.length;i++){alphabetValues[alphabet[i]]=i}for(i=0;i<length;i++){var c=text[i];if(c===\"-\")continue;if(c in alphabetValues){if(alphabetValues[c]>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i];if(c in alphabetValues)digits.push(parseValue(alphabetValues[c]));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\"&&i<text.length);digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit,alphabet){alphabet=alphabet||DEFAULT_ALPHABET;if(digit<alphabet.length){return alphabet[digit]}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.isUnit()){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(function(x){return stringify(x,alphabet)}).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix,alphabet);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix,alphabet);return String(this.value)};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);if(supportsNativeBigInt){return new NativeBigInt(BigInt(sign?\"-\"+v:v))}var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(supportsNativeBigInt){return new NativeBigInt(BigInt(v))}if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}if(typeof v===\"bigint\"){return new NativeBigInt(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=parseValue(i);if(i>0)Integer[-i]=parseValue(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DataChunk {\r\n    //Represents a data structure that keep all the necessary info about a single init/media segment\r\n    constructor() {\r\n        this.streamId = null;\r\n        this.mediaInfo = null;\r\n        this.segmentType = null;\r\n        this.quality = NaN;\r\n        this.index = NaN;\r\n        this.bytes = null;\r\n        this.start = NaN;\r\n        this.end = NaN;\r\n        this.duration = NaN;\r\n        this.representationId = null;\r\n        this.endFragment = null;\r\n    }\r\n}\r\n\r\nexport default DataChunk;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DashJSError {\r\n    constructor(code, message, data) {\r\n        this.code = code || null;\r\n        this.message = message || null;\r\n        this.data = data || null;\r\n    }\r\n}\r\n\r\nexport default DashJSError;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\r\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\r\n\r\nfunction MssFragmentInfoController(config) {\r\n\r\n    config = config || {};\r\n\r\n    let instance,\r\n        logger,\r\n        fragmentModel,\r\n        started,\r\n        type,\r\n        loadFragmentTimeout,\r\n        startTime,\r\n        startFragmentTime,\r\n        index;\r\n\r\n    const streamProcessor = config.streamProcessor;\r\n    const baseURLController = config.baseURLController;\r\n    const debug = config.debug;\r\n    const controllerType = 'MssFragmentInfoController';\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n    }\r\n\r\n    function initialize() {\r\n        type = streamProcessor.getType();\r\n        fragmentModel = streamProcessor.getFragmentModel();\r\n\r\n        started = false;\r\n        startTime = null;\r\n        startFragmentTime = null;\r\n    }\r\n\r\n    function start() {\r\n        if (started) return;\r\n\r\n        logger.debug('Start');\r\n\r\n        started = true;\r\n        index = 0;\r\n\r\n        loadNextFragmentInfo();\r\n    }\r\n\r\n    function stop() {\r\n        if (!started) return;\r\n\r\n        logger.debug('Stop');\r\n\r\n        clearTimeout(loadFragmentTimeout);\r\n        started = false;\r\n        startTime = null;\r\n        startFragmentTime = null;\r\n    }\r\n\r\n    function reset() {\r\n        stop();\r\n    }\r\n\r\n    function loadNextFragmentInfo() {\r\n        if (!started) return;\r\n\r\n        // Get last segment from SegmentTimeline\r\n        const representation = getCurrentRepresentation();\r\n        const manifest = representation.adaptation.period.mpd.manifest;\r\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\r\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S_asArray;\r\n        const segment = segments[segments.length - 1];\r\n\r\n        // logger.debug('Last fragment time: ' + (segment.t / adaptation.SegmentTemplate.timescale));\r\n\r\n        // Generate segment request\r\n        const request = getRequestForSegment(adaptation, representation, segment);\r\n\r\n        // Send segment request\r\n        requestFragment.call(this, request);\r\n    }\r\n\r\n    function getRequestForSegment(adaptation, representation, segment) {\r\n        let timescale = adaptation.SegmentTemplate.timescale;\r\n        let request = new FragmentRequest();\r\n\r\n        request.mediaType = type;\r\n        request.type = HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE;\r\n        // request.range = segment.mediaRange;\r\n        request.startTime = segment.t / timescale;\r\n        request.duration = segment.d / timescale;\r\n        request.timescale = timescale;\r\n        // request.availabilityStartTime = segment.availabilityStartTime;\r\n        // request.availabilityEndTime = segment.availabilityEndTime;\r\n        // request.wallStartTime = segment.wallStartTime;\r\n        request.quality = representation.index;\r\n        request.index = index++;\r\n        request.mediaInfo = streamProcessor.getMediaInfo();\r\n        request.adaptationIndex = representation.adaptation.index;\r\n        request.representationId = representation.id;\r\n        request.url = baseURLController.resolve(representation.path).url + adaptation.SegmentTemplate.media;\r\n        request.url = request.url.replace('$Bandwidth$', representation.bandwidth);\r\n        request.url = request.url.replace('$Time$', segment.tManifest ? segment.tManifest : segment.t);\r\n        request.url = request.url.replace('/Fragments(', '/FragmentInfo(');\r\n\r\n        return request;\r\n    }\r\n\r\n    function getCurrentRepresentation() {\r\n        const representationController = streamProcessor.getRepresentationController();\r\n        const representation = representationController.getCurrentRepresentation();\r\n        return representation;\r\n    }\r\n\r\n    function requestFragment(request) {\r\n        // logger.debug('Load FragmentInfo for time: ' + request.startTime);\r\n        if (streamProcessor.getFragmentModel().isFragmentLoadedOrPending(request)) {\r\n            // We may have reached end of timeline in case of start-over streams\r\n            logger.debug('End of timeline');\r\n            stop();\r\n            return;\r\n        }\r\n\r\n        fragmentModel.executeRequest(request);\r\n    }\r\n\r\n    function fragmentInfoLoaded (e) {\r\n        if (!started) return;\r\n\r\n        const request = e.request;\r\n        if (!e.response) {\r\n            logger.error('Load error', request.url);\r\n            return;\r\n        }\r\n\r\n        let deltaFragmentTime,\r\n            deltaTime,\r\n            delay;\r\n\r\n        // logger.debug('FragmentInfo loaded: ', request.url);\r\n\r\n        if (startTime === null) {\r\n            startTime = new Date().getTime();\r\n        }\r\n\r\n        if (!startFragmentTime) {\r\n            startFragmentTime = request.startTime;\r\n        }\r\n\r\n        // Determine delay before requesting next FragmentInfo\r\n        deltaTime = (new Date().getTime() - startTime) / 1000;\r\n        deltaFragmentTime = (request.startTime + request.duration) - startFragmentTime;\r\n        delay = Math.max(0, (deltaFragmentTime - deltaTime));\r\n\r\n        // Set timeout for requesting next FragmentInfo\r\n        clearTimeout(loadFragmentTimeout);\r\n        loadFragmentTimeout = setTimeout(function () {\r\n            loadFragmentTimeout = null;\r\n            loadNextFragmentInfo();\r\n        }, delay * 1000);\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        controllerType: controllerType,\r\n        start: start,\r\n        fragmentInfoLoaded: fragmentInfoLoaded,\r\n        getType: getType,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssFragmentInfoController.__dashjs_factory_name = 'MssFragmentInfoController';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentInfoController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ErrorsBase from '../../core/errors/ErrorsBase';\r\n/**\r\n * @class\r\n *\r\n */\r\nclass MssErrors extends ErrorsBase {\r\n\tconstructor () {\r\n        super();\r\n        /**\r\n         * Error code returned when no tfrf box is detected in MSS live stream\r\n         */\r\n        this.MSS_NO_TFRF_CODE = 200;\r\n\r\n        /**\r\n         * Error code returned when one of the codecs defined in the manifest is not supported\r\n         */\r\n        this.MSS_UNSUPPORTED_CODEC_CODE = 201;\r\n\r\n        this.MSS_NO_TFRF_MESSAGE = 'Missing tfrf in live media segment';\r\n        this.MSS_UNSUPPORTED_CODEC_MESSAGE = 'Unsupported codec';\r\n    }\r\n}\r\n\r\nlet mssErrors = new MssErrors();\r\nexport default mssErrors;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport DashJSError from '../streaming/vo/DashJSError';\r\nimport MssErrors from './errors/MssErrors';\r\n\r\nimport Events from '../streaming/MediaPlayerEvents';\r\n\r\n/**\r\n * @module MssFragmentMoofProcessor\r\n * @ignore\r\n * @param {Object} config object\r\n */\r\nfunction MssFragmentMoofProcessor(config) {\r\n\r\n    config = config || {};\r\n    let instance,\r\n        type,\r\n        logger;\r\n    const dashMetrics = config.dashMetrics;\r\n    const playbackController = config.playbackController;\r\n    const errorHandler = config.errHandler;\r\n    const eventBus = config.eventBus;\r\n    const ISOBoxer = config.ISOBoxer;\r\n    const debug = config.debug;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        type = '';\r\n    }\r\n\r\n    function processTfrf(request, tfrf, tfdt, streamProcessor) {\r\n        const representationController = streamProcessor.getRepresentationController();\r\n        const representation = representationController.getCurrentRepresentation();\r\n\r\n        const manifest = representation.adaptation.period.mpd.manifest;\r\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\r\n        const timescale = adaptation.SegmentTemplate.timescale;\r\n\r\n        type = streamProcessor.getType();\r\n\r\n        // Process tfrf only for live streams or start-over static streams (timeShiftBufferDepth > 0)\r\n        if (manifest.type !== 'dynamic' && !manifest.timeShiftBufferDepth) {\r\n            return;\r\n        }\r\n\r\n        if (!tfrf) {\r\n            errorHandler.error(new DashJSError(MssErrors.MSS_NO_TFRF_CODE, MssErrors.MSS_NO_TFRF_MESSAGE));\r\n            return;\r\n        }\r\n\r\n        // Get adaptation's segment timeline (always a SegmentTimeline in Smooth Streaming use case)\r\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S;\r\n        const entries = tfrf.entry;\r\n        let entry,\r\n            segmentTime,\r\n            range;\r\n        let segment = null;\r\n        let t = 0;\r\n        let endTime;\r\n        let availabilityStartTime = null;\r\n\r\n        if (entries.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Consider only first tfrf entry (to avoid pre-condition failure on fragment info requests)\r\n        entry = entries[0];\r\n\r\n        // In case of start-over streams, check if we have reached end of original manifest duration (set in timeShiftBufferDepth)\r\n        // => then do not update anymore timeline\r\n        if (manifest.type === 'static') {\r\n            // Get first segment time\r\n            segmentTime = segments[0].tManifest ? parseFloat(segments[0].tManifest) : segments[0].t;\r\n            if (entry.fragment_absolute_time > (segmentTime + (manifest.timeShiftBufferDepth * timescale))) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // logger.debug('entry - t = ', (entry.fragment_absolute_time / timescale));\r\n\r\n        // Get last segment time\r\n        segmentTime = segments[segments.length - 1].tManifest ? parseFloat(segments[segments.length - 1].tManifest) : segments[segments.length - 1].t;\r\n        // logger.debug('Last segment - t = ', (segmentTime / timescale));\r\n\r\n        // Check if we have to append new segment to timeline\r\n        if (entry.fragment_absolute_time <= segmentTime) {\r\n            // Update DVR window range => set range end to end time of current segment\r\n            range = {\r\n                start: segments[0].t / timescale,\r\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\r\n            };\r\n\r\n            updateDVR(request.mediaType, range, streamProcessor.getStreamInfo().manifestInfo);\r\n            return;\r\n        }\r\n\r\n        // logger.debug('Add new segment - t = ', (entry.fragment_absolute_time / timescale));\r\n        segment = {};\r\n        segment.t = entry.fragment_absolute_time;\r\n        segment.d = entry.fragment_duration;\r\n        // If timestamps starts at 0 relative to 1st segment (dynamic to static) then update segment time\r\n        if (segments[0].tManifest) {\r\n            segment.t -= parseFloat(segments[0].tManifest) - segments[0].t;\r\n            segment.tManifest = entry.fragment_absolute_time;\r\n        }\r\n\r\n        // Patch previous segment duration\r\n        let lastSegment = segments[segments.length - 1];\r\n        if (lastSegment.t + lastSegment.d !== segment.t) {\r\n            logger.debug('Patch segment duration - t = ', lastSegment.t + ', d = ' + lastSegment.d + ' => ' + (segment.t - lastSegment.t));\r\n            lastSegment.d = segment.t - lastSegment.t;\r\n        }\r\n\r\n        segments.push(segment);\r\n\r\n        // In case of static start-over streams, update content duration\r\n        if (manifest.type === 'static') {\r\n            if (type === 'video') {\r\n                segment = segments[segments.length - 1];\r\n                endTime = (segment.t + segment.d) / timescale;\r\n                if (endTime > representation.adaptation.period.duration) {\r\n                    eventBus.trigger(Events.MANIFEST_VALIDITY_CHANGED, { sender: this, newDuration: endTime });\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            // In case of live streams, update segment timeline according to DVR window\r\n            if (manifest.timeShiftBufferDepth && manifest.timeShiftBufferDepth > 0) {\r\n                // Get timestamp of the last segment\r\n                segment = segments[segments.length - 1];\r\n                t = segment.t;\r\n\r\n                // Determine the segments' availability start time\r\n                availabilityStartTime = (t - (manifest.timeShiftBufferDepth * timescale)) / timescale;\r\n\r\n                // Remove segments prior to availability start time\r\n                segment = segments[0];\r\n                endTime = (segment.t + segment.d) / timescale;\r\n                while (endTime < availabilityStartTime) {\r\n                    // Check if not currently playing the segment to be removed\r\n                    if (!playbackController.isPaused() && playbackController.getTime() < endTime) {\r\n                        break;\r\n                    }\r\n                    // logger.debug('Remove segment  - t = ' + (segment.t / timescale));\r\n                    segments.splice(0, 1);\r\n                    segment = segments[0];\r\n                    endTime =  (segment.t + segment.d) / timescale;\r\n                }\r\n            }\r\n\r\n            // Update DVR window range => set range end to end time of current segment\r\n            range = {\r\n                start: segments[0].t / timescale,\r\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\r\n            };\r\n\r\n            updateDVR(type, range, streamProcessor.getStreamInfo().manifestInfo);\r\n        }\r\n\r\n    }\r\n\r\n    function updateDVR(type, range, manifestInfo) {\r\n        if (type !== 'video' && type !== 'audio') return;\r\n        const dvrInfos = dashMetrics.getCurrentDVRInfo(type);\r\n        if (!dvrInfos || (range.end > dvrInfos.range.end)) {\r\n            logger.debug('Update DVR range: [' + range.start + ' - ' + range.end + ']');\r\n            dashMetrics.addDVRInfo(type, playbackController.getTime(), manifestInfo, range);\r\n            playbackController.updateCurrentTime(type);\r\n        }\r\n    }\r\n\r\n    // This function returns the offset of the 1st byte of a child box within a container box\r\n    function getBoxOffset(parent, type) {\r\n        let offset = 8;\r\n        let i = 0;\r\n\r\n        for (i = 0; i < parent.boxes.length; i++) {\r\n            if (parent.boxes[i].type === type) {\r\n                return offset;\r\n            }\r\n            offset += parent.boxes[i].size;\r\n        }\r\n        return offset;\r\n    }\r\n\r\n    function convertFragment(e, streamProcessor) {\r\n        let i;\r\n\r\n        // e.request contains request description object\r\n        // e.response contains fragment bytes\r\n        const isoFile = ISOBoxer.parseBuffer(e.response);\r\n        // Update track_Id in tfhd box\r\n        const tfhd = isoFile.fetch('tfhd');\r\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\r\n\r\n        // Add tfdt box\r\n        let tfdt = isoFile.fetch('tfdt');\r\n        const traf = isoFile.fetch('traf');\r\n        if (tfdt === null) {\r\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\r\n            tfdt.version = 1;\r\n            tfdt.flags = 0;\r\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\r\n        }\r\n\r\n        const trun = isoFile.fetch('trun');\r\n\r\n        // Process tfxd boxes\r\n        // This box provide absolute timestamp but we take the segment start time for tfdt\r\n        let tfxd = isoFile.fetch('tfxd');\r\n        if (tfxd) {\r\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\r\n            tfxd = null;\r\n        }\r\n        let tfrf = isoFile.fetch('tfrf');\r\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\r\n        if (tfrf) {\r\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\r\n            tfrf = null;\r\n        }\r\n\r\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\r\n        // => convert sepiff box it into a senc box\r\n        // => create saio and saiz boxes (if not already present)\r\n        const sepiff = isoFile.fetch('sepiff');\r\n        if (sepiff !== null) {\r\n            sepiff.type = 'senc';\r\n            sepiff.usertype = undefined;\r\n\r\n            let saio = isoFile.fetch('saio');\r\n            if (saio === null) {\r\n                // Create Sample Auxiliary Information Offsets Box box (saio)\r\n                saio = ISOBoxer.createFullBox('saio', traf);\r\n                saio.version = 0;\r\n                saio.flags = 0;\r\n                saio.entry_count = 1;\r\n                saio.offset = [0];\r\n\r\n                const saiz = ISOBoxer.createFullBox('saiz', traf);\r\n                saiz.version = 0;\r\n                saiz.flags = 0;\r\n                saiz.sample_count = sepiff.sample_count;\r\n                saiz.default_sample_info_size = 0;\r\n                saiz.sample_info_size = [];\r\n\r\n                if (sepiff.flags & 0x02) {\r\n                    // Sub-sample encryption => set sample_info_size for each sample\r\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\r\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\r\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\r\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\r\n                    }\r\n                } else {\r\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\r\n                    saiz.default_sample_info_size = 8;\r\n                }\r\n            }\r\n        }\r\n\r\n        tfhd.flags &= 0xFFFFFE; // set tfhd.base-data-offset-present to false\r\n        tfhd.flags |= 0x020000; // set tfhd.default-base-is-moof to true\r\n        trun.flags |= 0x000001; // set trun.data-offset-present to true\r\n\r\n        // Update trun.data_offset field that corresponds to first data byte (inside mdat box)\r\n        const moof = isoFile.fetch('moof');\r\n        let length = moof.getLength();\r\n        trun.data_offset = length + 8;\r\n\r\n        // Update saio box offset field according to new senc box offset\r\n        let saio = isoFile.fetch('saio');\r\n        if (saio !== null) {\r\n            let trafPosInMoof = getBoxOffset(moof, 'traf');\r\n            let sencPosInTraf = getBoxOffset(traf, 'senc');\r\n            // Set offset from begin fragment to the first IV field in senc box\r\n            saio.offset[0] = trafPosInMoof + sencPosInTraf + 16; // 16 = box header (12) + sample_count field size (4)\r\n        }\r\n\r\n        // Write transformed/processed fragment into request reponse data\r\n        e.response = isoFile.write();\r\n    }\r\n\r\n    function updateSegmentList(e, streamProcessor) {\r\n        // e.request contains request description object\r\n        // e.response contains fragment bytes\r\n        if (!e.response) {\r\n            throw new Error('e.response parameter is missing');\r\n        }\r\n\r\n        const isoFile = ISOBoxer.parseBuffer(e.response);\r\n        // Update track_Id in tfhd box\r\n        const tfhd = isoFile.fetch('tfhd');\r\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\r\n\r\n        // Add tfdt box\r\n        let tfdt = isoFile.fetch('tfdt');\r\n        let traf = isoFile.fetch('traf');\r\n        if (tfdt === null) {\r\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\r\n            tfdt.version = 1;\r\n            tfdt.flags = 0;\r\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\r\n        }\r\n\r\n        let tfrf = isoFile.fetch('tfrf');\r\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\r\n        if (tfrf) {\r\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\r\n            tfrf = null;\r\n        }\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    instance = {\r\n        convertFragment: convertFragment,\r\n        updateSegmentList: updateSegmentList,\r\n        getType: getType\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nMssFragmentMoofProcessor.__dashjs_factory_name = 'MssFragmentMoofProcessor';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoofProcessor); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n import MssErrors from './errors/MssErrors';\r\n\r\n/**\r\n * @module MssFragmentMoovProcessor\r\n * @ignore\r\n * @param {Object} config object\r\n */\r\nfunction MssFragmentMoovProcessor(config) {\r\n    config = config || {};\r\n    const NALUTYPE_SPS = 7;\r\n    const NALUTYPE_PPS = 8;\r\n    const constants = config.constants;\r\n    const ISOBoxer = config.ISOBoxer;\r\n\r\n    let protectionController = config.protectionController;\r\n    let instance,\r\n        period,\r\n        adaptationSet,\r\n        representation,\r\n        contentProtection,\r\n        timescale,\r\n        trackId;\r\n\r\n    function createFtypBox(isoFile) {\r\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\r\n        ftyp.major_brand = 'iso6';\r\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\r\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\r\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\r\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\r\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\r\n\r\n        return ftyp;\r\n    }\r\n\r\n    function createMoovBox(isoFile) {\r\n\r\n        // moov box\r\n        let moov = ISOBoxer.createBox('moov', isoFile);\r\n\r\n        // moov/mvhd\r\n        createMvhdBox(moov);\r\n\r\n        // moov/trak\r\n        let trak = ISOBoxer.createBox('trak', moov);\r\n\r\n        // moov/trak/tkhd\r\n        createTkhdBox(trak);\r\n\r\n        // moov/trak/mdia\r\n        let mdia = ISOBoxer.createBox('mdia', trak);\r\n\r\n        // moov/trak/mdia/mdhd\r\n        createMdhdBox(mdia);\r\n\r\n        // moov/trak/mdia/hdlr\r\n        createHdlrBox(mdia);\r\n\r\n        // moov/trak/mdia/minf\r\n        let minf = ISOBoxer.createBox('minf', mdia);\r\n\r\n        switch (adaptationSet.type) {\r\n            case constants.VIDEO:\r\n                // moov/trak/mdia/minf/vmhd\r\n                createVmhdBox(minf);\r\n                break;\r\n            case constants.AUDIO:\r\n                // moov/trak/mdia/minf/smhd\r\n                createSmhdBox(minf);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // moov/trak/mdia/minf/dinf\r\n        let dinf = ISOBoxer.createBox('dinf', minf);\r\n\r\n        // moov/trak/mdia/minf/dinf/dref\r\n        createDrefBox(dinf);\r\n\r\n        // moov/trak/mdia/minf/stbl\r\n        let stbl = ISOBoxer.createBox('stbl', minf);\r\n\r\n        // Create empty stts, stsc, stco and stsz boxes\r\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\r\n\r\n        // moov/trak/mdia/minf/stbl/stts\r\n        let stts = ISOBoxer.createFullBox('stts', stbl);\r\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stsc\r\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\r\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stco\r\n        let stco = ISOBoxer.createFullBox('stco', stbl);\r\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stsz\r\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\r\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stsd\r\n        createStsdBox(stbl);\r\n\r\n        // moov/mvex\r\n        let mvex = ISOBoxer.createBox('mvex', moov);\r\n\r\n        // moov/mvex/trex\r\n        createTrexBox(mvex);\r\n\r\n        if (contentProtection && protectionController) {\r\n            let supportedKS = protectionController.getSupportedKeySystemsFromContentProtection(contentProtection);\r\n            createProtectionSystemSpecificHeaderBox(moov, supportedKS);\r\n        }\r\n    }\r\n\r\n    function createMvhdBox(moov) {\r\n\r\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\r\n\r\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\r\n\r\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\r\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\r\n        mvhd.timescale = timescale; // the time-scale for the entire presentation => 10000000 for MSS\r\n        mvhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the length of the presentation (in the indicated timescale) =>  take duration of period\r\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\r\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\r\n        mvhd.reserved1 = 0;\r\n        mvhd.reserved2 = [0x0, 0x0];\r\n        mvhd.matrix = [\r\n            1, 0, 0, // provides a transformation matrix for the video;\r\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\r\n            0, 0, 16384\r\n        ];\r\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\r\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\r\n\r\n        return mvhd;\r\n    }\r\n\r\n    function createTkhdBox(trak) {\r\n\r\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\r\n\r\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\r\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\r\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\r\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\r\n\r\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\r\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\r\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\r\n        tkhd.reserved1 = 0;\r\n        tkhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\r\n        tkhd.reserved2 = [0x0, 0x0];\r\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\r\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\r\n        tkhd.volume = 1.0; // '1.0' = full volume\r\n        tkhd.reserved3 = 0;\r\n        tkhd.matrix = [\r\n            1, 0, 0, // provides a transformation matrix for the video;\r\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\r\n            0, 0, 16384\r\n        ];\r\n        tkhd.width = representation.width; // visual presentation width\r\n        tkhd.height = representation.height; // visual presentation height\r\n\r\n        return tkhd;\r\n    }\r\n\r\n    function createMdhdBox(mdia) {\r\n\r\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\r\n\r\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\r\n\r\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\r\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\r\n        mdhd.timescale = timescale; // the time-scale for the entire presentation\r\n        mdhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\r\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media\r\n        mdhd.pre_defined = 0;\r\n\r\n        return mdhd;\r\n    }\r\n\r\n    function createHdlrBox(mdia) {\r\n\r\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\r\n\r\n        hdlr.pre_defined = 0;\r\n        switch (adaptationSet.type) {\r\n            case constants.VIDEO:\r\n                hdlr.handler_type = 'vide';\r\n                break;\r\n            case constants.AUDIO:\r\n                hdlr.handler_type = 'soun';\r\n                break;\r\n            default:\r\n                hdlr.handler_type = 'meta';\r\n                break;\r\n        }\r\n        hdlr.name = representation.id;\r\n        hdlr.reserved = [0, 0, 0];\r\n\r\n        return hdlr;\r\n    }\r\n\r\n    function createVmhdBox(minf) {\r\n\r\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\r\n\r\n        vmhd.flags = 1;\r\n\r\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\r\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\r\n\r\n        return vmhd;\r\n    }\r\n\r\n    function createSmhdBox(minf) {\r\n\r\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\r\n\r\n        smhd.flags = 1;\r\n\r\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\r\n        smhd.reserved = 0;\r\n\r\n        return smhd;\r\n    }\r\n\r\n    function createDrefBox(dinf) {\r\n\r\n        let dref = ISOBoxer.createFullBox('dref', dinf);\r\n\r\n        dref.entry_count = 1;\r\n        dref.entries = [];\r\n\r\n        let url = ISOBoxer.createFullBox('url ', dref, false);\r\n        url.location = '';\r\n        url.flags = 1;\r\n\r\n        dref.entries.push(url);\r\n\r\n        return dref;\r\n    }\r\n\r\n    function createStsdBox(stbl) {\r\n\r\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\r\n\r\n        stsd.entries = [];\r\n        switch (adaptationSet.type) {\r\n            case constants.VIDEO:\r\n            case constants.AUDIO:\r\n                stsd.entries.push(createSampleEntry(stsd));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\r\n        return stsd;\r\n    }\r\n\r\n    function createSampleEntry(stsd) {\r\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\r\n\r\n        switch (codec) {\r\n            case 'avc1':\r\n                return createAVCVisualSampleEntry(stsd, codec);\r\n            case 'mp4a':\r\n                return createMP4AudioSampleEntry(stsd, codec);\r\n            default:\r\n                throw {\r\n                    code: MssErrors.MSS_UNSUPPORTED_CODEC_CODE,\r\n                    message: MssErrors.MSS_UNSUPPORTED_CODEC_MESSAGE,\r\n                    data: {\r\n                        codec: codec\r\n                    }\r\n                };\r\n        }\r\n    }\r\n\r\n    function createAVCVisualSampleEntry(stsd, codec) {\r\n        let avc1;\r\n\r\n        if (contentProtection) {\r\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\r\n        } else {\r\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\r\n        }\r\n\r\n        // SampleEntry fields\r\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\r\n        avc1.data_reference_index = 1;\r\n\r\n        // VisualSampleEntry fields\r\n        avc1.pre_defined1 = 0;\r\n        avc1.reserved2 = 0;\r\n        avc1.pre_defined2 = [0, 0, 0];\r\n        avc1.height = representation.height;\r\n        avc1.width = representation.width;\r\n        avc1.horizresolution = 72; // 72 dpi\r\n        avc1.vertresolution = 72; // 72 dpi\r\n        avc1.reserved3 = 0;\r\n        avc1.frame_count = 1; // 1 compressed video frame per sample\r\n        avc1.compressorname = [\r\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\r\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\r\n        ];\r\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\r\n        avc1.pre_defined3 = 65535;\r\n        avc1.config = createAVC1ConfigurationRecord();\r\n        if (contentProtection) {\r\n            // Create and add Protection Scheme Info Box\r\n            let sinf = ISOBoxer.createBox('sinf', avc1);\r\n\r\n            // Create and add Original Format Box => indicate codec type of the encrypted content\r\n            createOriginalFormatBox(sinf, codec);\r\n\r\n            // Create and add Scheme Type box\r\n            createSchemeTypeBox(sinf);\r\n\r\n            // Create and add Scheme Information Box\r\n            createSchemeInformationBox(sinf);\r\n        }\r\n\r\n        return avc1;\r\n    }\r\n\r\n    function createAVC1ConfigurationRecord() {\r\n\r\n        let avcC = null;\r\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\r\n\r\n        // First get all SPS and PPS from codecPrivateData\r\n        let sps = [];\r\n        let pps = [];\r\n        let AVCProfileIndication = 0;\r\n        let AVCLevelIndication = 0;\r\n        let profile_compatibility = 0;\r\n\r\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\r\n        let naluBytes, naluType;\r\n\r\n        for (let i = 0; i < nalus.length; i++) {\r\n            naluBytes = hexStringtoBuffer(nalus[i]);\r\n\r\n            naluType = naluBytes[0] & 0x1F;\r\n\r\n            switch (naluType) {\r\n                case NALUTYPE_SPS:\r\n                    sps.push(naluBytes);\r\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\r\n                    break;\r\n                case NALUTYPE_PPS:\r\n                    pps.push(naluBytes);\r\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // Get profile and level from SPS\r\n        if (sps.length > 0) {\r\n            AVCProfileIndication = sps[0][1];\r\n            profile_compatibility = sps[0][2];\r\n            AVCLevelIndication = sps[0][3];\r\n        }\r\n\r\n        // Generate avcC buffer\r\n        avcC = new Uint8Array(avcCLength);\r\n\r\n        let i = 0;\r\n        // length\r\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\r\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\r\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\r\n        avcC[i++] = (avcCLength & 0x000000FF);\r\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\r\n        i += 4;\r\n        avcC[i++] = 1; // configurationVersion = 1\r\n        avcC[i++] = AVCProfileIndication;\r\n        avcC[i++] = profile_compatibility;\r\n        avcC[i++] = AVCLevelIndication;\r\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\r\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\r\n        for (let n = 0; n < sps.length; n++) {\r\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\r\n            avcC[i++] = (sps[n].length & 0x00FF);\r\n            avcC.set(sps[n], i);\r\n            i += sps[n].length;\r\n        }\r\n        avcC[i++] = pps.length; // numOfPictureParameterSets\r\n        for (let n = 0; n < pps.length; n++) {\r\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\r\n            avcC[i++] = (pps[n].length & 0x00FF);\r\n            avcC.set(pps[n], i);\r\n            i += pps[n].length;\r\n        }\r\n\r\n        return avcC;\r\n    }\r\n\r\n    function createMP4AudioSampleEntry(stsd, codec) {\r\n        let mp4a;\r\n\r\n        if (contentProtection) {\r\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\r\n        } else {\r\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\r\n        }\r\n\r\n        // SampleEntry fields\r\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\r\n        mp4a.data_reference_index = 1;\r\n\r\n        // AudioSampleEntry fields\r\n        mp4a.reserved2 = [0x0, 0x0];\r\n        mp4a.channelcount = representation.audioChannels;\r\n        mp4a.samplesize = 16;\r\n        mp4a.pre_defined = 0;\r\n        mp4a.reserved_3 = 0;\r\n        mp4a.samplerate = representation.audioSamplingRate << 16;\r\n\r\n        mp4a.esds = createMPEG4AACESDescriptor();\r\n\r\n        if (contentProtection) {\r\n            // Create and add Protection Scheme Info Box\r\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\r\n\r\n            // Create and add Original Format Box => indicate codec type of the encrypted content\r\n            createOriginalFormatBox(sinf, codec);\r\n\r\n            // Create and add Scheme Type box\r\n            createSchemeTypeBox(sinf);\r\n\r\n            // Create and add Scheme Information Box\r\n            createSchemeInformationBox(sinf);\r\n        }\r\n\r\n        return mp4a;\r\n    }\r\n\r\n    function createMPEG4AACESDescriptor() {\r\n\r\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\r\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\r\n\r\n        // ESDS length = esds box header length (= 12) +\r\n        //               ES_Descriptor header length (= 5) +\r\n        //               DecoderConfigDescriptor header length (= 15) +\r\n        //               decoderSpecificInfo header length (= 2) +\r\n        //               AudioSpecificConfig length (= codecPrivateData length)\r\n        let esdsLength = 34 + audioSpecificConfig.length;\r\n        let esds = new Uint8Array(esdsLength);\r\n\r\n        let i = 0;\r\n        // esds box\r\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\r\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\r\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\r\n        esds[i++] = (esdsLength & 0x000000FF); // ''\r\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\r\n        i += 4;\r\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\r\n        i += 4;\r\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\r\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\r\n        esds[i++] = 20 + audioSpecificConfig.length; // size\r\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\r\n        esds[i++] = (trackId & 0x00FF); // ''\r\n        esds[i++] = 0; // flags and streamPriority\r\n\r\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\r\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\r\n        esds[i++] = 15 + audioSpecificConfig.length; // size\r\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\r\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\r\n        esds[i] |= 0 << 1; // upStream = 0\r\n        esds[i++] |= 1; // reserved = 1\r\n        esds[i++] = 0xFF; // buffersizeDB = undefined\r\n        esds[i++] = 0xFF; // ''\r\n        esds[i++] = 0xFF; // ''\r\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\r\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\r\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\r\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\r\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\r\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\r\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\r\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\r\n\r\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\r\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\r\n        esds[i++] = audioSpecificConfig.length; // size\r\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\r\n\r\n        return esds;\r\n    }\r\n\r\n    function createOriginalFormatBox(sinf, codec) {\r\n        let frma = ISOBoxer.createBox('frma', sinf);\r\n        frma.data_format = stringToCharCode(codec);\r\n    }\r\n\r\n    function createSchemeTypeBox(sinf) {\r\n        let schm = ISOBoxer.createFullBox('schm', sinf);\r\n\r\n        schm.flags = 0;\r\n        schm.version = 0;\r\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\r\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\r\n    }\r\n\r\n    function createSchemeInformationBox(sinf) {\r\n        let schi = ISOBoxer.createBox('schi', sinf);\r\n\r\n        // Create and add Track Encryption Box\r\n        createTrackEncryptionBox(schi);\r\n    }\r\n\r\n    function createProtectionSystemSpecificHeaderBox(moov, keySystems) {\r\n        let pssh_bytes,\r\n            pssh,\r\n            i,\r\n            parsedBuffer;\r\n\r\n        for (i = 0; i < keySystems.length; i += 1) {\r\n            pssh_bytes = keySystems[i].initData;\r\n            if (pssh_bytes) {\r\n                parsedBuffer = ISOBoxer.parseBuffer(pssh_bytes);\r\n                pssh = parsedBuffer.fetch('pssh');\r\n                if (pssh) {\r\n                    ISOBoxer.Utils.appendBox(moov, pssh);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function createTrackEncryptionBox(schi) {\r\n        let tenc = ISOBoxer.createFullBox('tenc', schi);\r\n\r\n        tenc.flags = 0;\r\n        tenc.version = 0;\r\n\r\n        tenc.default_IsEncrypted = 0x1;\r\n        tenc.default_IV_size = 8;\r\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\r\n            contentProtection[0]['cenc:default_KID'] : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\r\n    }\r\n\r\n    function createTrexBox(moov) {\r\n        let trex = ISOBoxer.createFullBox('trex', moov);\r\n\r\n        trex.track_ID = trackId;\r\n        trex.default_sample_description_index = 1;\r\n        trex.default_sample_duration = 0;\r\n        trex.default_sample_size = 0;\r\n        trex.default_sample_flags = 0;\r\n\r\n        return trex;\r\n    }\r\n\r\n    function hexStringtoBuffer(str) {\r\n        let buf = new Uint8Array(str.length / 2);\r\n        let i;\r\n\r\n        for (i = 0; i < str.length / 2; i += 1) {\r\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\r\n        }\r\n        return buf;\r\n    }\r\n\r\n    function stringToCharCode(str) {\r\n        let code = 0;\r\n        let i;\r\n\r\n        for (i = 0; i < str.length; i += 1) {\r\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\r\n        }\r\n        return code;\r\n    }\r\n\r\n    function generateMoov(rep) {\r\n        if (!rep || !rep.adaptation) {\r\n            return;\r\n        }\r\n\r\n        let isoFile,\r\n            arrayBuffer;\r\n\r\n        representation = rep;\r\n        adaptationSet = representation.adaptation;\r\n\r\n        period = adaptationSet.period;\r\n        trackId = adaptationSet.index + 1;\r\n        contentProtection = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;\r\n\r\n        timescale = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].SegmentTemplate.timescale;\r\n\r\n        isoFile = ISOBoxer.createFile();\r\n        createFtypBox(isoFile);\r\n        createMoovBox(isoFile);\r\n\r\n        arrayBuffer = isoFile.write();\r\n\r\n        return arrayBuffer;\r\n    }\r\n\r\n    instance = {\r\n        generateMoov: generateMoov\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMssFragmentMoovProcessor.__dashjs_factory_name = 'MssFragmentMoovProcessor';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoovProcessor); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MssFragmentMoofProcessor from './MssFragmentMoofProcessor';\r\nimport MssFragmentMoovProcessor from './MssFragmentMoovProcessor';\r\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\r\n\r\n\r\n// Add specific box processors not provided by codem-isoboxer library\r\n\r\nfunction arrayEqual(arr1, arr2) {\r\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\r\n        return element === arr2[index];\r\n    });\r\n}\r\n\r\nfunction saioProcessor() {\r\n    this._procFullBox();\r\n    if (this.flags & 1) {\r\n        this._procField('aux_info_type', 'uint', 32);\r\n        this._procField('aux_info_type_parameter', 'uint', 32);\r\n    }\r\n    this._procField('entry_count', 'uint', 32);\r\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\r\n}\r\n\r\nfunction saizProcessor() {\r\n    this._procFullBox();\r\n    if (this.flags & 1) {\r\n        this._procField('aux_info_type', 'uint', 32);\r\n        this._procField('aux_info_type_parameter', 'uint', 32);\r\n    }\r\n    this._procField('default_sample_info_size', 'uint', 8);\r\n    this._procField('sample_count', 'uint', 32);\r\n    if (this.default_sample_info_size === 0) {\r\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\r\n    }\r\n}\r\n\r\nfunction sencProcessor() {\r\n    this._procFullBox();\r\n    this._procField('sample_count', 'uint', 32);\r\n    if (this.flags & 1) {\r\n        this._procField('IV_size', 'uint', 8);\r\n    }\r\n    this._procEntries('entry', this.sample_count, function (entry) {\r\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\r\n        if (this.flags & 2) {\r\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\r\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\r\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\r\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction uuidProcessor() {\r\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\r\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\r\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\r\n\r\n    if (arrayEqual(this.usertype, tfxdUserType)) {\r\n        this._procFullBox();\r\n        if (this._parsing) {\r\n            this.type = 'tfxd';\r\n        }\r\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\r\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\r\n    }\r\n\r\n    if (arrayEqual(this.usertype, tfrfUserType)) {\r\n        this._procFullBox();\r\n        if (this._parsing) {\r\n            this.type = 'tfrf';\r\n        }\r\n        this._procField('fragment_count', 'uint', 8);\r\n        this._procEntries('entry', this.fragment_count, function (entry) {\r\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\r\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\r\n        });\r\n    }\r\n\r\n    if (arrayEqual(this.usertype, sepiffUserType)) {\r\n        if (this._parsing) {\r\n            this.type = 'sepiff';\r\n        }\r\n        sencProcessor.call(this);\r\n    }\r\n}\r\n\r\nfunction MssFragmentProcessor(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const dashMetrics = config.dashMetrics;\r\n    const playbackController = config.playbackController;\r\n    const eventBus = config.eventBus;\r\n    const protectionController = config.protectionController;\r\n    const ISOBoxer = config.ISOBoxer;\r\n    const debug = config.debug;\r\n    let mssFragmentMoovProcessor,\r\n        mssFragmentMoofProcessor,\r\n        instance;\r\n\r\n    function setup() {\r\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\r\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\r\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\r\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\r\n\r\n        mssFragmentMoovProcessor = MssFragmentMoovProcessor(context).create({\r\n            protectionController: protectionController,\r\n            constants: config.constants,\r\n            ISOBoxer: ISOBoxer});\r\n\r\n        mssFragmentMoofProcessor = MssFragmentMoofProcessor(context).create({\r\n            dashMetrics: dashMetrics,\r\n            playbackController: playbackController,\r\n            ISOBoxer: ISOBoxer,\r\n            eventBus: eventBus,\r\n            debug: debug,\r\n            errHandler: config.errHandler\r\n        });\r\n    }\r\n\r\n    function generateMoov(rep) {\r\n        return mssFragmentMoovProcessor.generateMoov(rep);\r\n    }\r\n\r\n    function processFragment(e, streamProcessor) {\r\n        if (!e || !e.request || !e.response) {\r\n            throw new Error('e parameter is missing or malformed');\r\n        }\r\n\r\n        if (e.request.type === 'MediaSegment') {\r\n            // MediaSegment => convert to Smooth Streaming moof format\r\n            mssFragmentMoofProcessor.convertFragment(e, streamProcessor);\r\n\r\n        } else if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\r\n            // FragmentInfo (live) => update segments list\r\n            mssFragmentMoofProcessor.updateSegmentList(e, streamProcessor);\r\n\r\n            // Stop event propagation (FragmentInfo must not be added to buffer)\r\n            e.sender = null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        generateMoov: generateMoov,\r\n        processFragment: processFragment\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module MssParser\r\n * @ignore\r\n * @param {Object} config object\r\n */\r\n\r\nimport BigInt from '../../../externals/BigInteger';\r\n\r\nfunction MssParser(config) {\r\n    config = config || {};\r\n    const BASE64 = config.BASE64;\r\n    const debug = config.debug;\r\n    const constants = config.constants;\r\n    const manifestModel = config.manifestModel;\r\n    const mediaPlayerModel = config.mediaPlayerModel;\r\n    const settings = config.settings;\r\n\r\n    const DEFAULT_TIME_SCALE = 10000000.0;\r\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AACH', 'AACP', 'AVC1', 'H264', 'TTML', 'DFXP'];\r\n    // MPEG-DASH Role and accessibility mapping for text tracks according to ETSI TS 103 285 v1.1.1 (section 7.1.2)\r\n    const ROLE = {\r\n        'CAPT': 'main',\r\n        'SUBT': 'alternate',\r\n        'DESC': 'main'\r\n    };\r\n    const ACCESSIBILITY = {\r\n        'DESC': '2'\r\n    };\r\n    const samplingFrequencyIndex = {\r\n        96000: 0x0,\r\n        88200: 0x1,\r\n        64000: 0x2,\r\n        48000: 0x3,\r\n        44100: 0x4,\r\n        32000: 0x5,\r\n        24000: 0x6,\r\n        22050: 0x7,\r\n        16000: 0x8,\r\n        12000: 0x9,\r\n        11025: 0xA,\r\n        8000: 0xB,\r\n        7350: 0xC\r\n    };\r\n    const mimeTypeMap = {\r\n        'video': 'video/mp4',\r\n        'audio': 'audio/mp4',\r\n        'text': 'application/mp4'\r\n    };\r\n\r\n    let instance,\r\n        logger,\r\n        initialBufferSettings;\r\n\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n    }\r\n\r\n    function getAttributeAsBoolean(node, attrName) {\r\n        const value = node.getAttribute(attrName);\r\n        if (!value) return false;\r\n        return value.toLowerCase() === 'true';\r\n    }\r\n\r\n    function mapPeriod(smoothStreamingMedia, timescale) {\r\n        const period = {};\r\n        let streams,\r\n            adaptation;\r\n\r\n        // For each StreamIndex node, create an AdaptationSet element\r\n        period.AdaptationSet_asArray = [];\r\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\r\n        for (let i = 0; i < streams.length; i++) {\r\n            adaptation = mapAdaptationSet(streams[i], timescale);\r\n            if (adaptation !== null) {\r\n                period.AdaptationSet_asArray.push(adaptation);\r\n            }\r\n        }\r\n\r\n        if (period.AdaptationSet_asArray.length > 0) {\r\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\r\n        }\r\n\r\n        return period;\r\n    }\r\n\r\n    function mapAdaptationSet(streamIndex, timescale) {\r\n        const adaptationSet = {};\r\n        const representations = [];\r\n        let segmentTemplate;\r\n        let qualityLevels,\r\n            representation,\r\n            i,\r\n            index;\r\n\r\n        const name = streamIndex.getAttribute('Name');\r\n        const type = streamIndex.getAttribute('Type');\r\n        const lang = streamIndex.getAttribute('Language');\r\n        const fallBackId = lang ? type + '_' + lang : type;\r\n\r\n        adaptationSet.id = name || fallBackId;\r\n        adaptationSet.contentType = type;\r\n        adaptationSet.lang = lang || 'und';\r\n        adaptationSet.mimeType = mimeTypeMap[type];\r\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\r\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\r\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\r\n\r\n        // Map text tracks subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)\r\n        if (adaptationSet.subType) {\r\n            if (ROLE[adaptationSet.subType]) {\r\n                let role = {\r\n                    schemeIdUri: 'urn:mpeg:dash:role:2011',\r\n                    value: ROLE[adaptationSet.subType]\r\n                };\r\n                adaptationSet.Role = role;\r\n                adaptationSet.Role_asArray = [role];\r\n            }\r\n            if (ACCESSIBILITY[adaptationSet.subType]) {\r\n                let accessibility = {\r\n                    schemeIdUri: 'urn:tva:metadata:cs:AudioPurposeCS:2007',\r\n                    value: ACCESSIBILITY[adaptationSet.subType]\r\n                };\r\n                adaptationSet.Accessibility = accessibility;\r\n                adaptationSet.Accessibility_asArray = [accessibility];\r\n            }\r\n        }\r\n\r\n        // Create a SegmentTemplate with a SegmentTimeline\r\n        segmentTemplate = mapSegmentTemplate(streamIndex, timescale);\r\n\r\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\r\n        // For each QualityLevel node, create a Representation element\r\n        for (i = 0; i < qualityLevels.length; i++) {\r\n            // Propagate BaseURL and mimeType\r\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\r\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\r\n\r\n            // Set quality level id\r\n            index = qualityLevels[i].getAttribute('Index');\r\n            qualityLevels[i].Id = adaptationSet.id + ((index !== null) ? ('_' + index) : '');\r\n\r\n            // Map Representation to QualityLevel\r\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\r\n\r\n            if (representation !== null) {\r\n                // Copy SegmentTemplate into Representation\r\n                representation.SegmentTemplate = segmentTemplate;\r\n\r\n                representations.push(representation);\r\n            }\r\n        }\r\n\r\n        if (representations.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\r\n        adaptationSet.Representation_asArray = representations;\r\n\r\n        // Set SegmentTemplate\r\n        adaptationSet.SegmentTemplate = segmentTemplate;\r\n\r\n        return adaptationSet;\r\n    }\r\n\r\n    function mapRepresentation(qualityLevel, streamIndex) {\r\n        const representation = {};\r\n        const type = streamIndex.getAttribute('Type');\r\n        let fourCCValue = null;\r\n        let width = null;\r\n        let height = null;\r\n\r\n        representation.id = qualityLevel.Id;\r\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\r\n        representation.mimeType = qualityLevel.mimeType;\r\n\r\n        width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\r\n        height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\r\n        if (!isNaN(width)) representation.width = width;\r\n        if (!isNaN(height)) representation.height = height;\r\n\r\n\r\n        fourCCValue = qualityLevel.getAttribute('FourCC');\r\n\r\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\r\n        if (fourCCValue === null || fourCCValue === '') {\r\n            fourCCValue = streamIndex.getAttribute('FourCC');\r\n        }\r\n\r\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\r\n        // then we consider the stream is an audio AAC stream\r\n        if (fourCCValue === null || fourCCValue === '') {\r\n            if (type === constants.AUDIO) {\r\n                fourCCValue = 'AAC';\r\n            } else if (type === constants.VIDEO) {\r\n                logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\r\n                return null;\r\n            }\r\n        }\r\n\r\n        // Check if codec is supported\r\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\r\n            // Do not send warning\r\n            logger.warn('Codec not supported: ' + fourCCValue);\r\n            return null;\r\n        }\r\n\r\n        // Get codecs value according to FourCC field\r\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\r\n            representation.codecs = getH264Codec(qualityLevel);\r\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\r\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\r\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\r\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\r\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\r\n            representation.codecs = constants.STPP;\r\n        }\r\n\r\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\r\n        representation.BaseURL = qualityLevel.BaseURL;\r\n\r\n        return representation;\r\n    }\r\n\r\n    function getH264Codec(qualityLevel) {\r\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\r\n        let nalHeader,\r\n            avcoti;\r\n\r\n\r\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\r\n        // three bytes in the sequence parameter set NAL unit.\r\n        // => Find the SPS nal header\r\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\r\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\r\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\r\n\r\n        return 'avc1.' + avcoti;\r\n    }\r\n\r\n    function getAACCodec(qualityLevel, fourCCValue) {\r\n        const samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\r\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\r\n        let objectType = 0;\r\n        let codecPrivateDataHex,\r\n            arr16,\r\n            indexFreq,\r\n            extensionSamplingFrequencyIndex;\r\n\r\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\r\n        //set objectType to 5 => strange, it should be 2\r\n        if (fourCCValue === 'AACH') {\r\n            objectType = 0x05;\r\n        }\r\n        //if codecPrivateData is empty, build it :\r\n        if (codecPrivateData === undefined || codecPrivateData === '') {\r\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\r\n            indexFreq = samplingFrequencyIndex[samplingRate];\r\n            if (fourCCValue === 'AACH') {\r\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\r\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\r\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\r\n                codecPrivateData = new Uint8Array(4);\r\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\r\n                // equals to SamplingRate*2\r\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\r\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\r\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\r\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\r\n                codecPrivateData[3] = 0x0; //alignment bits\r\n\r\n                arr16 = new Uint16Array(2);\r\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\r\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\r\n                //convert decimal to hex value\r\n                codecPrivateDataHex = arr16[0].toString(16);\r\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\r\n\r\n            } else {\r\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\r\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\r\n                codecPrivateData = new Uint8Array(2);\r\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\r\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\r\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\r\n                // put the 2 bytes in an 16 bits array\r\n                arr16 = new Uint16Array(1);\r\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\r\n                //convert decimal to hex value\r\n                codecPrivateDataHex = arr16[0].toString(16);\r\n            }\r\n\r\n            codecPrivateData = '' + codecPrivateDataHex;\r\n            codecPrivateData = codecPrivateData.toUpperCase();\r\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\r\n        } else if (objectType === 0) {\r\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\r\n        }\r\n\r\n        return 'mp4a.40.' + objectType;\r\n    }\r\n\r\n    function mapSegmentTemplate(streamIndex, timescale) {\r\n        const segmentTemplate = {};\r\n        let mediaUrl,\r\n            streamIndexTimeScale,\r\n            url;\r\n\r\n        url = streamIndex.getAttribute('Url');\r\n        mediaUrl = url ? url.replace('{bitrate}', '$Bandwidth$') : null;\r\n        mediaUrl = mediaUrl ? mediaUrl.replace('{start time}', '$Time$') : null;\r\n\r\n        streamIndexTimeScale = streamIndex.getAttribute('TimeScale');\r\n        streamIndexTimeScale = streamIndexTimeScale ? parseFloat(streamIndexTimeScale) : timescale;\r\n\r\n        segmentTemplate.media = mediaUrl;\r\n        segmentTemplate.timescale = streamIndexTimeScale;\r\n\r\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex, segmentTemplate.timescale);\r\n\r\n        // Patch: set availabilityTimeOffset to Infinity since segments are available as long as they are present in timeline\r\n        segmentTemplate.availabilityTimeOffset = 'INF';\r\n\r\n        return segmentTemplate;\r\n    }\r\n\r\n    function mapSegmentTimeline(streamIndex, timescale) {\r\n        const segmentTimeline = {};\r\n        const chunks = streamIndex.getElementsByTagName('c');\r\n        const segments = [];\r\n        let segment,\r\n            prevSegment,\r\n            tManifest,\r\n            i, j, r;\r\n        let duration = 0;\r\n\r\n        for (i = 0; i < chunks.length; i++) {\r\n            segment = {};\r\n\r\n            // Get time 't' attribute value\r\n            tManifest = chunks[i].getAttribute('t');\r\n\r\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\r\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\r\n            if (tManifest && BigInt(tManifest).greater(BigInt(Number.MAX_SAFE_INTEGER))) {\r\n                segment.tManifest = tManifest;\r\n            }\r\n            segment.t = parseFloat(tManifest);\r\n\r\n            // Get duration 'd' attribute value\r\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\r\n\r\n            // If 't' not defined for first segment then t=0\r\n            if ((i === 0) && !segment.t) {\r\n                segment.t = 0;\r\n            }\r\n\r\n            if (i > 0) {\r\n                prevSegment = segments[segments.length - 1];\r\n                // Update previous segment duration if not defined\r\n                if (!prevSegment.d) {\r\n                    if (prevSegment.tManifest) {\r\n                        prevSegment.d = BigInt(tManifest).subtract(BigInt(prevSegment.tManifest)).toJSNumber();\r\n                    } else {\r\n                        prevSegment.d = segment.t - prevSegment.t;\r\n                    }\r\n                    duration += prevSegment.d;\r\n                }\r\n                // Set segment absolute timestamp if not set in manifest\r\n                if (!segment.t) {\r\n                    if (prevSegment.tManifest) {\r\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\r\n                        segment.t = parseFloat(segment.tManifest);\r\n                    } else {\r\n                        segment.t = prevSegment.t + prevSegment.d;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (segment.d) {\r\n                duration += segment.d;\r\n            }\r\n\r\n            // Create new segment\r\n            segments.push(segment);\r\n\r\n            // Support for 'r' attribute (i.e. \"repeat\" as in MPEG-DASH)\r\n            r = parseFloat(chunks[i].getAttribute('r'));\r\n            if (r) {\r\n\r\n                for (j = 0; j < (r - 1); j++) {\r\n                    prevSegment = segments[segments.length - 1];\r\n                    segment = {};\r\n                    segment.t = prevSegment.t + prevSegment.d;\r\n                    segment.d = prevSegment.d;\r\n                    if (prevSegment.tManifest) {\r\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\r\n                    }\r\n                    duration += segment.d;\r\n                    segments.push(segment);\r\n                }\r\n            }\r\n        }\r\n\r\n        segmentTimeline.S = segments;\r\n        segmentTimeline.S_asArray = segments;\r\n        segmentTimeline.duration = duration / timescale;\r\n\r\n        return segmentTimeline;\r\n    }\r\n\r\n    function getKIDFromProtectionHeader(protectionHeader) {\r\n        let prHeader,\r\n            wrmHeader,\r\n            xmlReader,\r\n            KID;\r\n\r\n        // Get PlayReady header as byte array (base64 decoded)\r\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\r\n\r\n        // Get Right Management header (WRMHEADER) from PlayReady header\r\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\r\n\r\n        if (wrmHeader) {\r\n            // Convert from multi-byte to unicode\r\n            wrmHeader = new Uint16Array(wrmHeader.buffer);\r\n\r\n            // Convert to string\r\n            wrmHeader = String.fromCharCode.apply(null, wrmHeader);\r\n\r\n            // Parse <WRMHeader> to get KID field value\r\n            xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\r\n            KID = xmlReader.querySelector('KID').textContent;\r\n\r\n            // Get KID (base64 decoded) as byte array\r\n            KID = BASE64.decodeArray(KID);\r\n\r\n            // Convert UUID from little-endian to big-endian\r\n            convertUuidEndianness(KID);\r\n        }\r\n\r\n        return KID;\r\n    }\r\n\r\n    function getWRMHeaderFromPRHeader(prHeader) {\r\n        let length,\r\n            recordCount,\r\n            recordType,\r\n            recordLength,\r\n            recordValue;\r\n        let i = 0;\r\n\r\n        // Parse PlayReady header\r\n\r\n        // Length - 32 bits (LE format)\r\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\r\n        i += 4;\r\n\r\n        // Record count - 16 bits (LE format)\r\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\r\n        i += 2;\r\n\r\n        // Parse records\r\n        while (i < prHeader.length) {\r\n            // Record type - 16 bits (LE format)\r\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\r\n            i += 2;\r\n\r\n            // Check if Rights Management header (record type = 0x01)\r\n            if (recordType === 0x01) {\r\n\r\n                // Record length - 16 bits (LE format)\r\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\r\n                i += 2;\r\n\r\n                // Record value => contains <WRMHEADER>\r\n                recordValue = new Uint8Array(recordLength);\r\n                recordValue.set(prHeader.subarray(i, i + recordLength));\r\n                return recordValue;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function convertUuidEndianness(uuid) {\r\n        swapBytes(uuid, 0, 3);\r\n        swapBytes(uuid, 1, 2);\r\n        swapBytes(uuid, 4, 5);\r\n        swapBytes(uuid, 6, 7);\r\n    }\r\n\r\n    function swapBytes(bytes, pos1, pos2) {\r\n        const temp = bytes[pos1];\r\n        bytes[pos1] = bytes[pos2];\r\n        bytes[pos2] = temp;\r\n    }\r\n\r\n\r\n    function createPRContentProtection(protectionHeader) {\r\n        let pro = {\r\n            __text: protectionHeader.firstChild.data,\r\n            __prefix: 'mspr'\r\n        };\r\n        return {\r\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\r\n            value: 'com.microsoft.playready',\r\n            pro: pro,\r\n            pro_asArray: pro\r\n        };\r\n    }\r\n\r\n    function createWidevineContentProtection(KID) {\r\n        let widevineCP = {\r\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\r\n            value: 'com.widevine.alpha'\r\n        };\r\n        if (!KID)\r\n            return widevineCP;\r\n        // Create Widevine CENC header (Protocol Buffer) with KID value\r\n        const wvCencHeader = new Uint8Array(2 + KID.length);\r\n        wvCencHeader[0] = 0x12;\r\n        wvCencHeader[1] = 0x10;\r\n        wvCencHeader.set(KID, 2);\r\n\r\n        // Create a pssh box\r\n        const length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\r\n        let pssh = new Uint8Array(length);\r\n        let i = 0;\r\n\r\n        // Set box length value\r\n        pssh[i++] = (length & 0xFF000000) >> 24;\r\n        pssh[i++] = (length & 0x00FF0000) >> 16;\r\n        pssh[i++] = (length & 0x0000FF00) >> 8;\r\n        pssh[i++] = (length & 0x000000FF);\r\n\r\n        // Set type ('pssh'), version (0) and flags (0)\r\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\r\n        i += 8;\r\n\r\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\r\n        pssh.set([0xed, 0xef, 0x8b, 0xa9, 0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\r\n        i += 16;\r\n\r\n        // Set data length value\r\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\r\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\r\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\r\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\r\n\r\n        // Copy Widevine CENC header\r\n        pssh.set(wvCencHeader, i);\r\n\r\n        // Convert to BASE64 string\r\n        pssh = String.fromCharCode.apply(null, pssh);\r\n        pssh = BASE64.encodeASCII(pssh);\r\n\r\n        widevineCP.pssh = { __text: pssh };\r\n\r\n        return widevineCP;\r\n    }\r\n\r\n    function processManifest(xmlDoc) {\r\n        const manifest = {};\r\n        const contentProtections = [];\r\n        const smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\r\n        const protection = xmlDoc.getElementsByTagName('Protection')[0];\r\n        let protectionHeader = null;\r\n        let period,\r\n            adaptations,\r\n            contentProtection,\r\n            KID,\r\n            timestampOffset,\r\n            startTime,\r\n            segments,\r\n            timescale,\r\n            segmentDuration,\r\n            i, j;\r\n\r\n        // Set manifest node properties\r\n        manifest.protocol = 'MSS';\r\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\r\n        manifest.type = getAttributeAsBoolean(smoothStreamingMedia, 'IsLive') ? 'dynamic' : 'static';\r\n        timescale = smoothStreamingMedia.getAttribute('TimeScale');\r\n        manifest.timescale = timescale ? parseFloat(timescale) : DEFAULT_TIME_SCALE;\r\n        let dvrWindowLength = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));\r\n        // If the DVRWindowLength field is omitted for a live presentation or set to 0, the DVR window is effectively infinite\r\n        if (manifest.type === 'dynamic' && (dvrWindowLength === 0 || isNaN(dvrWindowLength))) {\r\n            dvrWindowLength = Infinity;\r\n        }\r\n        // Star-over\r\n        if (dvrWindowLength === 0 && getAttributeAsBoolean(smoothStreamingMedia, 'CanSeek')) {\r\n            dvrWindowLength = Infinity;\r\n        }\r\n\r\n        if (dvrWindowLength > 0) {\r\n            manifest.timeShiftBufferDepth = dvrWindowLength / manifest.timescale;\r\n        }\r\n\r\n        let duration = parseFloat(smoothStreamingMedia.getAttribute('Duration'));\r\n        manifest.mediaPresentationDuration = (duration === 0) ? Infinity : duration / manifest.timescale;\r\n        // By default, set minBufferTime to 2 sec. (but set below according to video segment duration)\r\n        manifest.minBufferTime = 2;\r\n        manifest.ttmlTimeIsRelative = true;\r\n\r\n        // Live manifest with Duration = start-over\r\n        if (manifest.type === 'dynamic' && duration > 0) {\r\n            manifest.type = 'static';\r\n            // We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline\r\n            manifest.timeShiftBufferDepth = duration / manifest.timescale;\r\n            // Duration will be set according to current segment timeline duration (see below)\r\n        }\r\n\r\n        if (manifest.type === 'dynamic') {\r\n            manifest.refreshManifestOnSwitchTrack = true; // Refresh manifest when switching tracks\r\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes\r\n            manifest.ignorePostponeTimePeriod = true; // Never update manifest\r\n            manifest.availabilityStartTime = new Date(null); // Returns 1970\r\n        }\r\n\r\n        // Map period node to manifest root node\r\n        manifest.Period = mapPeriod(smoothStreamingMedia, manifest.timescale);\r\n        manifest.Period_asArray = [manifest.Period];\r\n\r\n        // Initialize period start time\r\n        period = manifest.Period;\r\n        period.start = 0;\r\n\r\n        // Uncomment to test live to static manifests\r\n        // if (manifest.type !== 'static') {\r\n        //     manifest.type = 'static';\r\n        //     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;\r\n        //     manifest.timeShiftBufferDepth = null;\r\n        // }\r\n\r\n        // ContentProtection node\r\n        if (protection !== undefined) {\r\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\r\n\r\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\r\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\r\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\r\n\r\n            // Get KID (in CENC format) from protection header\r\n            KID = getKIDFromProtectionHeader(protectionHeader);\r\n\r\n            // Create ContentProtection for PlayReady\r\n            contentProtection = createPRContentProtection(protectionHeader);\r\n            contentProtection['cenc:default_KID'] = KID;\r\n            contentProtections.push(contentProtection);\r\n\r\n            // Create ContentProtection for Widevine (as a CENC protection)\r\n            contentProtection = createWidevineContentProtection(KID);\r\n            contentProtection['cenc:default_KID'] = KID;\r\n            contentProtections.push(contentProtection);\r\n\r\n            manifest.ContentProtection = contentProtections;\r\n            manifest.ContentProtection_asArray = contentProtections;\r\n        }\r\n\r\n        adaptations = period.AdaptationSet_asArray;\r\n\r\n        for (i = 0; i < adaptations.length; i += 1) {\r\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\r\n            // Propagate content protection information into each adaptation\r\n            if (manifest.ContentProtection !== undefined) {\r\n                adaptations[i].ContentProtection = manifest.ContentProtection;\r\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\r\n            }\r\n\r\n            if (adaptations[i].contentType === 'video') {\r\n                // Get video segment duration\r\n                segmentDuration = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[0].d / adaptations[i].SegmentTemplate.timescale;\r\n                // Set minBufferTime to one segment duration\r\n                manifest.minBufferTime = segmentDuration;\r\n\r\n                if (manifest.type === 'dynamic') {\r\n                    // Match timeShiftBufferDepth to video segment timeline duration\r\n                    if (manifest.timeShiftBufferDepth > 0 &&\r\n                        manifest.timeShiftBufferDepth !== Infinity &&\r\n                        manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\r\n                        manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Cap minBufferTime to timeShiftBufferDepth\r\n        manifest.minBufferTime = Math.min(manifest.minBufferTime, (manifest.timeShiftBufferDepth ? manifest.timeShiftBufferDepth : Infinity));\r\n\r\n        // In case of live streams:\r\n        // 1- configure player buffering properties according to target live delay\r\n        // 2- adapt live delay and then buffers length in case timeShiftBufferDepth is too small compared to target live delay (see PlaybackController.computeLiveDelay())\r\n        // 3- Set retry attempts and intervals for FragmentInfo requests\r\n        if (manifest.type === 'dynamic') {\r\n            let targetLiveDelay = mediaPlayerModel.getLiveDelay();\r\n            if (!targetLiveDelay) {\r\n                const liveDelayFragmentCount = settings.get().streaming.delay.liveDelayFragmentCount !== null && !isNaN(settings.get().streaming.delay.liveDelayFragmentCount) ? settings.get().streaming.delay.liveDelayFragmentCount : 4;\r\n                targetLiveDelay = segmentDuration * liveDelayFragmentCount;\r\n            }\r\n            let targetDelayCapping = Math.max(manifest.timeShiftBufferDepth - 10/*END_OF_PLAYLIST_PADDING*/, manifest.timeShiftBufferDepth / 2);\r\n            let liveDelay = Math.min(targetDelayCapping, targetLiveDelay);\r\n            // Consider a margin of more than one segment in order to avoid Precondition Failed errors (412), for example if audio and video are not correctly synchronized\r\n            let bufferTime = liveDelay - (segmentDuration * 1.5);\r\n\r\n            // Store initial buffer settings\r\n            initialBufferSettings = {\r\n                'streaming': {\r\n                    'buffer': {\r\n                        'stableBufferTime': settings.get().streaming.buffer.stableBufferTime,\r\n                        'bufferTimeAtTopQuality': settings.get().streaming.buffer.bufferTimeAtTopQuality,\r\n                        'bufferTimeAtTopQualityLongForm': settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm\r\n                    },\r\n                    'timeShiftBuffer': {\r\n                        calcFromSegmentTimeline: settings.get().streaming.timeShiftBuffer.calcFromSegmentTimeline\r\n                    },\r\n                    'delay': {\r\n                        'liveDelay': settings.get().streaming.delay.liveDelay\r\n                    }\r\n                }\r\n            };\r\n\r\n            settings.update({\r\n                'streaming': {\r\n                    'buffer': {\r\n                        'stableBufferTime': bufferTime,\r\n                        'bufferTimeAtTopQuality': bufferTime,\r\n                        'bufferTimeAtTopQualityLongForm': bufferTime\r\n                    },\r\n                    'timeShiftBuffer': {\r\n                        calcFromSegmentTimeline: true\r\n                    },\r\n                    'delay': {\r\n                        'liveDelay': liveDelay\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Delete Content Protection under root manifest node\r\n        delete manifest.ContentProtection;\r\n        delete manifest.ContentProtection_asArray;\r\n\r\n        // In case of VOD streams, check if start time is greater than 0\r\n        // Then determine timestamp offset according to higher audio/video start time\r\n        // (use case = live stream delinearization)\r\n        if (manifest.type === 'static') {\r\n            // In case of start-over stream and manifest reloading (due to track switch)\r\n            // we consider previous timestampOffset to keep timelines synchronized\r\n            var prevManifest = manifestModel.getValue();\r\n            if (prevManifest && prevManifest.timestampOffset) {\r\n                timestampOffset = prevManifest.timestampOffset;\r\n            } else {\r\n                for (i = 0; i < adaptations.length; i++) {\r\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\r\n                        segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\r\n                        startTime = segments[0].t;\r\n                        if (timestampOffset === undefined) {\r\n                            timestampOffset = startTime;\r\n                        }\r\n                        timestampOffset = Math.min(timestampOffset, startTime);\r\n                        // Correct content duration according to minimum adaptation's segment timeline duration\r\n                        // in order to force <video> element sending 'ended' event\r\n                        manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, adaptations[i].SegmentTemplate.SegmentTimeline.duration);\r\n                    }\r\n                }\r\n            }\r\n            if (timestampOffset > 0) {\r\n                // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\r\n                manifest.timestampOffset = timestampOffset;\r\n                for (i = 0; i < adaptations.length; i++) {\r\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\r\n                    for (j = 0; j < segments.length; j++) {\r\n                        if (!segments[j].tManifest) {\r\n                            segments[j].tManifest = segments[j].t.toString();\r\n                        }\r\n                        segments[j].t -= timestampOffset;\r\n                    }\r\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\r\n                        period.start = Math.max(segments[0].t, period.start);\r\n                        adaptations[i].SegmentTemplate.presentationTimeOffset = period.start;\r\n                    }\r\n                }\r\n                period.start /= manifest.timescale;\r\n            }\r\n        }\r\n\r\n        // Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps\r\n        // and then avoid 'ended' event not being raised\r\n        manifest.mediaPresentationDuration = Math.floor(manifest.mediaPresentationDuration * 1000) / 1000;\r\n        period.duration = manifest.mediaPresentationDuration;\r\n\r\n        return manifest;\r\n    }\r\n\r\n    function parseDOM(data) {\r\n        let xmlDoc = null;\r\n\r\n        if (window.DOMParser) {\r\n            const parser = new window.DOMParser();\r\n\r\n            xmlDoc = parser.parseFromString(data, 'text/xml');\r\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\r\n                throw new Error('parsing the manifest failed');\r\n            }\r\n        }\r\n\r\n        return xmlDoc;\r\n    }\r\n\r\n    function getMatchers() {\r\n        return null;\r\n    }\r\n\r\n    function getIron() {\r\n        return null;\r\n    }\r\n\r\n    function internalParse(data) {\r\n        let xmlDoc = null;\r\n        let manifest = null;\r\n\r\n        const startTime = window.performance.now();\r\n\r\n        // Parse the MSS XML manifest\r\n        xmlDoc = parseDOM(data);\r\n\r\n        const xmlParseTime = window.performance.now();\r\n\r\n        if (xmlDoc === null) {\r\n            return null;\r\n        }\r\n\r\n        // Convert MSS manifest into DASH manifest\r\n        manifest = processManifest(xmlDoc, new Date());\r\n\r\n        const mss2dashTime = window.performance.now();\r\n\r\n        logger.info('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\r\n\r\n        return manifest;\r\n    }\r\n\r\n    function reset() {\r\n        // Restore initial buffer settings\r\n        if (initialBufferSettings) {\r\n            settings.update(initialBufferSettings);\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        parse: internalParse,\r\n        getMatchers: getMatchers,\r\n        getIron: getIron,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssParser.__dashjs_factory_name = 'MssParser';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport DataChunk from '../streaming/vo/DataChunk';\r\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\r\nimport MssFragmentInfoController from './MssFragmentInfoController';\r\nimport MssFragmentProcessor from './MssFragmentProcessor';\r\nimport MssParser from './parser/MssParser';\r\nimport MssErrors from './errors/MssErrors';\r\nimport DashJSError from '../streaming/vo/DashJSError';\r\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\r\n\r\nfunction MssHandler(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const constants = config.constants;\r\n    const initSegmentType = config.initSegmentType;\r\n    const dashMetrics = config.dashMetrics;\r\n    const playbackController = config.playbackController;\r\n    const streamController = config.streamController;\r\n    const protectionController = config.protectionController;\r\n    const mssFragmentProcessor = MssFragmentProcessor(context).create({\r\n        dashMetrics: dashMetrics,\r\n        playbackController: playbackController,\r\n        protectionController: protectionController,\r\n        streamController: streamController,\r\n        eventBus: eventBus,\r\n        constants: constants,\r\n        ISOBoxer: config.ISOBoxer,\r\n        debug: config.debug,\r\n        errHandler: config.errHandler\r\n    });\r\n    let mssParser,\r\n        fragmentInfoControllers,\r\n        instance;\r\n\r\n    function setup() {\r\n        fragmentInfoControllers = [];\r\n    }\r\n\r\n    function getStreamProcessor(type) {\r\n        return streamController.getActiveStreamProcessors().filter(processor => {\r\n            return processor.getType() === type;\r\n        })[0];\r\n    }\r\n\r\n    function getFragmentInfoController(type) {\r\n        return fragmentInfoControllers.filter(controller => {\r\n            return (controller.getType() === type);\r\n        })[0];\r\n    }\r\n\r\n    function createDataChunk(request, streamId, endFragment) {\r\n        const chunk = new DataChunk();\r\n\r\n        chunk.streamId = streamId;\r\n        chunk.mediaInfo = request.mediaInfo;\r\n        chunk.segmentType = request.type;\r\n        chunk.start = request.startTime;\r\n        chunk.duration = request.duration;\r\n        chunk.end = chunk.start + chunk.duration;\r\n        chunk.index = request.index;\r\n        chunk.quality = request.quality;\r\n        chunk.representationId = request.representationId;\r\n        chunk.endFragment = endFragment;\r\n\r\n        return chunk;\r\n    }\r\n\r\n    function startFragmentInfoControllers() {\r\n\r\n        // Create MssFragmentInfoControllers for each StreamProcessor of active stream (only for audio, video or text)\r\n        let processors = streamController.getActiveStreamProcessors();\r\n        processors.forEach(function (processor) {\r\n            if (processor.getType() === constants.VIDEO ||\r\n                processor.getType() === constants.AUDIO ||\r\n                processor.getType() === constants.TEXT) {\r\n\r\n                let fragmentInfoController = getFragmentInfoController(processor.getType());\r\n                if (!fragmentInfoController) {\r\n                    fragmentInfoController = MssFragmentInfoController(context).create({\r\n                        streamProcessor: processor,\r\n                        baseURLController: config.baseURLController,\r\n                        debug: config.debug\r\n                    });\r\n                    fragmentInfoController.initialize();\r\n                    fragmentInfoControllers.push(fragmentInfoController);\r\n                }\r\n                fragmentInfoController.start();\r\n            }\r\n        });\r\n    }\r\n\r\n    function stopFragmentInfoControllers() {\r\n        fragmentInfoControllers.forEach(c => {\r\n            c.reset();\r\n        });\r\n        fragmentInfoControllers = [];\r\n    }\r\n\r\n    function onInitFragmentNeeded(e) {\r\n        let streamProcessor = getStreamProcessor(e.mediaType);\r\n        if (!streamProcessor) return;\r\n\r\n        // Create init segment request\r\n        let representationController = streamProcessor.getRepresentationController();\r\n        let representation = representationController.getCurrentRepresentation();\r\n        let mediaInfo = streamProcessor.getMediaInfo();\r\n\r\n        let request = new FragmentRequest();\r\n        request.mediaType = representation.adaptation.type;\r\n        request.type = initSegmentType;\r\n        request.range = representation.range;\r\n        request.quality = representation.index;\r\n        request.mediaInfo = mediaInfo;\r\n        request.representationId = representation.id;\r\n\r\n        const chunk = createDataChunk(request, mediaInfo.streamInfo.id, e.type !== events.FRAGMENT_LOADING_PROGRESS);\r\n\r\n        try {\r\n            // Generate init segment (moov)\r\n            chunk.bytes = mssFragmentProcessor.generateMoov(representation);\r\n\r\n            // Notify init segment has been loaded\r\n            eventBus.trigger(events.INIT_FRAGMENT_LOADED,\r\n                { chunk: chunk },\r\n                { streamId: mediaInfo.streamInfo.id, mediaType: representation.adaptation.type }\r\n            );\r\n        } catch (e) {\r\n            config.errHandler.error(new DashJSError(e.code, e.message, e.data));\r\n        }\r\n\r\n        // Change the sender value to stop event to be propagated\r\n        e.sender = null;\r\n    }\r\n\r\n    function onSegmentMediaLoaded(e) {\r\n        if (e.error)  return;\r\n\r\n        let streamProcessor = getStreamProcessor(e.request.mediaType);\r\n        if (!streamProcessor) return;\r\n\r\n        // Process moof to transcode it from MSS to DASH (or to update segment timeline for SegmentInfo fragments)\r\n        mssFragmentProcessor.processFragment(e, streamProcessor);\r\n\r\n        if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\r\n            // If FragmentInfo loaded, then notify corresponding MssFragmentInfoController\r\n            let fragmentInfoController = getFragmentInfoController(e.request.mediaType);\r\n            if (fragmentInfoController) {\r\n                fragmentInfoController.fragmentInfoLoaded(e);\r\n            }\r\n        }\r\n\r\n        // Start MssFragmentInfoControllers in case of start-over streams\r\n        let manifestInfo = e.request.mediaInfo.streamInfo.manifestInfo;\r\n        if (!manifestInfo.isDynamic && manifestInfo.dvrWindowSize !== Infinity) {\r\n            startFragmentInfoControllers();\r\n        }\r\n    }\r\n\r\n    function onPlaybackPaused() {\r\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\r\n            startFragmentInfoControllers();\r\n        }\r\n    }\r\n\r\n    function onPlaybackSeekAsked() {\r\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\r\n            startFragmentInfoControllers();\r\n        }\r\n    }\r\n\r\n    function onTTMLPreProcess(ttmlSubtitles) {\r\n        if (!ttmlSubtitles || !ttmlSubtitles.data) {\r\n            return;\r\n        }\r\n\r\n        ttmlSubtitles.data = ttmlSubtitles.data.replace(/http:\\/\\/www.w3.org\\/2006\\/10\\/ttaf1/gi, 'http://www.w3.org/ns/ttml');\r\n    }\r\n\r\n    function registerEvents() {\r\n        eventBus.on(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\r\n        eventBus.on(events.PLAYBACK_PAUSED, onPlaybackPaused, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\r\n        eventBus.on(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\r\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\r\n        eventBus.on(events.TTML_TO_PARSE, onTTMLPreProcess, instance);\r\n    }\r\n\r\n    function reset() {\r\n        if (mssParser) {\r\n            mssParser.reset();\r\n            mssParser = undefined;\r\n        }\r\n\r\n        eventBus.off(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, this);\r\n        eventBus.off(events.PLAYBACK_PAUSED, onPlaybackPaused, this);\r\n        eventBus.off(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, this);\r\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, this);\r\n        eventBus.off(events.TTML_TO_PARSE, onTTMLPreProcess, this);\r\n\r\n        // Reset FragmentInfoControllers\r\n        stopFragmentInfoControllers();\r\n    }\r\n\r\n    function createMssParser() {\r\n        mssParser = MssParser(context).create(config);\r\n        return mssParser;\r\n    }\r\n\r\n    instance = {\r\n        reset: reset,\r\n        createMssParser: createMssParser,\r\n        registerEvents: registerEvents\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssHandler.__dashjs_factory_name = 'MssHandler';\r\nconst factory = dashjs.FactoryMaker.getClassFactory(MssHandler); /* jshint ignore:line */\r\nfactory.errors = MssErrors;\r\ndashjs.FactoryMaker.updateClassFactory(MssHandler.__dashjs_factory_name, factory); /* jshint ignore:line */\r\nexport default factory; /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MssHandler from './MssHandler';\r\n\r\n// Shove both of these into the global scope\r\nvar context = (typeof window !== 'undefined' && window) || global;\r\n\r\nvar dashjs = context.dashjs;\r\nif (!dashjs) {\r\n    dashjs = context.dashjs = {};\r\n}\r\n\r\ndashjs.MssHandler = MssHandler;\r\n\r\nexport default dashjs;\r\nexport { MssHandler };\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}